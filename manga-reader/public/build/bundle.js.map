{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/modules/InstallPrompt.svelte","../../../shared/util.js","../../../shared/inputHandler.js","../../node_modules/unzipit/dist/unzipit.module.js","../../src/modules/Page.svelte","../../src/modules/Reader.svelte","../../src/modules/VerticalReader.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.5' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n  let deferredPrompt\r\n\r\n  window.addEventListener('beforeinstallprompt', e => {\r\n    e.preventDefault()\r\n    deferredPrompt = e\r\n  })\r\n  async function promptInstall() {\r\n    deferredPrompt.prompt()\r\n    const { outcome } = await deferredPrompt.userChoice\r\n    if (outcome === 'accepted') {\r\n      deferredPrompt = null\r\n    }\r\n  }\r\n  function dismiss() {\r\n    deferredPrompt = null\r\n  }\r\n</script>\r\n\r\n{#if deferredPrompt}\r\n  <div class=\"alert alert-success filled-dm show\" on:click={promptInstall}>\r\n    <h4 class=\"alert-heading\">Install</h4>\r\n    <button class=\"close\" type=\"button\" on:click={dismiss}><span>×</span></button>\r\n    Click here to install the app for more features!\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .alert {\r\n    display: block !important;\r\n    animation: fly-in 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  }\r\n\r\n  @keyframes fly-in {\r\n    0% {\r\n      right: -50rem;\r\n    }\r\n    100% {\r\n      right: 0;\r\n    }\r\n  }\r\n</style>\r\n","/* eslint-env browser */\r\nexport const videoExtensions = ['3g2', '3gp', 'asf', 'avi', 'dv', 'flv', 'gxf', 'm2ts', 'm4a', 'm4b', 'm4p', 'm4r', 'm4v', 'mkv', 'mov', 'mp4', 'mpd', 'mpeg', 'mpg', 'mxf', 'nut', 'ogm', 'ogv', 'swf', 'ts', 'vob', 'webm', 'wmv', 'wtv']\r\nexport const videoRx = new RegExp(`.(${videoExtensions.join('|')})$`, 'i')\r\n\r\nexport const subtitleExtensions = ['srt', 'vtt', 'ass', 'ssa', 'sub', 'txt']\r\nexport const subRx = new RegExp(`.(${subtitleExtensions.join('|')})$`, 'i')\r\n\r\nexport const audioExtensions = ['3gp', '3gpp', '3g2', 'aac', 'adts', 'ac3', 'amr', 'eac3', 'flac', 'mp3', 'm4a', 'mp4', 'mp4a', 'mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a', 'oga', 'ogg', 'mogg', 'spx', 'opus', 'raw', 'wav', 'weba']\r\nexport const audioRx = new RegExp(`.(${audioExtensions.join('|')})$`, 'i')\r\n\r\nexport const imageExtensions = ['apng', 'avif', 'bmp', 'gif', 'ico', 'jpg', 'jpeg', 'jfif', 'pjpeg', 'pjp', 'png', 'svg', 'tif', 'tiff', 'webp']\r\nexport const imageRx = new RegExp(`.(${imageExtensions.join('|')})$`, 'i')\r\n\r\nexport const bookExtensions = ['epub', 'cbr', 'cba', 'cbt', 'cbz', 'cb7', 'zip']\r\nexport const bookRx = new RegExp(`.(${bookExtensions.join('|')})$`, 'i')\r\n\r\nexport function toTS (sec, full) {\r\n  if (isNaN(sec) || sec < 0) {\r\n    switch (full) {\r\n      case 1:\r\n        return '0:00:00.00'\r\n      case 2:\r\n        return '0:00:00'\r\n      case 3:\r\n        return '00:00'\r\n      default:\r\n        return '0:00'\r\n    }\r\n  }\r\n  const hours = Math.floor(sec / 3600)\r\n  let minutes = Math.floor(sec / 60) - hours * 60\r\n  let seconds = full === 1 ? (sec % 60).toFixed(2) : Math.floor(sec % 60)\r\n  if (minutes < 10 && (hours > 0 || full)) minutes = '0' + minutes\r\n  if (seconds < 10) seconds = '0' + seconds\r\n  return (hours > 0 || full === 1 || full === 2) ? hours + ':' + minutes + ':' + seconds : minutes + ':' + seconds\r\n}\r\n\r\nexport const DOMPARSER = new DOMParser().parseFromString.bind(new DOMParser())\r\n\r\nexport function requestTimeout (callback, delay) {\r\n  const startedAt = Date.now()\r\n  let animationFrame = requestAnimationFrame(tick)\r\n  function tick () {\r\n    if (Date.now() - startedAt >= delay) {\r\n      callback()\r\n    } else {\r\n      animationFrame = requestAnimationFrame(tick)\r\n    }\r\n  }\r\n  return {\r\n    clear: () => cancelAnimationFrame(animationFrame)\r\n  }\r\n}\r\n\r\nexport function cancelTimeout (timeout) {\r\n  if (timeout) {\r\n    timeout.clear()\r\n  }\r\n}\r\n","/* eslint-env browser */\r\nimport { audioRx, videoRx, imageRx, subRx, bookRx, audioExtensions, videoExtensions, imageExtensions, subtitleExtensions, bookExtensions, DOMPARSER } from './util'\r\n\r\n// types: image, audio, video, subtitle\r\nexport async function handleItems (transferList = [], types = []) {\r\n  const items = await Promise.all([...transferList].map(item => processItem(item, types)))\r\n  return items.flat().filter(i => i)\r\n}\r\nconst rxMap = {\r\n  audio: audioRx,\r\n  video: videoRx,\r\n  image: imageRx,\r\n  subtitle: subRx,\r\n  book: bookRx\r\n}\r\nconst exMap = {\r\n  audio: audioExtensions,\r\n  video: videoExtensions,\r\n  image: imageExtensions,\r\n  subtitle: subtitleExtensions,\r\n  book: bookExtensions\r\n}\r\nconst selectorMap = {\r\n  image: 'img',\r\n  subtitle: 'input'\r\n}\r\n\r\nasync function processItem (item, types) {\r\n  if (!item) return null\r\n  if (item.type) {\r\n    // type matches File\r\n    if (types.some(type => item.type.indexOf(type) === 0)) return item.getAsFile()\r\n    // text\r\n    if (item.type === 'text/plain') {\r\n      // URL\r\n      if (item.kind === 'string') {\r\n        const string = await new Promise(resolve => item.getAsString(resolve))\r\n        try {\r\n          // URL might be invalid\r\n          const url = new URL(string)\r\n          const type = types.find(type => string.match(rxMap[type]))\r\n          if (url && type) {\r\n            return {\r\n              url: string,\r\n              name: string.substring(string.lastIndexOf('/') + 1),\r\n              type\r\n            }\r\n          }\r\n        } catch (e) { }\r\n        return null\r\n      }\r\n      // Text File\r\n      if (item.kind === 'file') {\r\n        const file = item.getAsFile()\r\n        if (types.some(type => file.name.match(rxMap[type]))) return file\r\n      }\r\n      return null\r\n    }\r\n    // XML or clipboard\r\n    if (item.type === 'text/html') {\r\n      const string = await new Promise(resolve => item.getAsString(resolve))\r\n      const elems = types.map(type => DOMPARSER(string, 'text/html').querySelectorAll(selectorMap[type] || type)).flat()\r\n      if (!elems.length) return null\r\n      return elems.map(elem => {\r\n        const url = elem.src || elem.value\r\n        if (url) {\r\n          return {\r\n            url,\r\n            name: url.substring(url.lastIndexOf('/') + 1)\r\n          }\r\n        }\r\n        return null\r\n      })\r\n    }\r\n  }\r\n  // Folder or unknown file type\r\n  const entry = item.webkitGetAsEntry()\r\n  if (entry?.isDirectory) {\r\n    const entries = await new Promise(resolve => entry.createReader().readEntries(resolve))\r\n    const filePromises = entries.filter(entry => entry.isFile && types.some(type => entry.name.match(rxMap[type]))).map(file => new Promise(resolve => file.file(resolve)))\r\n    return Promise.all(filePromises)\r\n  }\r\n  if (entry?.isFile) {\r\n    if (types.some(type => entry.name.match(rxMap[type]))) {\r\n      return new Promise(resolve => entry.file(resolve))\r\n    }\r\n  }\r\n}\r\nexport function filePopup (types = []) {\r\n  return new Promise(resolve => {\r\n    let input = document.createElement('input')\r\n    input.type = 'file'\r\n    input.multiple = 'multiple'\r\n    input.accept = types.map(type => '.' + exMap[type].join(',.')).flat()\r\n\r\n    input.onchange = async ({ target }) => {\r\n      resolve([...target.files])\r\n      input = null\r\n    }\r\n    input.click()\r\n  })\r\n}\r\n\r\nexport function getSearchFiles (types) {\r\n  const search = [...new URLSearchParams(location.search)]\r\n  if (!search.length) return null\r\n  const files = []\r\n  for (const param of search) {\r\n    const type = types.find(type => param[1].match(rxMap[type]))\r\n    if (type) {\r\n      const name = param[1].substring(Math.max(param[1].lastIndexOf('\\\\') + 2, param[1].lastIndexOf('/') + 1))\r\n      files.push({\r\n        name,\r\n        url: param[1]\r\n      })\r\n    }\r\n  }\r\n  return files\r\n}\r\nexport async function getLaunchFiles () {\r\n  /* global launchQueue */\r\n  return new Promise(resolve => {\r\n    launchQueue.setConsumer(async launchParams => {\r\n      if (!launchParams.files.length) {\r\n        return\r\n      }\r\n      const promises = launchParams.files.map(file => file.getFile())\r\n      // for some fucking reason, the same file can get passed multiple times, why? I still want to future-proof multi-files\r\n      resolve((await Promise.all(promises)).filter((file, index, all) => {\r\n        return all.findIndex(search => {\r\n          return search.name === file.name && search.size === file.size && search.lastModified === file.lastModified\r\n        }) === index\r\n      }))\r\n    })\r\n  })\r\n}\r\n","/* unzipit@1.3.6, license MIT */\n/* global SharedArrayBuffer, process */\n\nfunction readBlobAsArrayBuffer(blob) {\n  if (blob.arrayBuffer) {\n    return blob.arrayBuffer();\n  }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', () => {\n      resolve(reader.result);\n    });\n    reader.addEventListener('error', reject);\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nasync function readBlobAsUint8Array(blob) {\n  const arrayBuffer = await readBlobAsArrayBuffer(blob);\n  return new Uint8Array(arrayBuffer);\n}\n\nfunction isBlob(v) {\n  return typeof Blob !== 'undefined' && v instanceof Blob;\n}\n\nfunction isSharedArrayBuffer(b) {\n  return typeof SharedArrayBuffer !== 'undefined' && b instanceof SharedArrayBuffer;\n}\n\nconst isNode =\n    (typeof process !== 'undefined') &&\n    process.versions &&\n    (typeof process.versions.node !== 'undefined') &&\n    (typeof process.versions.electron === 'undefined');\n\nfunction isTypedArraySameAsArrayBuffer(typedArray) {\n  return typedArray.byteOffset === 0 && typedArray.byteLength === typedArray.buffer.byteLength;\n}\n\nclass ArrayBufferReader {\n  constructor(arrayBufferOrView) {\n    this.typedArray = (arrayBufferOrView instanceof ArrayBuffer || isSharedArrayBuffer(arrayBufferOrView))\n       ? new Uint8Array(arrayBufferOrView)\n       : new Uint8Array(arrayBufferOrView.buffer, arrayBufferOrView.byteOffset, arrayBufferOrView.byteLength);\n  }\n  async getLength() {\n    return this.typedArray.byteLength;\n  }\n  async read(offset, length) {\n    return new Uint8Array(this.typedArray.buffer, this.typedArray.byteOffset + offset, length);\n  }\n}\n\nclass BlobReader {\n  constructor(blob) {\n    this.blob = blob;\n  }\n  async getLength() {\n    return this.blob.size;\n  }\n  async read(offset, length) {\n    const blob = this.blob.slice(offset, offset + length);\n    const arrayBuffer = await readBlobAsArrayBuffer(blob);\n    return new Uint8Array(arrayBuffer);\n  }\n  async sliceAsBlob(offset, length, type = '') {\n    return this.blob.slice(offset, offset + length, type);\n  }\n}\n\nclass HTTPRangeReader {\n  constructor(url) {\n    this.url = url;\n  }\n  async getLength() {\n    if (this.length === undefined) {\n      const req = await fetch(this.url, { method: 'HEAD' });\n      if (!req.ok) {\n        throw new Error(`failed http request ${this.url}, status: ${req.status}: ${req.statusText}`);\n      }\n      this.length = parseInt(req.headers.get('content-length'));\n      if (Number.isNaN(this.length)) {\n        throw Error('could not get length');\n      }\n    }\n    return this.length;\n  }\n  async read(offset, size) {\n    if (size === 0) {\n      return new Uint8Array(0);\n    }\n    const req = await fetch(this.url, {\n      headers: {\n        Range: `bytes=${offset}-${offset + size - 1}`,\n      },\n    });\n    if (!req.ok) {\n      throw new Error(`failed http request ${this.url}, status: ${req.status} offset: ${offset} size: ${size}: ${req.statusText}`);\n    }\n    const buffer = await req.arrayBuffer();\n    return new Uint8Array(buffer);\n  }\n}\n\nfunction inflate(data, buf) {\n\tvar u8=Uint8Array;\n\tif(data[0]==3 && data[1]==0) return (buf ? buf : new u8(0));\n\tvar bitsF = _bitsF, bitsE = _bitsE, decodeTiny = _decodeTiny, get17 = _get17;\n\t\n\tvar noBuf = (buf==null);\n\tif(noBuf) buf = new u8((data.length>>>2)<<3);\n\t\n\tvar BFINAL=0, BTYPE=0, HLIT=0, HDIST=0, HCLEN=0, ML=0, MD=0; \t\n\tvar off = 0, pos = 0;\n\tvar lmap, dmap;\n\t\n\twhile(BFINAL==0) {\t\t\n\t\tBFINAL = bitsF(data, pos  , 1);\n\t\tBTYPE  = bitsF(data, pos+1, 2);  pos+=3;\n\t\t//console.log(BFINAL, BTYPE);\n\t\t\n\t\tif(BTYPE==0) {\n\t\t\tif((pos&7)!=0) pos+=8-(pos&7);\n\t\t\tvar p8 = (pos>>>3)+4, len = data[p8-4]|(data[p8-3]<<8);  //console.log(len);//bitsF(data, pos, 16), \n\t\t\tif(noBuf) buf=_check(buf, off+len);\n\t\t\tbuf.set(new u8(data.buffer, data.byteOffset+p8, len), off);\n\t\t\t//for(var i=0; i<len; i++) buf[off+i] = data[p8+i];\n\t\t\t//for(var i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n\t\t\tpos = ((p8+len)<<3);  off+=len;  continue;\n\t\t}\n\t\tif(noBuf) buf=_check(buf, off+(1<<17));  // really not enough in many cases (but PNG and ZIP provide buffer in advance)\n\t\tif(BTYPE==1) {  lmap = U.flmap;  dmap = U.fdmap;  ML = (1<<9)-1;  MD = (1<<5)-1;   }\n\t\tif(BTYPE==2) {\n\t\t\tHLIT  = bitsE(data, pos   , 5)+257;  \n\t\t\tHDIST = bitsE(data, pos+ 5, 5)+  1;  \n\t\t\tHCLEN = bitsE(data, pos+10, 4)+  4;  pos+=14;\n\t\t\tfor(var i=0; i<38; i+=2) {  U.itree[i]=0;  U.itree[i+1]=0;  }\n\t\t\tvar tl = 1;\n\t\t\tfor(var i=0; i<HCLEN; i++) {  var l=bitsE(data, pos+i*3, 3);  U.itree[(U.ordr[i]<<1)+1] = l;  if(l>tl)tl=l;  }     pos+=3*HCLEN;  //console.log(itree);\n\t\t\tmakeCodes(U.itree, tl);\n\t\t\tcodes2map(U.itree, tl, U.imap);\n\t\t\t\n\t\t\tlmap = U.lmap;  dmap = U.dmap;\n\t\t\t\n\t\t\tpos = decodeTiny(U.imap, (1<<tl)-1, HLIT+HDIST, data, pos, U.ttree);\n\t\t\tvar mx0 = _copyOut(U.ttree,    0, HLIT , U.ltree);  ML = (1<<mx0)-1;\n\t\t\tvar mx1 = _copyOut(U.ttree, HLIT, HDIST, U.dtree);  MD = (1<<mx1)-1;\n\t\t\t\n\t\t\t//var ml = decodeTiny(U.imap, (1<<tl)-1, HLIT , data, pos, U.ltree); ML = (1<<(ml>>>24))-1;  pos+=(ml&0xffffff);\n\t\t\tmakeCodes(U.ltree, mx0);\n\t\t\tcodes2map(U.ltree, mx0, lmap);\n\t\t\t\n\t\t\t//var md = decodeTiny(U.imap, (1<<tl)-1, HDIST, data, pos, U.dtree); MD = (1<<(md>>>24))-1;  pos+=(md&0xffffff);\n\t\t\tmakeCodes(U.dtree, mx1);\n\t\t\tcodes2map(U.dtree, mx1, dmap);\n\t\t}\n\t\t//var ooff=off, opos=pos;\n\t\twhile(true) {\n\t\t\tvar code = lmap[get17(data, pos) & ML];  pos += code&15;\n\t\t\tvar lit = code>>>4;  //U.lhst[lit]++;  \n\t\t\tif((lit>>>8)==0) {  buf[off++] = lit;  }\n\t\t\telse if(lit==256) {  break;  }\n\t\t\telse {\n\t\t\t\tvar end = off+lit-254;\n\t\t\t\tif(lit>264) { var ebs = U.ldef[lit-257];  end = off + (ebs>>>3) + bitsE(data, pos, ebs&7);  pos += ebs&7;  }\n\t\t\t\t//dst[end-off]++;\n\t\t\t\t\n\t\t\t\tvar dcode = dmap[get17(data, pos) & MD];  pos += dcode&15;\n\t\t\t\tvar dlit = dcode>>>4;\n\t\t\t\tvar dbs = U.ddef[dlit], dst = (dbs>>>4) + bitsF(data, pos, dbs&15);  pos += dbs&15;\n\t\t\t\t\n\t\t\t\t//var o0 = off-dst, stp = Math.min(end-off, dst);\n\t\t\t\t//if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n\t\t\t\t//if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n\t\t\t\t//if(dst==1) buf.fill(buf[off-1], off, end);  else\n\t\t\t\tif(noBuf) buf=_check(buf, off+(1<<17));\n\t\t\t\twhile(off<end) {  buf[off]=buf[off++-dst];    buf[off]=buf[off++-dst];  buf[off]=buf[off++-dst];  buf[off]=buf[off++-dst];  }   \n\t\t\t\toff=end;\n\t\t\t\t//while(off!=end) {  buf[off]=buf[off++-dst];  }\n\t\t\t}\n\t\t}\n\t\t//console.log(off-ooff, (pos-opos)>>>3);\n\t}\n\t//console.log(dst);\n\t//console.log(tlen, dlen, off-tlen+tcnt);\n\treturn buf.length==off ? buf : buf.slice(0,off);\n}\nfunction _check(buf, len) {\n\tvar bl=buf.length;  if(len<=bl) return buf;\n\tvar nbuf = new Uint8Array(Math.max(bl<<1,len));  nbuf.set(buf,0);\n\t//for(var i=0; i<bl; i+=4) {  nbuf[i]=buf[i];  nbuf[i+1]=buf[i+1];  nbuf[i+2]=buf[i+2];  nbuf[i+3]=buf[i+3];  }\n\treturn nbuf;\n}\n\nfunction _decodeTiny(lmap, LL, len, data, pos, tree) {\n\tvar bitsE = _bitsE, get17 = _get17;\n\tvar i = 0;\n\twhile(i<len) {\n\t\tvar code = lmap[get17(data, pos)&LL];  pos+=code&15;\n\t\tvar lit = code>>>4; \n\t\tif(lit<=15) {  tree[i]=lit;  i++;  }\n\t\telse {\n\t\t\tvar ll = 0, n = 0;\n\t\t\tif(lit==16) {\n\t\t\t\tn = (3  + bitsE(data, pos, 2));  pos += 2;  ll = tree[i-1];\n\t\t\t}\n\t\t\telse if(lit==17) {\n\t\t\t\tn = (3  + bitsE(data, pos, 3));  pos += 3;\n\t\t\t}\n\t\t\telse if(lit==18) {\n\t\t\t\tn = (11 + bitsE(data, pos, 7));  pos += 7;\n\t\t\t}\n\t\t\tvar ni = i+n;\n\t\t\twhile(i<ni) {  tree[i]=ll;  i++; }\n\t\t}\n\t}\n\treturn pos;\n}\nfunction _copyOut(src, off, len, tree) {\n\tvar mx=0, i=0, tl=tree.length>>>1;\n\twhile(i<len) {  var v=src[i+off];  tree[(i<<1)]=0;  tree[(i<<1)+1]=v;  if(v>mx)mx=v;  i++;  }\n\twhile(i<tl ) {  tree[(i<<1)]=0;  tree[(i<<1)+1]=0;  i++;  }\n\treturn mx;\n}\n\nfunction makeCodes(tree, MAX_BITS) {  // code, length\n\tvar max_code = tree.length;\n\tvar code, bits, n, i, len;\n\t\n\tvar bl_count = U.bl_count;  for(var i=0; i<=MAX_BITS; i++) bl_count[i]=0;\n\tfor(i=1; i<max_code; i+=2) bl_count[tree[i]]++;\n\t\n\tvar next_code = U.next_code;\t// smallest code for each length\n\t\n\tcode = 0;\n\tbl_count[0] = 0;\n\tfor (bits = 1; bits <= MAX_BITS; bits++) {\n\t\tcode = (code + bl_count[bits-1]) << 1;\n\t\tnext_code[bits] = code;\n\t}\n\t\n\tfor (n = 0; n < max_code; n+=2) {\n\t\tlen = tree[n+1];\n\t\tif (len != 0) {\n\t\t\ttree[n] = next_code[len];\n\t\t\tnext_code[len]++;\n\t\t}\n\t}\n}\nfunction codes2map(tree, MAX_BITS, map) {\n\tvar max_code = tree.length;\n\tvar r15 = U.rev15;\n\tfor(var i=0; i<max_code; i+=2) if(tree[i+1]!=0)  {\n\t\tvar lit = i>>1;\n\t\tvar cl = tree[i+1], val = (lit<<4)|cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n\t\tvar rest = (MAX_BITS-cl), i0 = tree[i]<<rest, i1 = i0 + (1<<rest);\n\t\t//tree[i]=r15[i0]>>>(15-MAX_BITS);\n\t\twhile(i0!=i1) {\n\t\t\tvar p0 = r15[i0]>>>(15-MAX_BITS);\n\t\t\tmap[p0]=val;  i0++;\n\t\t}\n\t}\n}\nfunction revCodes(tree, MAX_BITS) {\n\tvar r15 = U.rev15, imb = 15-MAX_BITS;\n\tfor(var i=0; i<tree.length; i+=2) {  var i0 = (tree[i]<<(MAX_BITS-tree[i+1]));  tree[i] = r15[i0]>>>imb;  }\n}\n\nfunction _bitsE(dt, pos, length) {  return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8)                        )>>>(pos&7))&((1<<length)-1);  }\nfunction _bitsF(dt, pos, length) {  return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16))>>>(pos&7))&((1<<length)-1);  }\n/*\nfunction _get9(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nfunction _get17(dt, pos) {\t// return at least 17 meaningful bytes\n\treturn (dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16) )>>>(pos&7);\n}\nconst U = function(){\n\tvar u16=Uint16Array, u32=Uint32Array;\n\treturn {\n\t\tnext_code : new u16(16),\n\t\tbl_count  : new u16(16),\n\t\tordr : [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ],\n\t\tof0  : [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],\n\t\texb  : [0,0,0,0,0,0,0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,  4,  5,  5,  5,  5,  0,  0,  0,  0],\n\t\tldef : new u16(32),\n\t\tdf0  : [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577, 65535, 65535],\n\t\tdxb  : [0,0,0,0,1,1,2, 2, 3, 3, 4, 4, 5, 5,  6,  6,  7,  7,  8,  8,   9,   9,  10,  10,  11,  11,  12,   12,   13,   13,     0,     0],\n\t\tddef : new u32(32),\n\t\tflmap: new u16(  512),  fltree: [],\n\t\tfdmap: new u16(   32),  fdtree: [],\n\t\tlmap : new u16(32768),  ltree : [],  ttree:[],\n\t\tdmap : new u16(32768),  dtree : [],\n\t\timap : new u16(  512),  itree : [],\n\t\t//rev9 : new u16(  512)\n\t\trev15: new u16(1<<15),\n\t\tlhst : new u32(286), dhst : new u32( 30), ihst : new u32(19),\n\t\tlits : new u32(15000),\n\t\tstrt : new u16(1<<16),\n\t\tprev : new u16(1<<15)\n\t};  \n} ();\n\n(function(){\t\n\tvar len = 1<<15;\n\tfor(var i=0; i<len; i++) {\n\t\tvar x = i;\n\t\tx = (((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1));\n\t\tx = (((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2));\n\t\tx = (((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4));\n\t\tx = (((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8));\n\t\tU.rev15[i] = (((x >>> 16) | (x << 16)))>>>17;\n\t}\n\t\n\tfunction pushV(tgt, n, sv) {  while(n--!=0) tgt.push(0,sv);  }\n\t\n\tfor(var i=0; i<32; i++) {  U.ldef[i]=(U.of0[i]<<3)|U.exb[i];  U.ddef[i]=(U.df0[i]<<4)|U.dxb[i];  }\n\t\n\tpushV(U.fltree, 144, 8);  pushV(U.fltree, 255-143, 9);  pushV(U.fltree, 279-255, 7);  pushV(U.fltree,287-279,8);\n\t/*\n\tvar i = 0;\n\tfor(; i<=143; i++) U.fltree.push(0,8);\n\tfor(; i<=255; i++) U.fltree.push(0,9);\n\tfor(; i<=279; i++) U.fltree.push(0,7);\n\tfor(; i<=287; i++) U.fltree.push(0,8);\n\t*/\n\tmakeCodes(U.fltree, 9);\n\tcodes2map(U.fltree, 9, U.flmap);\n\trevCodes (U.fltree, 9);\n\t\n\tpushV(U.fdtree,32,5);\n\t//for(i=0;i<32; i++) U.fdtree.push(0,5);\n\tmakeCodes(U.fdtree, 5);\n\tcodes2map(U.fdtree, 5, U.fdmap);\n\trevCodes (U.fdtree, 5);\n\t\n\tpushV(U.itree,19,0);  pushV(U.ltree,286,0);  pushV(U.dtree,30,0);  pushV(U.ttree,320,0);\n\t/*\n\tfor(var i=0; i< 19; i++) U.itree.push(0,0);\n\tfor(var i=0; i<286; i++) U.ltree.push(0,0);\n\tfor(var i=0; i< 30; i++) U.dtree.push(0,0);\n\tfor(var i=0; i<320; i++) U.ttree.push(0,0);\n\t*/\n})();\n\nconst crc = {\r\n\ttable : ( function() {\r\n\t   var tab = new Uint32Array(256);\r\n\t   for (var n=0; n<256; n++) {\r\n\t\t\tvar c = n;\r\n\t\t\tfor (var k=0; k<8; k++) {\r\n\t\t\t\tif (c & 1)  c = 0xedb88320 ^ (c >>> 1);\r\n\t\t\t\telse        c = c >>> 1;\r\n\t\t\t}\r\n\t\t\ttab[n] = c;  }    \r\n\t\treturn tab;  })(),\r\n\tupdate : function(c, buf, off, len) {\r\n\t\tfor (var i=0; i<len; i++)  c = crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);\r\n\t\treturn c;\r\n\t},\r\n\tcrc : function(b,o,l)  {  return crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }\r\n};\r\n\r\nfunction inflateRaw(file, buf) {  return inflate(file, buf);  }\n\n/* global module */\n\nconst config = {\n  numWorkers: 1,\n  workerURL: '',\n  useWorkers: false,\n};\n\nlet nextId = 0;\n\n// Requests are put on a queue.\n// We don't send the request to the worker until the worker\n// is finished. This probably adds a small amount of latency\n// but the issue is imagine you have 2 workers. You give worker\n// A x seconds of work to do and worker B y seconds of work to\n// do. You don't know which will finish first. If you give\n// the worker with more work to do the request then you'll\n// waste time.\n\n// note: we can't check `workers.length` for deciding if\n// we've reached `config.numWorkers` because creation the worker\n// is async which means other requests to make workers might\n// come in before a worker gets added to `workers`\nlet numWorkers = 0;\nlet canUseWorkers = true;   // gets set to false if we can't start a worker\nconst workers = [];\nconst availableWorkers = [];\nconst waitingForWorkerQueue = [];\nconst currentlyProcessingIdToRequestMap = new Map();\n\nfunction handleResult(e) {\n  makeWorkerAvailable(e.target);\n  const {id, error, data} = e.data;\n  const request = currentlyProcessingIdToRequestMap.get(id);\n  currentlyProcessingIdToRequestMap.delete(id);\n  if (error) {\n    request.reject(error);\n  } else {\n    request.resolve(data);\n  }\n}\n\n// Because Firefox uses non-standard onerror to signal an error.\nfunction startWorker(url) {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker(url);\n    worker.onmessage = (e) => {\n      if (e.data === 'start') {\n        worker.onerror = undefined;\n        worker.onmessage = undefined;\n        resolve(worker);\n      } else {\n        reject(new Error(`unexpected message: ${e.data}`));\n      }\n    };\n    worker.onerror = reject;\n  });\n}\n\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\nconst workerHelper = (function() {\n  if (isNode) {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    const {Worker} = dynamicRequire(module, 'worker_threads');\n    return {\n      async createWorker(url) {\n        return new Worker(url);\n      },\n      addEventListener(worker, fn) {\n        worker.on('message', (data) => {\n          fn({target: worker, data});\n        });\n      },\n      async terminate(worker) {\n        await worker.terminate();\n      },\n    };\n  } else {\n    return {\n      async createWorker(url) {\n        // I don't understand this security issue\n        // Apparently there is some iframe setting or http header\n        // that prevents cross domain workers. But, I can manually\n        // download the text and do it. I reported this to Chrome\n        // and they said it was fine so ¯\\_(ツ)_/¯\n        try {\n          const worker = await startWorker(url);\n          return worker;\n        } catch (e) {\n          console.warn('could not load worker:', url);\n        }\n\n        let text;\n        try {\n          const req = await fetch(url, {mode: 'cors'});\n          if (!req.ok) {\n            throw new Error(`could not load: ${url}`);\n          }\n          text = await req.text();\n          url = URL.createObjectURL(new Blob([text], {type: 'application/javascript'}));\n          const worker = await startWorker(url);\n          config.workerURL = url;  // this is a hack. What's a better way to structure this code?\n          return worker;\n        } catch (e) {\n          console.warn('could not load worker via fetch:', url);\n        }\n\n        if (text !== undefined) {\n          try {\n            url = `data:application/javascript;base64,${btoa(text)}`;\n            const worker = await startWorker(url);\n            config.workerURL = url;\n            return worker;\n          } catch (e) {\n            console.warn('could not load worker via dataURI');\n          }\n        }\n\n        console.warn('workers will not be used');\n        throw new Error('can not start workers');\n      },\n      addEventListener(worker, fn) {\n        worker.addEventListener('message', fn);\n      },\n      async terminate(worker) {\n        worker.terminate();\n      },\n    };\n  }\n}());\n\nfunction makeWorkerAvailable(worker) {\n  availableWorkers.push(worker);\n  processWaitingForWorkerQueue();\n}\n\nasync function getAvailableWorker() {\n  if (availableWorkers.length === 0 && numWorkers < config.numWorkers) {\n    ++numWorkers;  // see comment at numWorkers declaration\n    try {\n      const worker = await workerHelper.createWorker(config.workerURL);\n      workers.push(worker);\n      availableWorkers.push(worker);\n      workerHelper.addEventListener(worker, handleResult);\n    } catch (e) {\n      // set this global out-of-band (needs refactor)\n      canUseWorkers = false;\n    }\n  }\n  return availableWorkers.pop();\n}\n\n// @param {Uint8Array} src\n// @param {number} uncompressedSize\n// @param {string} [type] mime-type\n// @returns {ArrayBuffer|Blob} ArrayBuffer if type is falsy or Blob otherwise.\nfunction inflateRawLocal(src, uncompressedSize, type, resolve) {\n  const dst = new Uint8Array(uncompressedSize);\n  inflateRaw(src, dst);\n  resolve(type\n     ? new Blob([dst], {type})\n     : dst.buffer);\n}\n\nasync function processWaitingForWorkerQueue() {\n  if (waitingForWorkerQueue.length === 0) {\n    return;\n  }\n\n  if (config.useWorkers && canUseWorkers) {\n    const worker = await getAvailableWorker();\n    // canUseWorkers might have been set out-of-band (need refactor)\n    if (canUseWorkers) {\n      if (worker) {\n        if (waitingForWorkerQueue.length === 0) {\n          // the queue might be empty while we awaited for a worker.\n          makeWorkerAvailable(worker);\n          return;\n        }\n        const {id, src, uncompressedSize, type, resolve, reject} = waitingForWorkerQueue.shift();\n        currentlyProcessingIdToRequestMap.set(id, {id, resolve, reject});\n        const transferables = [];\n        // NOTE: Originally I thought you could transfer an ArrayBuffer.\n        // The code on this side is often using views into the entire file\n        // which means if we transferred we'd lose the entire file. That sucks\n        // because it means there's an expensive copy to send the uncompressed\n        // data to the worker.\n        //\n        // Also originally I thought we could send a Blob but we'd need to refactor\n        // the code in unzipit/readEntryData as currently it reads the uncompressed\n        // bytes.\n        //\n        //if (!isBlob(src) && !isSharedArrayBuffer(src)) {\n        //  transferables.push(src);\n        //}\n        worker.postMessage({\n          type: 'inflate',\n          data: {\n            id,\n            type,\n            src,\n            uncompressedSize,\n          },\n        }, transferables);\n      }\n      return;\n    }\n  }\n\n  // inflate locally\n  // We loop here because what happens if many requests happen at once\n  // the first N requests will try to async make a worker. Other requests\n  // will then be on the queue. But if we fail to make workers then there\n  // are pending requests.\n  while (waitingForWorkerQueue.length) {\n    const {src, uncompressedSize, type, resolve} = waitingForWorkerQueue.shift();\n    let data = src;\n    if (isBlob(src)) {\n      data = await readBlobAsUint8Array(src);\n    }\n    inflateRawLocal(data, uncompressedSize, type, resolve);\n  }\n}\n\nfunction setOptions(options) {\n  config.workerURL = options.workerURL || config.workerURL;\n  // there's no reason to set the workerURL if you're not going to use workers\n  if (options.workerURL) {\n    config.useWorkers = true;\n  }\n  config.useWorkers = options.useWorkers !== undefined ? options.useWorkers : config.useWorkers;\n  config.numWorkers = options.numWorkers || config.numWorkers;\n}\n\n// It has to take non-zero time to put a large typed array in a Blob since the very\n// next instruction you could change the contents of the array. So, if you're reading\n// the zip file for images/video/audio then all you want is a Blob on which to get a URL.\n// so that operation of putting the data in a Blob should happen in the worker.\n//\n// Conversely if you want the data itself then you want an ArrayBuffer immediately\n// since the worker can transfer its ArrayBuffer zero copy.\n//\n// @param {Uint8Array|Blob} src\n// @param {number} uncompressedSize\n// @param {string} [type] falsy or mimeType string (eg: 'image/png')\n// @returns {ArrayBuffer|Blob} ArrayBuffer if type is falsy or Blob otherwise.\nfunction inflateRawAsync(src, uncompressedSize, type) {\n  return new Promise((resolve, reject) => {\n    // note: there is potential an expensive copy here. In order for the data\n    // to make it into the worker we need to copy the data to the worker unless\n    // it's a Blob or a SharedArrayBuffer.\n    //\n    // Solutions:\n    //\n    // 1. A minor enhancement, if `uncompressedSize` is small don't call the worker.\n    //\n    //    might be a win period as their is overhead calling the worker\n    //\n    // 2. Move the entire library to the worker\n    //\n    //    Good, Maybe faster if you pass a URL, Blob, or SharedArrayBuffer? Not sure about that\n    //    as those are also easy to transfer. Still slow if you pass an ArrayBuffer\n    //    as the ArrayBuffer has to be copied to the worker.\n    //\n    // I guess benchmarking is really the only thing to try.\n    waitingForWorkerQueue.push({src, uncompressedSize, type, resolve, reject, id: nextId++});\n    processWaitingForWorkerQueue();\n  });\n}\n\nfunction clearArray(arr) {\n  arr.splice(0, arr.length);\n}\n\nasync function cleanup() {\n  for (const worker of workers) {\n    await workerHelper.terminate(worker);\n  }\n  clearArray(workers);\n  clearArray(availableWorkers);\n  clearArray(waitingForWorkerQueue);\n  currentlyProcessingIdToRequestMap.clear();\n  numWorkers = 0;\n  canUseWorkers = true;\n}\n\n/*\nclass Zip {\n  constructor(reader) {\n    comment,  // the comment for this entry\n    commentBytes, // the raw comment for this entry\n  }\n}\n*/\n\nfunction dosDateTimeToDate(date, time) {\n  const day = date & 0x1f; // 1-31\n  const month = (date >> 5 & 0xf) - 1; // 1-12, 0-11\n  const year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108\n\n  const millisecond = 0;\n  const second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)\n  const minute = time >> 5 & 0x3f; // 0-59\n  const hour = time >> 11 & 0x1f; // 0-23\n\n  return new Date(year, month, day, hour, minute, second, millisecond);\n}\n\nclass ZipEntry {\n  constructor(reader, rawEntry) {\n    this._reader = reader;\n    this._rawEntry = rawEntry;\n    this.name = rawEntry.name;\n    this.nameBytes = rawEntry.nameBytes;\n    this.size = rawEntry.uncompressedSize;\n    this.compressedSize = rawEntry.compressedSize;\n    this.comment = rawEntry.comment;\n    this.commentBytes = rawEntry.commentBytes;\n    this.compressionMethod = rawEntry.compressionMethod;\n    this.lastModDate = dosDateTimeToDate(rawEntry.lastModFileDate, rawEntry.lastModFileTime);\n    this.isDirectory = rawEntry.uncompressedSize === 0 && rawEntry.name.endsWith('/');\n    this.encrypted = !!(rawEntry.generalPurposeBitFlag & 0x1);\n  }\n  // returns a promise that returns a Blob for this entry\n  async blob(type = 'application/octet-stream') {\n    return await readEntryDataAsBlob(this._reader, this._rawEntry, type);\n  }\n  // returns a promise that returns an ArrayBuffer for this entry\n  async arrayBuffer() {\n    return await readEntryDataAsArrayBuffer(this._reader, this._rawEntry);\n  }\n  // returns text, assumes the text is valid utf8. If you want more options decode arrayBuffer yourself\n  async text() {\n    const buffer = await this.arrayBuffer();\n    return decodeBuffer(new Uint8Array(buffer));\n  }\n  // returns text with JSON.parse called on it. If you want more options decode arrayBuffer yourself\n  async json() {\n    const text = await this.text();\n    return JSON.parse(text);\n  }\n}\n\nconst EOCDR_WITHOUT_COMMENT_SIZE = 22;\nconst MAX_COMMENT_SIZE = 0xffff; // 2-byte size\nconst EOCDR_SIGNATURE = 0x06054b50;\nconst ZIP64_EOCDR_SIGNATURE = 0x06064b50;\n\nasync function readAs(reader, offset, length) {\n  return await reader.read(offset, length);\n}\n\n// The point of this function is we want to be able to pass the data\n// to a worker as fast as possible so when decompressing if the data\n// is already a blob and we can get a blob then get a blob.\n//\n// I'm not sure what a better way to refactor this is. We've got examples\n// of multiple readers. Ideally, for every type of reader we could ask\n// it, \"give me a type that is zero copy both locally and when sent to a worker\".\n//\n// The problem is the worker would also have to know the how to handle this\n// opaque type. I suppose the correct solution is to register different\n// reader handlers in the worker so BlobReader would register some\n// `handleZeroCopyType<BlobReader>`. At the moment I don't feel like\n// refactoring. As it is you just pass in an instance of the reader\n// but instead you'd have to register the reader and some how get the\n// source for the `handleZeroCopyType` handler function into the worker.\n// That sounds like a huge PITA, requiring you to put the implementation\n// in a separate file so the worker can load it or some other workaround\n// hack.\n//\n// For now this hack works even if it's not generic.\nasync function readAsBlobOrTypedArray(reader, offset, length, type) {\n  if (reader.sliceAsBlob) {\n    return await reader.sliceAsBlob(offset, length, type);\n  }\n  return await reader.read(offset, length);\n}\n\nconst crc$1 = {\n  unsigned() {\n    return 0;\n  },\n};\n\nfunction getUint16LE(uint8View, offset) {\n  return uint8View[offset    ] +\n         uint8View[offset + 1] * 0x100;\n}\n\nfunction getUint32LE(uint8View, offset) {\n  return uint8View[offset    ] +\n         uint8View[offset + 1] * 0x100 +\n         uint8View[offset + 2] * 0x10000 +\n         uint8View[offset + 3] * 0x1000000;\n}\n\nfunction getUint64LE(uint8View, offset) {\n  return getUint32LE(uint8View, offset) +\n         getUint32LE(uint8View, offset + 4) * 0x100000000;\n}\n\n/* eslint-disable no-irregular-whitespace */\n// const decodeCP437 = (function() {\n//   const cp437 = '\\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';\n//\n//   return function(uint8view) {\n//     return Array.from(uint8view).map(v => cp437[v]).join('');\n//   };\n// }());\n/* eslint-enable no-irregular-whitespace */\n\nconst utf8Decoder = new TextDecoder();\nfunction decodeBuffer(uint8View, isUTF8) {  /* eslint-disable-line no-unused-vars */ /* lgtm [js/superfluous-trailing-arguments] */\n  if (isSharedArrayBuffer(uint8View.buffer)) {\n    uint8View = new Uint8Array(uint8View);\n  }\n  return utf8Decoder.decode(uint8View);\n  /*\n  AFAICT the UTF8 flat is not set so it's 100% up to the user\n  to self decode if their file is not utf8 filenames\n  return isUTF8\n      ? utf8Decoder.decode(uint8View)\n      : decodeCP437(uint8View);\n  */\n}\n\nasync function findEndOfCentralDirector(reader, totalLength) {\n  const size = Math.min(EOCDR_WITHOUT_COMMENT_SIZE + MAX_COMMENT_SIZE, totalLength);\n  const readStart = totalLength - size;\n  const data = await readAs(reader, readStart, size);\n  for (let i = size - EOCDR_WITHOUT_COMMENT_SIZE; i >= 0; --i) {\n    if (getUint32LE(data, i) !== EOCDR_SIGNATURE) {\n      continue;\n    }\n\n    // 0 - End of central directory signature\n    const eocdr = new Uint8Array(data.buffer, data.byteOffset + i, data.byteLength - i);\n    // 4 - Number of this disk\n    const diskNumber = getUint16LE(eocdr, 4);\n    if (diskNumber !== 0) {\n      throw new Error(`multi-volume zip files are not supported. This is volume: ${diskNumber}`);\n    }\n\n    // 6 - Disk where central directory starts\n    // 8 - Number of central directory records on this disk\n    // 10 - Total number of central directory records\n    const entryCount = getUint16LE(eocdr, 10);\n    // 12 - Size of central directory (bytes)\n    const centralDirectorySize = getUint32LE(eocdr, 12);\n    // 16 - Offset of start of central directory, relative to start of archive\n    const centralDirectoryOffset = getUint32LE(eocdr, 16);\n    // 20 - Comment length\n    const commentLength = getUint16LE(eocdr, 20);\n    const expectedCommentLength = eocdr.length - EOCDR_WITHOUT_COMMENT_SIZE;\n    if (commentLength !== expectedCommentLength) {\n      throw new Error(`invalid comment length. expected: ${expectedCommentLength}, actual: ${commentLength}`);\n    }\n\n    // 22 - Comment\n    // the encoding is always cp437.\n    const commentBytes = new Uint8Array(eocdr.buffer, eocdr.byteOffset + 22, commentLength);\n    const comment = decodeBuffer(commentBytes);\n\n    if (entryCount === 0xffff || centralDirectoryOffset === 0xffffffff) {\n      return await readZip64CentralDirectory(reader, readStart + i, comment, commentBytes);\n    } else {\n      return await readEntries(reader, centralDirectoryOffset, centralDirectorySize, entryCount, comment, commentBytes);\n    }\n  }\n\n  throw new Error('could not find end of central directory. maybe not zip file');\n}\n\nconst END_OF_CENTRAL_DIRECTORY_LOCATOR_SIGNATURE = 0x07064b50;\n\nasync function readZip64CentralDirectory(reader, offset, comment, commentBytes) {\n  // ZIP64 Zip64 end of central directory locator\n  const zip64EocdlOffset = offset - 20;\n  const eocdl = await readAs(reader, zip64EocdlOffset, 20);\n\n  // 0 - zip64 end of central dir locator signature\n  if (getUint32LE(eocdl, 0) !== END_OF_CENTRAL_DIRECTORY_LOCATOR_SIGNATURE) {\n    throw new Error('invalid zip64 end of central directory locator signature');\n  }\n\n  // 4 - number of the disk with the start of the zip64 end of central directory\n  // 8 - relative offset of the zip64 end of central directory record\n  const zip64EocdrOffset = getUint64LE(eocdl, 8);\n  // 16 - total number of disks\n\n  // ZIP64 end of central directory record\n  const zip64Eocdr = await readAs(reader, zip64EocdrOffset, 56);\n\n  // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)\n  if (getUint32LE(zip64Eocdr, 0) !== ZIP64_EOCDR_SIGNATURE) {\n    throw new Error('invalid zip64 end of central directory record signature');\n  }\n  // 4 - size of zip64 end of central directory record                8 bytes\n  // 12 - version made by                                             2 bytes\n  // 14 - version needed to extract                                   2 bytes\n  // 16 - number of this disk                                         4 bytes\n  // 20 - number of the disk with the start of the central directory  4 bytes\n  // 24 - total number of entries in the central directory on this disk         8 bytes\n  // 32 - total number of entries in the central directory            8 bytes\n  const entryCount = getUint64LE(zip64Eocdr, 32);\n  // 40 - size of the central directory                               8 bytes\n  const centralDirectorySize = getUint64LE(zip64Eocdr, 40);\n  // 48 - offset of start of central directory with respect to the starting disk number     8 bytes\n  const centralDirectoryOffset = getUint64LE(zip64Eocdr, 48);\n  // 56 - zip64 extensible data sector                                (variable size)\n  return readEntries(reader, centralDirectoryOffset, centralDirectorySize, entryCount, comment, commentBytes);\n}\n\nconst CENTRAL_DIRECTORY_FILE_HEADER_SIGNATURE = 0x02014b50;\n\nasync function readEntries(reader, centralDirectoryOffset, centralDirectorySize, rawEntryCount, comment, commentBytes) {\n  let readEntryCursor = 0;\n  const allEntriesBuffer = await readAs(reader, centralDirectoryOffset, centralDirectorySize);\n  const rawEntries = [];\n\n  for (let e = 0; e < rawEntryCount; ++e) {\n    const buffer = allEntriesBuffer.subarray(readEntryCursor, readEntryCursor + 46);\n    // 0 - Central directory file header signature\n    const signature = getUint32LE(buffer, 0);\n    if (signature !== CENTRAL_DIRECTORY_FILE_HEADER_SIGNATURE) {\n      throw new Error(`invalid central directory file header signature: 0x${signature.toString(16)}`);\n    }\n    const rawEntry = {\n      // 4 - Version made by\n      versionMadeBy: getUint16LE(buffer, 4),\n      // 6 - Version needed to extract (minimum)\n      versionNeededToExtract: getUint16LE(buffer, 6),\n      // 8 - General purpose bit flag\n      generalPurposeBitFlag: getUint16LE(buffer, 8),\n      // 10 - Compression method\n      compressionMethod: getUint16LE(buffer, 10),\n      // 12 - File last modification time\n      lastModFileTime: getUint16LE(buffer, 12),\n      // 14 - File last modification date\n      lastModFileDate: getUint16LE(buffer, 14),\n      // 16 - CRC-32\n      crc32: getUint32LE(buffer, 16),\n      // 20 - Compressed size\n      compressedSize: getUint32LE(buffer, 20),\n      // 24 - Uncompressed size\n      uncompressedSize: getUint32LE(buffer, 24),\n      // 28 - File name length (n)\n      fileNameLength: getUint16LE(buffer, 28),\n      // 30 - Extra field length (m)\n      extraFieldLength: getUint16LE(buffer, 30),\n      // 32 - File comment length (k)\n      fileCommentLength: getUint16LE(buffer, 32),\n      // 34 - Disk number where file starts\n      // 36 - Internal file attributes\n      internalFileAttributes: getUint16LE(buffer, 36),\n      // 38 - External file attributes\n      externalFileAttributes: getUint32LE(buffer, 38),\n      // 42 - Relative offset of local file header\n      relativeOffsetOfLocalHeader: getUint32LE(buffer, 42),\n    };\n\n    if (rawEntry.generalPurposeBitFlag & 0x40) {\n      throw new Error('strong encryption is not supported');\n    }\n\n    readEntryCursor += 46;\n\n    const data = allEntriesBuffer.subarray(readEntryCursor, readEntryCursor + rawEntry.fileNameLength + rawEntry.extraFieldLength + rawEntry.fileCommentLength);\n    rawEntry.nameBytes = data.slice(0, rawEntry.fileNameLength);\n    rawEntry.name = decodeBuffer(rawEntry.nameBytes);\n\n    // 46+n - Extra field\n    const fileCommentStart = rawEntry.fileNameLength + rawEntry.extraFieldLength;\n    const extraFieldBuffer = data.slice(rawEntry.fileNameLength, fileCommentStart);\n    rawEntry.extraFields = [];\n    let i = 0;\n    while (i < extraFieldBuffer.length - 3) {\n      const headerId = getUint16LE(extraFieldBuffer, i + 0);\n      const dataSize = getUint16LE(extraFieldBuffer, i + 2);\n      const dataStart = i + 4;\n      const dataEnd = dataStart + dataSize;\n      if (dataEnd > extraFieldBuffer.length) {\n        throw new Error('extra field length exceeds extra field buffer size');\n      }\n      rawEntry.extraFields.push({\n        id: headerId,\n        data: extraFieldBuffer.slice(dataStart, dataEnd),\n      });\n      i = dataEnd;\n    }\n\n    // 46+n+m - File comment\n    rawEntry.commentBytes = data.slice(fileCommentStart, fileCommentStart + rawEntry.fileCommentLength);\n    rawEntry.comment = decodeBuffer(rawEntry.commentBytes);\n\n    readEntryCursor += data.length;\n\n    if (rawEntry.uncompressedSize            === 0xffffffff ||\n        rawEntry.compressedSize              === 0xffffffff ||\n        rawEntry.relativeOffsetOfLocalHeader === 0xffffffff) {\n      // ZIP64 format\n      // find the Zip64 Extended Information Extra Field\n      const zip64ExtraField = rawEntry.extraFields.find(e => e.id === 0x0001);\n      if (!zip64ExtraField) {\n        return new Error('expected zip64 extended information extra field');\n      }\n      const zip64EiefBuffer = zip64ExtraField.data;\n      let index = 0;\n      // 0 - Original Size          8 bytes\n      if (rawEntry.uncompressedSize === 0xffffffff) {\n        if (index + 8 > zip64EiefBuffer.length) {\n          throw new Error('zip64 extended information extra field does not include uncompressed size');\n        }\n        rawEntry.uncompressedSize = getUint64LE(zip64EiefBuffer, index);\n        index += 8;\n      }\n      // 8 - Compressed Size        8 bytes\n      if (rawEntry.compressedSize === 0xffffffff) {\n        if (index + 8 > zip64EiefBuffer.length) {\n          throw new Error('zip64 extended information extra field does not include compressed size');\n        }\n        rawEntry.compressedSize = getUint64LE(zip64EiefBuffer, index);\n        index += 8;\n      }\n      // 16 - Relative Header Offset 8 bytes\n      if (rawEntry.relativeOffsetOfLocalHeader === 0xffffffff) {\n        if (index + 8 > zip64EiefBuffer.length) {\n          throw new Error('zip64 extended information extra field does not include relative header offset');\n        }\n        rawEntry.relativeOffsetOfLocalHeader = getUint64LE(zip64EiefBuffer, index);\n        index += 8;\n      }\n      // 24 - Disk Start Number      4 bytes\n    }\n\n    // check for Info-ZIP Unicode Path Extra Field (0x7075)\n    // see https://github.com/thejoshwolfe/yauzl/issues/33\n    const nameField = rawEntry.extraFields.find(e =>\n        e.id === 0x7075 &&\n        e.data.length >= 6 && // too short to be meaningful\n        e.data[0] === 1 &&    // Version       1 byte      version of this extra field, currently 1\n        getUint32LE(e.data, 1), crc$1.unsigned(rawEntry.nameBytes)); // NameCRC32     4 bytes     File Name Field CRC32 Checksum\n                                                                   // > If the CRC check fails, this UTF-8 Path Extra Field should be\n                                                                   // > ignored and the File Name field in the header should be used instead.\n    if (nameField) {\n        // UnicodeName Variable UTF-8 version of the entry File Name\n        rawEntry.fileName = decodeBuffer(nameField.data.slice(5));\n    }\n\n    // validate file size\n    if (rawEntry.compressionMethod === 0) {\n      let expectedCompressedSize = rawEntry.uncompressedSize;\n      if ((rawEntry.generalPurposeBitFlag & 0x1) !== 0) {\n        // traditional encryption prefixes the file data with a header\n        expectedCompressedSize += 12;\n      }\n      if (rawEntry.compressedSize !== expectedCompressedSize) {\n        throw new Error(`compressed size mismatch for stored file: ${rawEntry.compressedSize} != ${expectedCompressedSize}`);\n      }\n    }\n    rawEntries.push(rawEntry);\n  }\n  const zip = {\n    comment,\n    commentBytes,\n  };\n  return {\n    zip,\n    entries: rawEntries.map(e => new ZipEntry(reader, e)),\n  };\n}\n\nasync function readEntryDataHeader(reader, rawEntry) {\n  if (rawEntry.generalPurposeBitFlag & 0x1) {\n    throw new Error('encrypted entries not supported');\n  }\n  const buffer = await readAs(reader, rawEntry.relativeOffsetOfLocalHeader, 30);\n  // note: maybe this should be passed in or cached on entry\n  // as it's async so there will be at least one tick (not sure about that)\n  const totalLength = await reader.getLength();\n\n  // 0 - Local file header signature = 0x04034b50\n  const signature = getUint32LE(buffer, 0);\n  if (signature !== 0x04034b50) {\n    throw new Error(`invalid local file header signature: 0x${signature.toString(16)}`);\n  }\n\n  // all this should be redundant\n  // 4 - Version needed to extract (minimum)\n  // 6 - General purpose bit flag\n  // 8 - Compression method\n  // 10 - File last modification time\n  // 12 - File last modification date\n  // 14 - CRC-32\n  // 18 - Compressed size\n  // 22 - Uncompressed size\n  // 26 - File name length (n)\n  const fileNameLength = getUint16LE(buffer, 26);\n  // 28 - Extra field length (m)\n  const extraFieldLength = getUint16LE(buffer, 28);\n  // 30 - File name\n  // 30+n - Extra field\n  const localFileHeaderEnd = rawEntry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;\n  let decompress;\n  if (rawEntry.compressionMethod === 0) {\n    // 0 - The file is stored (no compression)\n    decompress = false;\n  } else if (rawEntry.compressionMethod === 8) {\n    // 8 - The file is Deflated\n    decompress = true;\n  } else {\n    throw new Error(`unsupported compression method: ${rawEntry.compressionMethod}`);\n  }\n  const fileDataStart = localFileHeaderEnd;\n  const fileDataEnd = fileDataStart + rawEntry.compressedSize;\n  if (rawEntry.compressedSize !== 0) {\n    // bounds check now, because the read streams will probably not complain loud enough.\n    // since we're dealing with an unsigned offset plus an unsigned size,\n    // we only have 1 thing to check for.\n    if (fileDataEnd > totalLength) {\n      throw new Error(`file data overflows file bounds: ${fileDataStart} +  ${rawEntry.compressedSize}  > ${totalLength}`);\n    }\n  }\n  return {\n    decompress,\n    fileDataStart,\n  };\n}\n\nasync function readEntryDataAsArrayBuffer(reader, rawEntry) {\n  const {decompress, fileDataStart} = await readEntryDataHeader(reader, rawEntry);\n  if (!decompress) {\n    const dataView = await readAs(reader, fileDataStart, rawEntry.compressedSize);\n    // make copy?\n    //\n    // 1. The source is a Blob/file. In this case we'll get back TypedArray we can just hand to the user\n    // 2. The source is a TypedArray. In this case we'll get back TypedArray that is a view into a larger buffer\n    //    but because ultimately this is used to return an ArrayBuffer to `someEntry.arrayBuffer()`\n    //    we need to return copy since we need the `ArrayBuffer`, not the TypedArray to exactly match the data.\n    //    Note: We could add another API function `bytes()` or something that returned a `Uint8Array`\n    //    instead of an `ArrayBuffer`. This would let us skip a copy here. But this case only happens for uncompressed\n    //    data. That seems like a rare enough case that adding a new API is not worth it? Or is it? A zip of jpegs or mp3s\n    //    might not be compressed. For now that's a TBD.\n    return isTypedArraySameAsArrayBuffer(dataView) ? dataView.buffer : dataView.slice().buffer;\n  }\n  // see comment in readEntryDateAsBlob\n  const typedArrayOrBlob = await readAsBlobOrTypedArray(reader, fileDataStart, rawEntry.compressedSize);\n  const result = await inflateRawAsync(typedArrayOrBlob, rawEntry.uncompressedSize);\n  return result;\n}\n\nasync function readEntryDataAsBlob(reader, rawEntry, type) {\n  const {decompress, fileDataStart} = await readEntryDataHeader(reader, rawEntry);\n  if (!decompress) {\n    const typedArrayOrBlob = await readAsBlobOrTypedArray(reader, fileDataStart, rawEntry.compressedSize, type);\n    if (isBlob(typedArrayOrBlob)) {\n      return typedArrayOrBlob;\n    }\n    return new Blob([isSharedArrayBuffer(typedArrayOrBlob.buffer) ? new Uint8Array(typedArrayOrBlob) : typedArrayOrBlob], {type});\n  }\n  // Here's the issue with this mess (should refactor?)\n  // if the source is a blob then we really want to pass a blob to inflateRawAsync to avoid a large\n  // copy if we're going to a worker.\n  const typedArrayOrBlob = await readAsBlobOrTypedArray(reader, fileDataStart, rawEntry.compressedSize);\n  const result = await inflateRawAsync(typedArrayOrBlob, rawEntry.uncompressedSize, type);\n  return result;\n}\n\nfunction setOptions$1(options) {\n  setOptions(options);\n}\n\nasync function unzipRaw(source) {\n  let reader;\n  if (typeof Blob !== 'undefined' && source instanceof Blob) {\n    reader = new BlobReader(source);\n  } else if (source instanceof ArrayBuffer || (source && source.buffer && source.buffer instanceof ArrayBuffer)) {\n    reader = new ArrayBufferReader(source);\n  } else if (isSharedArrayBuffer(source) || isSharedArrayBuffer(source.buffer)) {\n    reader = new ArrayBufferReader(source);\n  } else if (typeof source === 'string') {\n    const req = await fetch(source);\n    if (!req.ok) {\n      throw new Error(`failed http request ${source}, status: ${req.status}: ${req.statusText}`);\n    }\n    const blob = await req.blob();\n    reader = new BlobReader(blob);\n  } else if (typeof source.getLength === 'function' && typeof source.read === 'function') {\n    reader = source;\n  } else {\n    throw new Error('unsupported source type');\n  }\n\n  const totalLength = await reader.getLength();\n\n  if (totalLength > Number.MAX_SAFE_INTEGER) {\n    throw new Error(`file too large. size: ${totalLength}. Only file sizes up 4503599627370496 bytes are supported`);\n  }\n\n  return await findEndOfCentralDirector(reader, totalLength);\n}\n\n// If the names are not utf8 you should use unzipitRaw\nasync function unzip(source) {\n  const {zip, entries} = await unzipRaw(source);\n  return {\n    zip,\n    entries: Object.fromEntries(entries.map(v => [v.name, v])),\n  };\n}\n\nfunction cleanup$1() {\n  cleanup();\n}\n\nexport { HTTPRangeReader, cleanup$1 as cleanup, setOptions$1 as setOptions, unzip, unzipRaw };\n","<script>\r\n  import { onDestroy } from 'svelte'\r\n\r\n  export let file = null\r\n  $: updateFile(file)\r\n  async function updateFile(file) {\r\n    if (!src && file) {\r\n      const blob = await file.blob()\r\n      src = URL.createObjectURL(blob)\r\n    }\r\n  }\r\n  onDestroy(() => {\r\n    URL.revokeObjectURL(src)\r\n  })\r\n\r\n  export let options = {}\r\n  $: resetPos(options)\r\n  let image = null\r\n  let src = null\r\n  let scale = 0\r\n  let transition = true\r\n  const initial = { x: 0, y: 0 }\r\n  const old = { x: 0, y: 0 }\r\n  const position = { x: 0, y: 0 }\r\n  let disPos = initial\r\n  const dimensions = { x: null, y: null }\r\n  // dragging around\r\n  function dragStart(e) {\r\n    if (options.mode === 'fit') {\r\n      transition = false\r\n      initial.x = e.clientX\r\n      initial.y = e.clientY\r\n      image.onpointermove = handleDrag\r\n      if (e.pointerId) image.setPointerCapture(e.pointerId)\r\n    }\r\n  }\r\n  function dragEnd(e) {\r\n    if (image.onpointermove) {\r\n      transition = true\r\n      image.onpointermove = null\r\n      if (e.pointerId) image.releasePointerCapture(e.pointerId)\r\n      if (pinching) {\r\n        pinching = false\r\n        lasthypot = 0\r\n      } else {\r\n        old.x += e.clientX - initial.x\r\n        old.y += e.clientY - initial.y\r\n      }\r\n    }\r\n  }\r\n  function handleDrag(e) {\r\n    if (!pinching) {\r\n      position.x = old.x + e.clientX - initial.x\r\n      position.y = old.y + e.clientY - initial.y\r\n      disPos = position\r\n    }\r\n  }\r\n  // zooming\r\n  let pinching = false\r\n  function checkPinch({ touches }) {\r\n    if (options.mode === 'fit') {\r\n      if (touches.length === 2) {\r\n        pinching = true\r\n        transition = true\r\n      }\r\n    }\r\n  }\r\n  let lasthypot = 0\r\n  let hypotdelta = 0\r\n  function handlePinch({ touches }) {\r\n    if (touches.length === 2 && pinching === true) {\r\n      const last = lasthypot\r\n      lasthypot = Math.hypot(touches[0].pageX - touches[1].pageX, touches[0].pageY - touches[1].pageY)\r\n      hypotdelta += last - lasthypot\r\n      if (hypotdelta > 20 || hypotdelta < -20) {\r\n        handleZoom({ deltaY: hypotdelta > 0 ? 100 : -100 })\r\n        hypotdelta = 0\r\n      }\r\n    }\r\n  }\r\n  let zoom = 1\r\n  function handleZoom({ deltaY }) {\r\n    if (options.mode === 'fit') {\r\n      const diff = deltaY * -0.01\r\n      if (diff < 0) {\r\n        if (!(scale < -4)) scale -= 0.5\r\n        old.x /= 1.5\r\n        old.y /= 1.5\r\n      } else if (diff > 0 && !(scale > 11)) {\r\n        scale += 0.5\r\n        old.x *= 1.5\r\n        old.y *= 1.5\r\n      }\r\n      zoom = 2 ** scale\r\n      disPos = old\r\n    }\r\n  }\r\n\r\n  function resetPos() {\r\n    old.x = 0\r\n    old.y = 0\r\n    scale = 0\r\n    zoom = 1\r\n    disPos = old\r\n  }\r\n  function handleStyle({ disPos, zoom }) {\r\n    image?.style.setProperty('transform', `scale(${zoom})`)\r\n    image?.style.setProperty('--left', disPos.x + 'px')\r\n    image?.style.setProperty('--top', disPos.y + 'px')\r\n  }\r\n  $: handleStyle({ disPos, zoom })\r\n\r\n  function handleImage(image) {\r\n    dimensions.x = image.naturalWidth\r\n    dimensions.y = image.naturalHeight\r\n  }\r\n</script>\r\n\r\n{#if src}\r\n  {#if options.mode !== 'fit'}\r\n    <img {src} alt=\"view\" class=\"w-full\" />\r\n  {:else}\r\n    <div\r\n      class=\"w-full h-full overflow-hidden position-relative dragarea\"\r\n      on:pointerdown={dragStart}\r\n      on:pointerup={dragEnd}\r\n      on:wheel|passive={handleZoom}\r\n      on:touchend={dragEnd}\r\n      on:touchstart={checkPinch}\r\n      on:touchmove={handlePinch}>\r\n      <img {src} class:transition alt=\"view\" class=\"w-full h-full position-absolute\" bind:this={image} on:load={handleImage} />\r\n    </div>\r\n  {/if}\r\n{:else}\r\n  <div class=\"d-flex align-items-center justify-content-center font-size-24 font-weight-bold w-full h-full\">There's no next page.</div>\r\n{/if}\r\n\r\n<style>\r\n  img {\r\n    object-fit: contain;\r\n    --top: 0;\r\n    --left: 0;\r\n    top: var(--top);\r\n    left: var(--left);\r\n  }\r\n  .transition {\r\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  }\r\n  img:not([src]) {\r\n    display: none;\r\n  }\r\n  .dragarea {\r\n    user-select: none;\r\n    cursor: grab;\r\n    touch-action: none;\r\n  }\r\n</style>\r\n","<script>\r\n  export let currentIndex = 0\r\n  export let items = []\r\n\r\n  $: length = items.length\r\n  $: currentItems = [-1, 0, 1].map(i => (currentIndex + i <= length ? { item: items[currentIndex + i], index: currentIndex + i } : { item: false })).filter(i => i.item !== false)\r\n  let prev = false\r\n  let next = false\r\n\r\n  export function gotoNext() {\r\n    if (!next && !prev && currentIndex < length) {\r\n      next = true\r\n      setTimeout(() => {\r\n        currentIndex = currentIndex + 1\r\n        next = false\r\n      }, 200)\r\n    }\r\n  }\r\n\r\n  export function gotoPrev() {\r\n    if (!next && !prev && currentIndex > 0) {\r\n      prev = true\r\n      setTimeout(() => {\r\n        currentIndex = currentIndex - 1\r\n        prev = false\r\n      }, 200)\r\n    }\r\n  }\r\n  function autoFocus(node) {\r\n    return {\r\n      update(current) {\r\n        if (current) node.focus()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"h-full d-flex flex-row-reverse overflow-x-hidden\">\r\n  {#if length}\r\n    <!-- svelte-ignore missing-declaration -->\r\n    {#each currentItems as { item, index } (index)}\r\n      <div class=\"item w-full h-full overflow-y-auto\" class:prev class:next use:autoFocus={currentIndex === index}>\r\n        <slot {item} />\r\n      </div>\r\n    {/each}\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .item {\r\n    flex: none;\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .prev,\r\n  .next {\r\n    transition: transform 0.2s;\r\n  }\r\n\r\n  .next {\r\n    transform: translateX(200%);\r\n  }\r\n\r\n  .prev {\r\n    transform: translateX(0);\r\n  }\r\n</style>\r\n","<script>\r\n  let scrollContainer = {}\r\n  export let items = []\r\n\r\n  $: currentItems = items.slice(currentIndex, currentIndex + displaying).map(item => {\r\n    return { index: items.indexOf(item), item }\r\n  })\r\n\r\n  export let currentIndex = 0\r\n  let displaying = 1\r\n  const observer = new IntersectionObserver(entries => {\r\n    const nodes = [...scrollContainer.children]\r\n    for (const entry of entries) {\r\n      const index = nodes.indexOf(entry.target)\r\n      if (entry.isIntersecting) {\r\n        if (index === 0) {\r\n          currentIndex = Math.max(0, currentIndex - 1)\r\n        }\r\n        if (index === nodes.length - 1) {\r\n          ++displaying\r\n        }\r\n      } else {\r\n        if (nodes.length > 2 && index === 1) {\r\n          ++currentIndex\r\n        }\r\n        if (index > 1 && index !== nodes.length - 1) {\r\n          displaying = Math.max(1, displaying - 1)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  function infiniteScrolling(node) {\r\n    observer.observe(node)\r\n    return {\r\n      destroy() {\r\n        observer.unobserve(node)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"h-full d-flex flex-column overflow-x-hidden overflow-y-auto\" bind:this={scrollContainer}>\r\n  {#if items.length}\r\n    <!-- svelte-ignore missing-declaration -->\r\n    {#each currentItems as { item, index } (index)}\r\n      <div class=\"w-full\" use:infiniteScrolling>\r\n        <slot {item} />\r\n      </div>\r\n    {/each}\r\n  {/if}\r\n</div>\r\n","<script>\n  import InstallPrompt from './modules/InstallPrompt.svelte'\n  import { filePopup, handleItems, getSearchFiles, getLaunchFiles } from '../../shared/inputHandler.js'\n  import { unzip } from 'unzipit'\n  import Page from './modules/Page.svelte'\n  import Reader from './modules/Reader.svelte'\n  import VerticalReader from './modules/VerticalReader.svelte'\n  let name = 'Manga Reader'\n  let pages = []\n  let options = {\n    mode: 'cover',\n    crop: true,\n    pad: false\n  }\n\n  navigator.serviceWorker.register('/sw.js')\n\n  // loading files\n  async function handleInput({ dataTransfer, clipboardData }) {\n    const items = clipboardData?.items || dataTransfer?.items\n    if (items) {\n      handleFiles(await handleItems(items, ['book']))\n    }\n  }\n\n  if ('launchQueue' in window) {\n    getLaunchFiles().then(handleFiles)\n  }\n  async function handlePopup() {\n    if (!files.length) {\n      handleFiles(await filePopup(['book']))\n    }\n  }\n  async function handleFiles(newfiles) {\n    if (newfiles?.length) {\n      pages = Object.values((await unzip(newfiles[0])).entries).filter(page => !page.isDirectory)\n      name = newfiles[0].name.match(/([^-–]+)/)[0].trim()\n      currentIndex = 0\n    }\n  }\n  handleFiles(getSearchFiles(['book']))\n  let immersed = false\n  let immerseTimeout = null\n\n  function immerseReader() {\n    immersed = true\n    immerseTimeout = undefined\n  }\n\n  function resetImmerse() {\n    if (immerseTimeout) {\n      clearTimeout(immerseTimeout)\n    } else {\n      immersed = false\n    }\n    immerseTimeout = setTimeout(immerseReader, 2 * 1000)\n  }\n\n  async function handleKeydown({ key }) {\n    switch (key) {\n      case 'ArrowLeft':\n        gotoNext()\n        break\n      case 'ArrowRight':\n        gotoPrev()\n        break\n    }\n  }\n  let gotoNext, gotoPrev\n  let currentIndex = 0\n</script>\n\n<div class=\"sticky-alerts d-flex flex-column-reverse\">\n  <InstallPrompt />\n</div>\n{#if options.mode === 'vertical'}\n  <VerticalReader items={pages} let:item bind:currentIndex>\n    <Page file={item} {options}/>\n  </VerticalReader>\n{:else}\n  <Reader items={pages} let:item bind:gotoNext bind:gotoPrev bind:currentIndex>\n    <Page file={item} {options} />\n  </Reader>\n{/if}\n\n<div class=\"position-absolute buttons row w-full justify-content-center controls\" class:immersed>\n  {#if options.mode !== 'vertical'}\n    <div class=\"btn-group bg-dark-dm bg-light-lm rounded m-5 col-auto\">\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={gotoNext}>arrow_back</button>\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={gotoPrev}>arrow_forward</button>\n    </div>\n  {/if}\n\n  <div class=\"btn-group bg-dark-dm bg-light-lm rounded m-5 col-auto\">\n    <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={() => (options.mode = 'fit')}>zoom_out_map</button>\n    <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={() => (options.mode = 'cover')}>expand</button>\n    <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={() => (options.mode = 'vertical')}>height</button>\n  </div>\n  <div class=\"btn-group bg-dark-dm bg-light-lm rounded m-5 col-auto\">\n    <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={() => (options.crop = !options.crop)}>{options.crop ? 'crop' : 'crop_free'}</button>\n  </div>\n</div>\n\n<svelte:head>\n  <title>{name}</title>\n</svelte:head>\n\n<svelte:window\n  on:drop|preventDefault={handleInput}\n  on:dragenter|preventDefault\n  on:dragover|preventDefault\n  on:dragstart|preventDefault\n  on:dragleave|preventDefault\n  on:paste|preventDefault={handleInput}\n  on:keydown={handleKeydown}\n  on:mousemove={resetImmerse}\n  on:touchmove={resetImmerse}\n  on:mouseleave={immerseReader} />\n\n<style>\n  :global(body) {\n    position: unset !important;\n  }\n\n  .controls {\n    transition: 0.5s opacity ease;\n    opacity: 1;\n  }\n  .immersed {\n    opacity: 0;\n  }\n  .buttons {\n    bottom: 8rem;\n    left: 50%;\n    transform: translate(-50%, 0);\n  }\n  .sticky-alerts {\n    --sticky-alerts-top: auto;\n    bottom: 1rem;\n  }\n</style>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","toggle_class","toggle","classList","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","bubble","callbacks","type","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","globals","window","globalThis","global","outro_and_destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","bound","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","deferredPrompt","e","prompt","outcome","userChoice","videoRx","RegExp","join","subRx","audioRx","imageRx","bookRx","DOMPARSER","DOMParser","parseFromString","async","handleItems","transferList","types","all","item","some","getAsFile","kind","string","getAsString","URL","find","match","rxMap","substring","lastIndexOf","file","elems","querySelectorAll","selectorMap","flat","elem","entry","webkitGetAsEntry","isDirectory","filePromises","createReader","readEntries","isFile","processItem","audio","video","image","subtitle","book","readBlobAsArrayBuffer","blob","arrayBuffer","reject","reader","FileReader","result","readAsArrayBuffer","readBlobAsUint8Array","Uint8Array","isBlob","v","Blob","isSharedArrayBuffer","SharedArrayBuffer","isNode","process","versions","electron","ArrayBufferReader","constructor","arrayBufferOrView","typedArray","ArrayBuffer","buffer","byteOffset","byteLength","getLength","read","offset","BlobReader","size","sliceAsBlob","_check","buf","bl","nbuf","_decodeTiny","lmap","LL","pos","tree","bitsE","_bitsE","get17","_get17","code","lit","ll","ni","_copyOut","off","mx","tl","makeCodes","MAX_BITS","bits","max_code","bl_count","U","next_code","codes2map","r15","rev15","cl","val","i0","i1","revCodes","imb","dt","_bitsF","u16","Uint16Array","u32","Uint32Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","ltree","ttree","dmap","dtree","imap","itree","lhst","dhst","ihst","lits","strt","prev","x","pushV","tgt","sv","crc","table","tab","inflateRaw","u8","bitsF","decodeTiny","noBuf","BFINAL","BTYPE","HLIT","HDIST","HCLEN","ML","MD","mx0","mx1","end","ebs","dcode","dlit","dbs","dst","p8","inflate","config","numWorkers","workerURL","useWorkers","nextId","waitingForWorkerQueue","startWorker","worker","Worker","onmessage","onerror","inflateRawLocal","uncompressedSize","inflateRawAsync","id","shift","processWaitingForWorkerQueue","mod","module","request","require","createWorker","on","terminate","console","warn","req","fetch","mode","ok","createObjectURL","btoa","ZipEntry","rawEntry","date","time","_reader","_rawEntry","nameBytes","compressedSize","comment","commentBytes","compressionMethod","lastModDate","lastModFileDate","lastModFileTime","Date","endsWith","encrypted","generalPurposeBitFlag","decompress","fileDataStart","readEntryDataHeader","typedArrayOrBlob","readAsBlobOrTypedArray","readEntryDataAsBlob","dataView","readAs","readEntryDataAsArrayBuffer","decodeBuffer","json","JSON","parse","crc$1","unsigned","getUint16LE","uint8View","getUint32LE","getUint64LE","utf8Decoder","TextDecoder","isUTF8","decode","readZip64CentralDirectory","zip64EocdlOffset","eocdl","zip64EocdrOffset","zip64Eocdr","entryCount","centralDirectorySize","centralDirectoryOffset","rawEntryCount","readEntryCursor","allEntriesBuffer","rawEntries","subarray","signature","toString","versionMadeBy","versionNeededToExtract","crc32","fileNameLength","extraFieldLength","fileCommentLength","internalFileAttributes","externalFileAttributes","relativeOffsetOfLocalHeader","fileCommentStart","extraFieldBuffer","extraFields","headerId","dataStart","dataEnd","zip64ExtraField","zip64EiefBuffer","nameField","fileName","expectedCompressedSize","zip","entries","totalLength","localFileHeaderEnd","fileDataEnd","unzipRaw","source","status","statusText","Number","MAX_SAFE_INTEGER","min","EOCDR_WITHOUT_COMMENT_SIZE","readStart","eocdr","diskNumber","commentLength","expectedCommentLength","findEndOfCentralDirector","revokeObjectURL","scale","transition","initial","y","old","position","disPos","handleDrag","pinching","clientX","clientY","lasthypot","hypotdelta","zoom","handleZoom","deltaY","diff","updateFile","style","setProperty","handleStyle","onpointermove","pointerId","setPointerCapture","releasePointerCapture","touches","last","hypot","pageX","pageY","autoFocus","current","focus","currentIndex","items","currentItems","setTimeout","scrollContainer","displaying","observer","IntersectionObserver","isIntersecting","observe","unobserve","crop","wholeText","pages","pad","handleFiles","newfiles","values","fromEntries","unzip","page","trim","navigator","serviceWorker","register","launchQueue","setConsumer","launchParams","files","promises","getFile","findIndex","search","lastModified","getLaunchFiles","URLSearchParams","location","param","getSearchFiles","gotoNext","gotoPrev","immersed","immerseTimeout","immerseReader","dataTransfer","clipboardData","clearTimeout","body"],"mappings":"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"}