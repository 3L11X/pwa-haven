{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/modules/InstallPrompt.svelte","../../node_modules/fix-webm-duration/fix-webm-duration.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n  let deferredPrompt\r\n\r\n  window.addEventListener('beforeinstallprompt', e => {\r\n    e.preventDefault()\r\n    deferredPrompt = e\r\n  })\r\n  async function promptInstall() {\r\n    deferredPrompt.prompt()\r\n    const { outcome } = await deferredPrompt.userChoice\r\n    if (outcome === 'accepted') {\r\n      deferredPrompt = null\r\n    }\r\n  }\r\n  function dismiss() {\r\n    deferredPrompt = null\r\n  }\r\n</script>\r\n\r\n{#if deferredPrompt}\r\n  <div class=\"alert alert-success filled-dm show\" on:click={promptInstall}>\r\n    <h4 class=\"alert-heading\">Install</h4>\r\n    <button class=\"close\" type=\"button\" on:click={dismiss}><span>×</span></button>\r\n    Click here to install the app for more features!\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .alert {\r\n    display: block !important;\r\n    animation: fly-in 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  }\r\n\r\n  @keyframes fly-in {\r\n    0% {\r\n      right: -50rem;\r\n    }\r\n    100% {\r\n      right: 0;\r\n    }\r\n  }\r\n</style>\r\n","(function (name, definition) {\n    if (typeof define === 'function' && define.amd) { // RequireJS / AMD\n        define(definition);\n    } else if (typeof module !== 'undefined' && module.exports) { // CommonJS / Node.js\n        module.exports = definition();\n    } else { // Direct include\n        window.ysFixWebmDuration = definition();\n    }\n})('fix-webm-duration', function () {\n    /*\n     * This is the list of possible WEBM file sections by their IDs.\n     * Possible types: Container, Binary, Uint, Int, String, Float, Date\n     */\n    var sections = {\n        0xa45dfa3: { name: 'EBML', type: 'Container' },\n        0x286: { name: 'EBMLVersion', type: 'Uint' },\n        0x2f7: { name: 'EBMLReadVersion', type: 'Uint' },\n        0x2f2: { name: 'EBMLMaxIDLength', type: 'Uint' },\n        0x2f3: { name: 'EBMLMaxSizeLength', type: 'Uint' },\n        0x282: { name: 'DocType', type: 'String' },\n        0x287: { name: 'DocTypeVersion', type: 'Uint' },\n        0x285: { name: 'DocTypeReadVersion', type: 'Uint' },\n        0x6c: { name: 'Void', type: 'Binary' },\n        0x3f: { name: 'CRC-32', type: 'Binary' },\n        0xb538667: { name: 'SignatureSlot', type: 'Container' },\n        0x3e8a: { name: 'SignatureAlgo', type: 'Uint' },\n        0x3e9a: { name: 'SignatureHash', type: 'Uint' },\n        0x3ea5: { name: 'SignaturePublicKey', type: 'Binary' },\n        0x3eb5: { name: 'Signature', type: 'Binary' },\n        0x3e5b: { name: 'SignatureElements', type: 'Container' },\n        0x3e7b: { name: 'SignatureElementList', type: 'Container' },\n        0x2532: { name: 'SignedElement', type: 'Binary' },\n        0x8538067: { name: 'Segment', type: 'Container' },\n        0x14d9b74: { name: 'SeekHead', type: 'Container' },\n        0xdbb: { name: 'Seek', type: 'Container' },\n        0x13ab: { name: 'SeekID', type: 'Binary' },\n        0x13ac: { name: 'SeekPosition', type: 'Uint' },\n        0x549a966: { name: 'Info', type: 'Container' },\n        0x33a4: { name: 'SegmentUID', type: 'Binary' },\n        0x3384: { name: 'SegmentFilename', type: 'String' },\n        0x1cb923: { name: 'PrevUID', type: 'Binary' },\n        0x1c83ab: { name: 'PrevFilename', type: 'String' },\n        0x1eb923: { name: 'NextUID', type: 'Binary' },\n        0x1e83bb: { name: 'NextFilename', type: 'String' },\n        0x444: { name: 'SegmentFamily', type: 'Binary' },\n        0x2924: { name: 'ChapterTranslate', type: 'Container' },\n        0x29fc: { name: 'ChapterTranslateEditionUID', type: 'Uint' },\n        0x29bf: { name: 'ChapterTranslateCodec', type: 'Uint' },\n        0x29a5: { name: 'ChapterTranslateID', type: 'Binary' },\n        0xad7b1: { name: 'TimecodeScale', type: 'Uint' },\n        0x489: { name: 'Duration', type: 'Float' },\n        0x461: { name: 'DateUTC', type: 'Date' },\n        0x3ba9: { name: 'Title', type: 'String' },\n        0xd80: { name: 'MuxingApp', type: 'String' },\n        0x1741: { name: 'WritingApp', type: 'String' },\n        // 0xf43b675: { name: 'Cluster', type: 'Container' },\n        0x67: { name: 'Timecode', type: 'Uint' },\n        0x1854: { name: 'SilentTracks', type: 'Container' },\n        0x18d7: { name: 'SilentTrackNumber', type: 'Uint' },\n        0x27: { name: 'Position', type: 'Uint' },\n        0x2b: { name: 'PrevSize', type: 'Uint' },\n        0x23: { name: 'SimpleBlock', type: 'Binary' },\n        0x20: { name: 'BlockGroup', type: 'Container' },\n        0x21: { name: 'Block', type: 'Binary' },\n        0x22: { name: 'BlockVirtual', type: 'Binary' },\n        0x35a1: { name: 'BlockAdditions', type: 'Container' },\n        0x26: { name: 'BlockMore', type: 'Container' },\n        0x6e: { name: 'BlockAddID', type: 'Uint' },\n        0x25: { name: 'BlockAdditional', type: 'Binary' },\n        0x1b: { name: 'BlockDuration', type: 'Uint' },\n        0x7a: { name: 'ReferencePriority', type: 'Uint' },\n        0x7b: { name: 'ReferenceBlock', type: 'Int' },\n        0x7d: { name: 'ReferenceVirtual', type: 'Int' },\n        0x24: { name: 'CodecState', type: 'Binary' },\n        0x35a2: { name: 'DiscardPadding', type: 'Int' },\n        0xe: { name: 'Slices', type: 'Container' },\n        0x68: { name: 'TimeSlice', type: 'Container' },\n        0x4c: { name: 'LaceNumber', type: 'Uint' },\n        0x4d: { name: 'FrameNumber', type: 'Uint' },\n        0x4b: { name: 'BlockAdditionID', type: 'Uint' },\n        0x4e: { name: 'Delay', type: 'Uint' },\n        0x4f: { name: 'SliceDuration', type: 'Uint' },\n        0x48: { name: 'ReferenceFrame', type: 'Container' },\n        0x49: { name: 'ReferenceOffset', type: 'Uint' },\n        0x4a: { name: 'ReferenceTimeCode', type: 'Uint' },\n        0x2f: { name: 'EncryptedBlock', type: 'Binary' },\n        0x654ae6b: { name: 'Tracks', type: 'Container' },\n        0x2e: { name: 'TrackEntry', type: 'Container' },\n        0x57: { name: 'TrackNumber', type: 'Uint' },\n        0x33c5: { name: 'TrackUID', type: 'Uint' },\n        0x3: { name: 'TrackType', type: 'Uint' },\n        0x39: { name: 'FlagEnabled', type: 'Uint' },\n        0x8: { name: 'FlagDefault', type: 'Uint' },\n        0x15aa: { name: 'FlagForced', type: 'Uint' },\n        0x1c: { name: 'FlagLacing', type: 'Uint' },\n        0x2de7: { name: 'MinCache', type: 'Uint' },\n        0x2df8: { name: 'MaxCache', type: 'Uint' },\n        0x3e383: { name: 'DefaultDuration', type: 'Uint' },\n        0x34e7a: { name: 'DefaultDecodedFieldDuration', type: 'Uint' },\n        0x3314f: { name: 'TrackTimecodeScale', type: 'Float' },\n        0x137f: { name: 'TrackOffset', type: 'Int' },\n        0x15ee: { name: 'MaxBlockAdditionID', type: 'Uint' },\n        0x136e: { name: 'Name', type: 'String' },\n        0x2b59c: { name: 'Language', type: 'String' },\n        0x6: { name: 'CodecID', type: 'String' },\n        0x23a2: { name: 'CodecPrivate', type: 'Binary' },\n        0x58688: { name: 'CodecName', type: 'String' },\n        0x3446: { name: 'AttachmentLink', type: 'Uint' },\n        0x1a9697: { name: 'CodecSettings', type: 'String' },\n        0x1b4040: { name: 'CodecInfoURL', type: 'String' },\n        0x6b240: { name: 'CodecDownloadURL', type: 'String' },\n        0x2a: { name: 'CodecDecodeAll', type: 'Uint' },\n        0x2fab: { name: 'TrackOverlay', type: 'Uint' },\n        0x16aa: { name: 'CodecDelay', type: 'Uint' },\n        0x16bb: { name: 'SeekPreRoll', type: 'Uint' },\n        0x2624: { name: 'TrackTranslate', type: 'Container' },\n        0x26fc: { name: 'TrackTranslateEditionUID', type: 'Uint' },\n        0x26bf: { name: 'TrackTranslateCodec', type: 'Uint' },\n        0x26a5: { name: 'TrackTranslateTrackID', type: 'Binary' },\n        0x60: { name: 'Video', type: 'Container' },\n        0x1a: { name: 'FlagInterlaced', type: 'Uint' },\n        0x13b8: { name: 'StereoMode', type: 'Uint' },\n        0x13c0: { name: 'AlphaMode', type: 'Uint' },\n        0x13b9: { name: 'OldStereoMode', type: 'Uint' },\n        0x30: { name: 'PixelWidth', type: 'Uint' },\n        0x3a: { name: 'PixelHeight', type: 'Uint' },\n        0x14aa: { name: 'PixelCropBottom', type: 'Uint' },\n        0x14bb: { name: 'PixelCropTop', type: 'Uint' },\n        0x14cc: { name: 'PixelCropLeft', type: 'Uint' },\n        0x14dd: { name: 'PixelCropRight', type: 'Uint' },\n        0x14b0: { name: 'DisplayWidth', type: 'Uint' },\n        0x14ba: { name: 'DisplayHeight', type: 'Uint' },\n        0x14b2: { name: 'DisplayUnit', type: 'Uint' },\n        0x14b3: { name: 'AspectRatioType', type: 'Uint' },\n        0xeb524: { name: 'ColourSpace', type: 'Binary' },\n        0xfb523: { name: 'GammaValue', type: 'Float' },\n        0x383e3: { name: 'FrameRate', type: 'Float' },\n        0x61: { name: 'Audio', type: 'Container' },\n        0x35: { name: 'SamplingFrequency', type: 'Float' },\n        0x38b5: { name: 'OutputSamplingFrequency', type: 'Float' },\n        0x1f: { name: 'Channels', type: 'Uint' },\n        0x3d7b: { name: 'ChannelPositions', type: 'Binary' },\n        0x2264: { name: 'BitDepth', type: 'Uint' },\n        0x62: { name: 'TrackOperation', type: 'Container' },\n        0x63: { name: 'TrackCombinePlanes', type: 'Container' },\n        0x64: { name: 'TrackPlane', type: 'Container' },\n        0x65: { name: 'TrackPlaneUID', type: 'Uint' },\n        0x66: { name: 'TrackPlaneType', type: 'Uint' },\n        0x69: { name: 'TrackJoinBlocks', type: 'Container' },\n        0x6d: { name: 'TrackJoinUID', type: 'Uint' },\n        0x40: { name: 'TrickTrackUID', type: 'Uint' },\n        0x41: { name: 'TrickTrackSegmentUID', type: 'Binary' },\n        0x46: { name: 'TrickTrackFlag', type: 'Uint' },\n        0x47: { name: 'TrickMasterTrackUID', type: 'Uint' },\n        0x44: { name: 'TrickMasterTrackSegmentUID', type: 'Binary' },\n        0x2d80: { name: 'ContentEncodings', type: 'Container' },\n        0x2240: { name: 'ContentEncoding', type: 'Container' },\n        0x1031: { name: 'ContentEncodingOrder', type: 'Uint' },\n        0x1032: { name: 'ContentEncodingScope', type: 'Uint' },\n        0x1033: { name: 'ContentEncodingType', type: 'Uint' },\n        0x1034: { name: 'ContentCompression', type: 'Container' },\n        0x254: { name: 'ContentCompAlgo', type: 'Uint' },\n        0x255: { name: 'ContentCompSettings', type: 'Binary' },\n        0x1035: { name: 'ContentEncryption', type: 'Container' },\n        0x7e1: { name: 'ContentEncAlgo', type: 'Uint' },\n        0x7e2: { name: 'ContentEncKeyID', type: 'Binary' },\n        0x7e3: { name: 'ContentSignature', type: 'Binary' },\n        0x7e4: { name: 'ContentSigKeyID', type: 'Binary' },\n        0x7e5: { name: 'ContentSigAlgo', type: 'Uint' },\n        0x7e6: { name: 'ContentSigHashAlgo', type: 'Uint' },\n        0xc53bb6b: { name: 'Cues', type: 'Container' },\n        0x3b: { name: 'CuePoint', type: 'Container' },\n        0x33: { name: 'CueTime', type: 'Uint' },\n        0x37: { name: 'CueTrackPositions', type: 'Container' },\n        0x77: { name: 'CueTrack', type: 'Uint' },\n        0x71: { name: 'CueClusterPosition', type: 'Uint' },\n        0x70: { name: 'CueRelativePosition', type: 'Uint' },\n        0x32: { name: 'CueDuration', type: 'Uint' },\n        0x1378: { name: 'CueBlockNumber', type: 'Uint' },\n        0x6a: { name: 'CueCodecState', type: 'Uint' },\n        0x5b: { name: 'CueReference', type: 'Container' },\n        0x16: { name: 'CueRefTime', type: 'Uint' },\n        0x17: { name: 'CueRefCluster', type: 'Uint' },\n        0x135f: { name: 'CueRefNumber', type: 'Uint' },\n        0x6b: { name: 'CueRefCodecState', type: 'Uint' },\n        0x941a469: { name: 'Attachments', type: 'Container' },\n        0x21a7: { name: 'AttachedFile', type: 'Container' },\n        0x67e: { name: 'FileDescription', type: 'String' },\n        0x66e: { name: 'FileName', type: 'String' },\n        0x660: { name: 'FileMimeType', type: 'String' },\n        0x65c: { name: 'FileData', type: 'Binary' },\n        0x6ae: { name: 'FileUID', type: 'Uint' },\n        0x675: { name: 'FileReferral', type: 'Binary' },\n        0x661: { name: 'FileUsedStartTime', type: 'Uint' },\n        0x662: { name: 'FileUsedEndTime', type: 'Uint' },\n        0x43a770: { name: 'Chapters', type: 'Container' },\n        0x5b9: { name: 'EditionEntry', type: 'Container' },\n        0x5bc: { name: 'EditionUID', type: 'Uint' },\n        0x5bd: { name: 'EditionFlagHidden', type: 'Uint' },\n        0x5db: { name: 'EditionFlagDefault', type: 'Uint' },\n        0x5dd: { name: 'EditionFlagOrdered', type: 'Uint' },\n        0x36: { name: 'ChapterAtom', type: 'Container' },\n        0x33c4: { name: 'ChapterUID', type: 'Uint' },\n        0x1654: { name: 'ChapterStringUID', type: 'String' },\n        0x11: { name: 'ChapterTimeStart', type: 'Uint' },\n        0x12: { name: 'ChapterTimeEnd', type: 'Uint' },\n        0x18: { name: 'ChapterFlagHidden', type: 'Uint' },\n        0x598: { name: 'ChapterFlagEnabled', type: 'Uint' },\n        0x2e67: { name: 'ChapterSegmentUID', type: 'Binary' },\n        0x2ebc: { name: 'ChapterSegmentEditionUID', type: 'Uint' },\n        0x23c3: { name: 'ChapterPhysicalEquiv', type: 'Uint' },\n        0xf: { name: 'ChapterTrack', type: 'Container' },\n        0x9: { name: 'ChapterTrackNumber', type: 'Uint' },\n        0x0: { name: 'ChapterDisplay', type: 'Container' },\n        0x5: { name: 'ChapString', type: 'String' },\n        0x37c: { name: 'ChapLanguage', type: 'String' },\n        0x37e: { name: 'ChapCountry', type: 'String' },\n        0x2944: { name: 'ChapProcess', type: 'Container' },\n        0x2955: { name: 'ChapProcessCodecID', type: 'Uint' },\n        0x50d: { name: 'ChapProcessPrivate', type: 'Binary' },\n        0x2911: { name: 'ChapProcessCommand', type: 'Container' },\n        0x2922: { name: 'ChapProcessTime', type: 'Uint' },\n        0x2933: { name: 'ChapProcessData', type: 'Binary' },\n        0x254c367: { name: 'Tags', type: 'Container' },\n        0x3373: { name: 'Tag', type: 'Container' },\n        0x23c0: { name: 'Targets', type: 'Container' },\n        0x28ca: { name: 'TargetTypeValue', type: 'Uint' },\n        0x23ca: { name: 'TargetType', type: 'String' },\n        0x23c5: { name: 'TagTrackUID', type: 'Uint' },\n        0x23c9: { name: 'TagEditionUID', type: 'Uint' },\n        0x23c4: { name: 'TagChapterUID', type: 'Uint' },\n        0x23c6: { name: 'TagAttachmentUID', type: 'Uint' },\n        0x27c8: { name: 'SimpleTag', type: 'Container' },\n        0x5a3: { name: 'TagName', type: 'String' },\n        0x47a: { name: 'TagLanguage', type: 'String' },\n        0x484: { name: 'TagDefault', type: 'Uint' },\n        0x487: { name: 'TagString', type: 'String' },\n        0x485: { name: 'TagBinary', type: 'Binary' }\n    };\n\n    function doInherit(newClass, baseClass) {\n        newClass.prototype = Object.create(baseClass.prototype);\n        newClass.prototype.constructor = newClass;\n    }\n\n    function WebmBase(name, type) {\n        this.name = name || 'Unknown';\n        this.type = type || 'Unknown';\n    }\n    WebmBase.prototype.updateBySource = function() { };\n    WebmBase.prototype.setSource = function(source) {\n        this.source = source;\n        this.updateBySource();\n    };\n    WebmBase.prototype.updateByData = function() { };\n    WebmBase.prototype.setData = function(data) {\n        this.data = data;\n        this.updateByData();\n    };\n\n    function WebmUint(name, type) {\n        WebmBase.call(this, name, type || 'Uint');\n    }\n    doInherit(WebmUint, WebmBase);\n    function padHex(hex) {\n        return hex.length % 2 === 1 ? '0' + hex : hex;\n    }\n    WebmUint.prototype.updateBySource = function() {\n        // use hex representation of a number instead of number value\n        this.data = '';\n        for (var i = 0; i < this.source.length; i++) {\n            var hex = this.source[i].toString(16);\n            this.data += padHex(hex);\n        }\n    };\n    WebmUint.prototype.updateByData = function() {\n        var length = this.data.length / 2;\n        this.source = new Uint8Array(length);\n        for (var i = 0; i < length; i++) {\n            var hex = this.data.substr(i * 2, 2);\n            this.source[i] = parseInt(hex, 16);\n        }\n    };\n    WebmUint.prototype.getValue = function() {\n        return parseInt(this.data, 16);\n    };\n    WebmUint.prototype.setValue = function(value) {\n        this.setData(padHex(value.toString(16)));\n    };\n\n    function WebmFloat(name, type) {\n        WebmBase.call(this, name, type || 'Float');\n    }\n    doInherit(WebmFloat, WebmBase);\n    WebmFloat.prototype.getFloatArrayType = function() {\n        return this.source && this.source.length === 4 ? Float32Array : Float64Array;\n    };\n    WebmFloat.prototype.updateBySource = function() {\n        var byteArray = this.source.reverse();\n        var floatArrayType = this.getFloatArrayType();\n        var floatArray = new floatArrayType(byteArray.buffer);\n        this.data = floatArray[0];\n    };\n    WebmFloat.prototype.updateByData = function() {\n        var floatArrayType = this.getFloatArrayType();\n        var floatArray = new floatArrayType([ this.data ]);\n        var byteArray = new Uint8Array(floatArray.buffer);\n        this.source = byteArray.reverse();\n    };\n    WebmFloat.prototype.getValue = function() {\n        return this.data;\n    };\n    WebmFloat.prototype.setValue = function(value) {\n        this.setData(value);\n    };\n\n    function WebmContainer(name, type) {\n        WebmBase.call(this, name, type || 'Container');\n    }\n    doInherit(WebmContainer, WebmBase);\n    WebmContainer.prototype.readByte = function() {\n        return this.source[this.offset++];\n    };\n    WebmContainer.prototype.readUint = function() {\n        var firstByte = this.readByte();\n        var bytes = 8 - firstByte.toString(2).length;\n        var value = firstByte - (1 << (7 - bytes));\n        for (var i = 0; i < bytes; i++) {\n            // don't use bit operators to support x86\n            value *= 256;\n            value += this.readByte();\n        }\n        return value;\n    };\n    WebmContainer.prototype.updateBySource = function() {\n        this.data = [];\n        for (this.offset = 0; this.offset < this.source.length; this.offset = end) {\n            var id = this.readUint();\n            var len = this.readUint();\n            var end = Math.min(this.offset + len, this.source.length);\n            var data = this.source.slice(this.offset, end);\n\n            var info = sections[id] || { name: 'Unknown', type: 'Unknown' };\n            var ctr = WebmBase;\n            switch (info.type) {\n                case 'Container':\n                    ctr = WebmContainer;\n                    break;\n                case 'Uint':\n                    ctr = WebmUint;\n                    break;\n                case 'Float':\n                    ctr = WebmFloat;\n                    break;\n            }\n            var section = new ctr(info.name, info.type);\n            section.setSource(data);\n            this.data.push({\n                id: id,\n                idHex: id.toString(16),\n                data: section\n            });\n        }\n    };\n    WebmContainer.prototype.writeUint = function(x, draft) {\n        for (var bytes = 1, flag = 0x80; x >= flag && bytes < 8; bytes++, flag *= 0x80) { }\n\n        if (!draft) {\n            var value = flag + x;\n            for (var i = bytes - 1; i >= 0; i--) {\n                // don't use bit operators to support x86\n                var c = value % 256;\n                this.source[this.offset + i] = c;\n                value = (value - c) / 256;\n            }\n        }\n\n        this.offset += bytes;\n    };\n    WebmContainer.prototype.writeSections = function(draft) {\n        this.offset = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            var section = this.data[i],\n                content = section.data.source,\n                contentLength = content.length;\n            this.writeUint(section.id, draft);\n            this.writeUint(contentLength, draft);\n            if (!draft) {\n                this.source.set(content, this.offset);\n            }\n            this.offset += contentLength;\n        }\n        return this.offset;\n    };\n    WebmContainer.prototype.updateByData = function() {\n        // run without accessing this.source to determine total length - need to know it to create Uint8Array\n        var length = this.writeSections('draft');\n        this.source = new Uint8Array(length);\n        // now really write data\n        this.writeSections();\n    };\n    WebmContainer.prototype.getSectionById = function(id) {\n        for (var i = 0; i < this.data.length; i++) {\n            var section = this.data[i];\n            if (section.id === id) {\n                return section.data;\n            }\n        }\n        return null;\n    };\n\n    function WebmFile(source) {\n        WebmContainer.call(this, 'File', 'File');\n        this.setSource(source);\n    }\n    doInherit(WebmFile, WebmContainer);\n    WebmFile.prototype.fixDuration = function(duration, options) {\n        var logger = options && options.logger;\n        if (logger === undefined) {\n            logger = function(message) {\n                console.log(message);\n            };\n        } else if (!logger) {\n            logger = function() { };\n        }\n\n        var segmentSection = this.getSectionById(0x8538067);\n        if (!segmentSection) {\n            logger('[fix-webm-duration] Segment section is missing');\n            return false;\n        }\n\n        var infoSection = segmentSection.getSectionById(0x549a966);\n        if (!infoSection) {\n            logger('[fix-webm-duration] Info section is missing');\n            return false;\n        }\n\n        var timeScaleSection = infoSection.getSectionById(0xad7b1);\n        if (!timeScaleSection) {\n            logger('[fix-webm-duration] TimecodeScale section is missing');\n            return false;\n        }\n\n        var durationSection = infoSection.getSectionById(0x489);\n        if (durationSection) {\n            if (durationSection.getValue() <= 0) {\n                logger('[fix-webm-duration] Duration section is present, but the value is empty');\n                durationSection.setValue(duration);\n            } else {\n                logger('[fix-webm-duration] Duration section is present');\n                return false;\n            }\n        } else {\n            logger('[fix-webm-duration] Duration section is missing');\n            // append Duration section\n            durationSection = new WebmFloat('Duration', 'Float');\n            durationSection.setValue(duration);\n            infoSection.data.push({\n                id: 0x489,\n                data: durationSection\n            });\n        }\n\n        // set default time scale to 1 millisecond (1000000 nanoseconds)\n        timeScaleSection.setValue(1000000);\n        infoSection.updateByData();\n        segmentSection.updateByData();\n        this.updateByData();\n\n        return true;\n    };\n    WebmFile.prototype.toBlob = function(mimeType) {\n        return new Blob([ this.source.buffer ], { type: mimeType || 'video/webm' });\n    };\n\n    function fixWebmDuration(blob, duration, callback, options) {\n        // The callback may be omitted - then the third argument is options\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n\n        if (!callback) {\n            return new Promise(function(resolve) {\n                fixWebmDuration(blob, duration, resolve, options);\n            });\n        }\n\n        try {\n            var reader = new FileReader();\n            reader.onloadend = function() {\n                try {\n                    var file = new WebmFile(new Uint8Array(reader.result));\n                    if (file.fixDuration(duration, options)) {\n                        blob = file.toBlob(blob.type);\n                    }\n                } catch (ex) {\n                    // ignore\n                }\n                callback(blob);\n            };\n            reader.readAsArrayBuffer(blob);\n        } catch (ex) {\n            callback(blob);\n        }\n    }\n\n    return fixWebmDuration;\n});\n","<script>\n  import InstallPrompt from './modules/InstallPrompt.svelte'\n  import ysFixWebmDuration from 'fix-webm-duration'\n\n  navigator.serviceWorker.register('/sw.js')\n  let downloadLink\n  let startTime = null\n  let mediaRecorder\n  const handleRecord = function ({ stream, mimeType }) {\n    // to collect stream chunks\n    let recordedChunks = []\n    mediaRecorder = new MediaRecorder(stream, {\n      audioBitsPerSecond: 128000,\n      videoBitsPerSecond: 2500000,\n      mimeType: 'video/x-matroska'\n    })\n\n    mediaRecorder.ondataavailable = function (e) {\n      if (e.data.size > 0) {\n        recordedChunks.push(e.data)\n      }\n    }\n    mediaRecorder.onstop = async function () {\n      const duration = Date.now() - startTime\n      const blob = new Blob(recordedChunks)\n      for (const track of stream.getTracks()) {\n        track.stop()\n      }\n\n      ysFixWebmDuration(blob.slice(0, 64), duration, file => {\n        console.log(file, duration)\n        const patched = new Blob([file, blob.slice(64)])\n        downloadLink.href = URL.createObjectURL(patched)\n        downloadLink.download = `${Date.now()}.mkv`\n        downloadLink.click()\n      })\n    }\n\n    mediaRecorder.start(200) // here 200ms is interval of chunk collection\n    startTime = Date.now()\n  }\n  async function record() {\n    if (mediaRecorder) return mediaRecorder.stop()\n    const mimeType = 'video/x-matroska'\n    const displayStream = await navigator.mediaDevices.getDisplayMedia({\n      video: { frameRate: 60, cursor: 'always' },\n      audio: {\n        sampleSize: 256,\n        channelCount: 2,\n        echoCancellation: false\n      }\n    })\n    displayStream.oninactive = () => {\n      voiceStream.getAudioTracks()[0].stop()\n    }\n    console.log(displayStream)\n    // voiceStream for recording voice with screen recording\n    const voiceStream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n    let tracks = [...displayStream.getTracks(), voiceStream.getAudioTracks()[0]]\n    const stream = new MediaStream(tracks)\n    handleRecord({ stream, mimeType })\n  }\n</script>\n\n<div class=\"sticky-alerts d-flex flex-column-reverse\">\n  <InstallPrompt />\n</div>\n<div class=\"w-full h-full overflow-hidden position-relative dragarea\">\n  <button class=\"btn\" on:click={record} />\n  <a bind:this={downloadLink} />\n</div>\n\n<svelte:head>\n  <title>Screen Recorder</title>\n</svelte:head>\n\n<style>\n  .sticky-alerts {\n    --sticky-alerts-top: auto;\n    bottom: 1rem;\n  }\n</style>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","deferredPrompt","window","e","preventDefault","prompt","outcome","userChoice","definition","sections","doInherit","newClass","baseClass","prototype","constructor","WebmBase","WebmUint","call","padHex","hex","WebmFloat","WebmContainer","WebmFile","source","setSource","updateBySource","updateByData","setData","toString","Uint8Array","substr","parseInt","getValue","setValue","getFloatArrayType","Float32Array","Float64Array","byteArray","reverse","floatArray","buffer","readByte","offset","readUint","firstByte","bytes","end","id","len","Math","min","slice","info","ctr","section","idHex","writeUint","x","draft","flag","writeSections","content","contentLength","set","getSectionById","fixDuration","duration","logger","undefined","message","console","log","segmentSection","infoSection","timeScaleSection","durationSection","toBlob","mimeType","Blob","fixWebmDuration","blob","reader","FileReader","onloadend","file","result","ex","readAsArrayBuffer","module","exports","ysFixWebmDuration","o","outros","downloadLink","navigator","serviceWorker","register","mediaRecorder","startTime","stop","displayStream","mediaDevices","getDisplayMedia","video","frameRate","cursor","audio","sampleSize","channelCount","echoCancellation","oninactive","voiceStream","getAudioTracks","getUserMedia","tracks","getTracks","stream","recordedChunks","MediaRecorder","audioBitsPerSecond","videoBitsPerSecond","ondataavailable","size","onstop","Date","now","track","patched","href","URL","createObjectURL","download","click","start","handleRecord","MediaStream","body"],"mappings":"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"}