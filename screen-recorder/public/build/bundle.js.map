{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/modules/InstallPrompt.svelte","../../src/lib/durationfix.js","../../node_modules/idb-keyval/dist/index.js","../../node_modules/safari-14-idb-fix/dist/index.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n  let deferredPrompt\r\n\r\n  window.addEventListener('beforeinstallprompt', e => {\r\n    e.preventDefault()\r\n    deferredPrompt = e\r\n  })\r\n  async function promptInstall() {\r\n    deferredPrompt.prompt()\r\n    const { outcome } = await deferredPrompt.userChoice\r\n    if (outcome === 'accepted') {\r\n      deferredPrompt = null\r\n    }\r\n  }\r\n  function dismiss() {\r\n    deferredPrompt = null\r\n  }\r\n</script>\r\n\r\n{#if deferredPrompt}\r\n  <div class=\"alert alert-success filled-dm show\" on:click={promptInstall}>\r\n    <h4 class=\"alert-heading\">Install</h4>\r\n    <button class=\"close\" type=\"button\" on:click={dismiss}><span>×</span></button>\r\n    Click here to install the app for more features!\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .alert {\r\n    display: block !important;\r\n    animation: fly-in 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  }\r\n\r\n  @keyframes fly-in {\r\n    0% {\r\n      right: -50rem;\r\n    }\r\n    100% {\r\n      right: 0;\r\n    }\r\n  }\r\n</style>\r\n","\r\n/*\r\n* This is the list of possible WEBM file sections by their IDs.\r\n* Possible types: Container, Binary, Uint, Int, String, Float, Date\r\n*/\r\nconst sections = {\r\n  0xa45dfa3: { name: 'EBML', type: 'Container' },\r\n  0x286: { name: 'EBMLVersion', type: 'Uint' },\r\n  0x2f7: { name: 'EBMLReadVersion', type: 'Uint' },\r\n  0x2f2: { name: 'EBMLMaxIDLength', type: 'Uint' },\r\n  0x2f3: { name: 'EBMLMaxSizeLength', type: 'Uint' },\r\n  0x282: { name: 'DocType', type: 'String' },\r\n  0x287: { name: 'DocTypeVersion', type: 'Uint' },\r\n  0x285: { name: 'DocTypeReadVersion', type: 'Uint' },\r\n  0x6c: { name: 'Void', type: 'Binary' },\r\n  0x3f: { name: 'CRC-32', type: 'Binary' },\r\n  0xb538667: { name: 'SignatureSlot', type: 'Container' },\r\n  0x3e8a: { name: 'SignatureAlgo', type: 'Uint' },\r\n  0x3e9a: { name: 'SignatureHash', type: 'Uint' },\r\n  0x3ea5: { name: 'SignaturePublicKey', type: 'Binary' },\r\n  0x3eb5: { name: 'Signature', type: 'Binary' },\r\n  0x3e5b: { name: 'SignatureElements', type: 'Container' },\r\n  0x3e7b: { name: 'SignatureElementList', type: 'Container' },\r\n  0x2532: { name: 'SignedElement', type: 'Binary' },\r\n  0x8538067: { name: 'Segment', type: 'Container' },\r\n  0x14d9b74: { name: 'SeekHead', type: 'Container' },\r\n  0xdbb: { name: 'Seek', type: 'Container' },\r\n  0x13ab: { name: 'SeekID', type: 'Binary' },\r\n  0x13ac: { name: 'SeekPosition', type: 'Uint' },\r\n  0x549a966: { name: 'Info', type: 'Container' },\r\n  0x33a4: { name: 'SegmentUID', type: 'Binary' },\r\n  0x3384: { name: 'SegmentFilename', type: 'String' },\r\n  0x1cb923: { name: 'PrevUID', type: 'Binary' },\r\n  0x1c83ab: { name: 'PrevFilename', type: 'String' },\r\n  0x1eb923: { name: 'NextUID', type: 'Binary' },\r\n  0x1e83bb: { name: 'NextFilename', type: 'String' },\r\n  0x444: { name: 'SegmentFamily', type: 'Binary' },\r\n  0x2924: { name: 'ChapterTranslate', type: 'Container' },\r\n  0x29fc: { name: 'ChapterTranslateEditionUID', type: 'Uint' },\r\n  0x29bf: { name: 'ChapterTranslateCodec', type: 'Uint' },\r\n  0x29a5: { name: 'ChapterTranslateID', type: 'Binary' },\r\n  0xad7b1: { name: 'TimecodeScale', type: 'Uint' },\r\n  0x489: { name: 'Duration', type: 'Float' },\r\n  0x461: { name: 'DateUTC', type: 'Date' },\r\n  0x3ba9: { name: 'Title', type: 'String' },\r\n  0xd80: { name: 'MuxingApp', type: 'String' },\r\n  0x1741: { name: 'WritingApp', type: 'String' },\r\n  // 0xf43b675: { name: 'Cluster', type: 'Container' },\r\n  0x67: { name: 'Timecode', type: 'Uint' },\r\n  0x1854: { name: 'SilentTracks', type: 'Container' },\r\n  0x18d7: { name: 'SilentTrackNumber', type: 'Uint' },\r\n  0x27: { name: 'Position', type: 'Uint' },\r\n  0x2b: { name: 'PrevSize', type: 'Uint' },\r\n  0x23: { name: 'SimpleBlock', type: 'Binary' },\r\n  0x20: { name: 'BlockGroup', type: 'Container' },\r\n  0x21: { name: 'Block', type: 'Binary' },\r\n  0x22: { name: 'BlockVirtual', type: 'Binary' },\r\n  0x35a1: { name: 'BlockAdditions', type: 'Container' },\r\n  0x26: { name: 'BlockMore', type: 'Container' },\r\n  0x6e: { name: 'BlockAddID', type: 'Uint' },\r\n  0x25: { name: 'BlockAdditional', type: 'Binary' },\r\n  0x1b: { name: 'BlockDuration', type: 'Uint' },\r\n  0x7a: { name: 'ReferencePriority', type: 'Uint' },\r\n  0x7b: { name: 'ReferenceBlock', type: 'Int' },\r\n  0x7d: { name: 'ReferenceVirtual', type: 'Int' },\r\n  0x24: { name: 'CodecState', type: 'Binary' },\r\n  0x35a2: { name: 'DiscardPadding', type: 'Int' },\r\n  0xe: { name: 'Slices', type: 'Container' },\r\n  0x68: { name: 'TimeSlice', type: 'Container' },\r\n  0x4c: { name: 'LaceNumber', type: 'Uint' },\r\n  0x4d: { name: 'FrameNumber', type: 'Uint' },\r\n  0x4b: { name: 'BlockAdditionID', type: 'Uint' },\r\n  0x4e: { name: 'Delay', type: 'Uint' },\r\n  0x4f: { name: 'SliceDuration', type: 'Uint' },\r\n  0x48: { name: 'ReferenceFrame', type: 'Container' },\r\n  0x49: { name: 'ReferenceOffset', type: 'Uint' },\r\n  0x4a: { name: 'ReferenceTimeCode', type: 'Uint' },\r\n  0x2f: { name: 'EncryptedBlock', type: 'Binary' },\r\n  0x654ae6b: { name: 'Tracks', type: 'Container' },\r\n  0x2e: { name: 'TrackEntry', type: 'Container' },\r\n  0x57: { name: 'TrackNumber', type: 'Uint' },\r\n  0x33c5: { name: 'TrackUID', type: 'Uint' },\r\n  0x3: { name: 'TrackType', type: 'Uint' },\r\n  0x39: { name: 'FlagEnabled', type: 'Uint' },\r\n  0x8: { name: 'FlagDefault', type: 'Uint' },\r\n  0x15aa: { name: 'FlagForced', type: 'Uint' },\r\n  0x1c: { name: 'FlagLacing', type: 'Uint' },\r\n  0x2de7: { name: 'MinCache', type: 'Uint' },\r\n  0x2df8: { name: 'MaxCache', type: 'Uint' },\r\n  0x3e383: { name: 'DefaultDuration', type: 'Uint' },\r\n  0x34e7a: { name: 'DefaultDecodedFieldDuration', type: 'Uint' },\r\n  0x3314f: { name: 'TrackTimecodeScale', type: 'Float' },\r\n  0x137f: { name: 'TrackOffset', type: 'Int' },\r\n  0x15ee: { name: 'MaxBlockAdditionID', type: 'Uint' },\r\n  0x136e: { name: 'Name', type: 'String' },\r\n  0x2b59c: { name: 'Language', type: 'String' },\r\n  0x6: { name: 'CodecID', type: 'String' },\r\n  0x23a2: { name: 'CodecPrivate', type: 'Binary' },\r\n  0x58688: { name: 'CodecName', type: 'String' },\r\n  0x3446: { name: 'AttachmentLink', type: 'Uint' },\r\n  0x1a9697: { name: 'CodecSettings', type: 'String' },\r\n  0x1b4040: { name: 'CodecInfoURL', type: 'String' },\r\n  0x6b240: { name: 'CodecDownloadURL', type: 'String' },\r\n  0x2a: { name: 'CodecDecodeAll', type: 'Uint' },\r\n  0x2fab: { name: 'TrackOverlay', type: 'Uint' },\r\n  0x16aa: { name: 'CodecDelay', type: 'Uint' },\r\n  0x16bb: { name: 'SeekPreRoll', type: 'Uint' },\r\n  0x2624: { name: 'TrackTranslate', type: 'Container' },\r\n  0x26fc: { name: 'TrackTranslateEditionUID', type: 'Uint' },\r\n  0x26bf: { name: 'TrackTranslateCodec', type: 'Uint' },\r\n  0x26a5: { name: 'TrackTranslateTrackID', type: 'Binary' },\r\n  0x60: { name: 'Video', type: 'Container' },\r\n  0x1a: { name: 'FlagInterlaced', type: 'Uint' },\r\n  0x13b8: { name: 'StereoMode', type: 'Uint' },\r\n  0x13c0: { name: 'AlphaMode', type: 'Uint' },\r\n  0x13b9: { name: 'OldStereoMode', type: 'Uint' },\r\n  0x30: { name: 'PixelWidth', type: 'Uint' },\r\n  0x3a: { name: 'PixelHeight', type: 'Uint' },\r\n  0x14aa: { name: 'PixelCropBottom', type: 'Uint' },\r\n  0x14bb: { name: 'PixelCropTop', type: 'Uint' },\r\n  0x14cc: { name: 'PixelCropLeft', type: 'Uint' },\r\n  0x14dd: { name: 'PixelCropRight', type: 'Uint' },\r\n  0x14b0: { name: 'DisplayWidth', type: 'Uint' },\r\n  0x14ba: { name: 'DisplayHeight', type: 'Uint' },\r\n  0x14b2: { name: 'DisplayUnit', type: 'Uint' },\r\n  0x14b3: { name: 'AspectRatioType', type: 'Uint' },\r\n  0xeb524: { name: 'ColourSpace', type: 'Binary' },\r\n  0xfb523: { name: 'GammaValue', type: 'Float' },\r\n  0x383e3: { name: 'FrameRate', type: 'Float' },\r\n  0x61: { name: 'Audio', type: 'Container' },\r\n  0x35: { name: 'SamplingFrequency', type: 'Float' },\r\n  0x38b5: { name: 'OutputSamplingFrequency', type: 'Float' },\r\n  0x1f: { name: 'Channels', type: 'Uint' },\r\n  0x3d7b: { name: 'ChannelPositions', type: 'Binary' },\r\n  0x2264: { name: 'BitDepth', type: 'Uint' },\r\n  0x62: { name: 'TrackOperation', type: 'Container' },\r\n  0x63: { name: 'TrackCombinePlanes', type: 'Container' },\r\n  0x64: { name: 'TrackPlane', type: 'Container' },\r\n  0x65: { name: 'TrackPlaneUID', type: 'Uint' },\r\n  0x66: { name: 'TrackPlaneType', type: 'Uint' },\r\n  0x69: { name: 'TrackJoinBlocks', type: 'Container' },\r\n  0x6d: { name: 'TrackJoinUID', type: 'Uint' },\r\n  0x40: { name: 'TrickTrackUID', type: 'Uint' },\r\n  0x41: { name: 'TrickTrackSegmentUID', type: 'Binary' },\r\n  0x46: { name: 'TrickTrackFlag', type: 'Uint' },\r\n  0x47: { name: 'TrickMasterTrackUID', type: 'Uint' },\r\n  0x44: { name: 'TrickMasterTrackSegmentUID', type: 'Binary' },\r\n  0x2d80: { name: 'ContentEncodings', type: 'Container' },\r\n  0x2240: { name: 'ContentEncoding', type: 'Container' },\r\n  0x1031: { name: 'ContentEncodingOrder', type: 'Uint' },\r\n  0x1032: { name: 'ContentEncodingScope', type: 'Uint' },\r\n  0x1033: { name: 'ContentEncodingType', type: 'Uint' },\r\n  0x1034: { name: 'ContentCompression', type: 'Container' },\r\n  0x254: { name: 'ContentCompAlgo', type: 'Uint' },\r\n  0x255: { name: 'ContentCompSettings', type: 'Binary' },\r\n  0x1035: { name: 'ContentEncryption', type: 'Container' },\r\n  0x7e1: { name: 'ContentEncAlgo', type: 'Uint' },\r\n  0x7e2: { name: 'ContentEncKeyID', type: 'Binary' },\r\n  0x7e3: { name: 'ContentSignature', type: 'Binary' },\r\n  0x7e4: { name: 'ContentSigKeyID', type: 'Binary' },\r\n  0x7e5: { name: 'ContentSigAlgo', type: 'Uint' },\r\n  0x7e6: { name: 'ContentSigHashAlgo', type: 'Uint' },\r\n  0xc53bb6b: { name: 'Cues', type: 'Container' },\r\n  0x3b: { name: 'CuePoint', type: 'Container' },\r\n  0x33: { name: 'CueTime', type: 'Uint' },\r\n  0x37: { name: 'CueTrackPositions', type: 'Container' },\r\n  0x77: { name: 'CueTrack', type: 'Uint' },\r\n  0x71: { name: 'CueClusterPosition', type: 'Uint' },\r\n  0x70: { name: 'CueRelativePosition', type: 'Uint' },\r\n  0x32: { name: 'CueDuration', type: 'Uint' },\r\n  0x1378: { name: 'CueBlockNumber', type: 'Uint' },\r\n  0x6a: { name: 'CueCodecState', type: 'Uint' },\r\n  0x5b: { name: 'CueReference', type: 'Container' },\r\n  0x16: { name: 'CueRefTime', type: 'Uint' },\r\n  0x17: { name: 'CueRefCluster', type: 'Uint' },\r\n  0x135f: { name: 'CueRefNumber', type: 'Uint' },\r\n  0x6b: { name: 'CueRefCodecState', type: 'Uint' },\r\n  0x941a469: { name: 'Attachments', type: 'Container' },\r\n  0x21a7: { name: 'AttachedFile', type: 'Container' },\r\n  0x67e: { name: 'FileDescription', type: 'String' },\r\n  0x66e: { name: 'FileName', type: 'String' },\r\n  0x660: { name: 'FileMimeType', type: 'String' },\r\n  0x65c: { name: 'FileData', type: 'Binary' },\r\n  0x6ae: { name: 'FileUID', type: 'Uint' },\r\n  0x675: { name: 'FileReferral', type: 'Binary' },\r\n  0x661: { name: 'FileUsedStartTime', type: 'Uint' },\r\n  0x662: { name: 'FileUsedEndTime', type: 'Uint' },\r\n  0x43a770: { name: 'Chapters', type: 'Container' },\r\n  0x5b9: { name: 'EditionEntry', type: 'Container' },\r\n  0x5bc: { name: 'EditionUID', type: 'Uint' },\r\n  0x5bd: { name: 'EditionFlagHidden', type: 'Uint' },\r\n  0x5db: { name: 'EditionFlagDefault', type: 'Uint' },\r\n  0x5dd: { name: 'EditionFlagOrdered', type: 'Uint' },\r\n  0x36: { name: 'ChapterAtom', type: 'Container' },\r\n  0x33c4: { name: 'ChapterUID', type: 'Uint' },\r\n  0x1654: { name: 'ChapterStringUID', type: 'String' },\r\n  0x11: { name: 'ChapterTimeStart', type: 'Uint' },\r\n  0x12: { name: 'ChapterTimeEnd', type: 'Uint' },\r\n  0x18: { name: 'ChapterFlagHidden', type: 'Uint' },\r\n  0x598: { name: 'ChapterFlagEnabled', type: 'Uint' },\r\n  0x2e67: { name: 'ChapterSegmentUID', type: 'Binary' },\r\n  0x2ebc: { name: 'ChapterSegmentEditionUID', type: 'Uint' },\r\n  0x23c3: { name: 'ChapterPhysicalEquiv', type: 'Uint' },\r\n  0xf: { name: 'ChapterTrack', type: 'Container' },\r\n  0x9: { name: 'ChapterTrackNumber', type: 'Uint' },\r\n  0x0: { name: 'ChapterDisplay', type: 'Container' },\r\n  0x5: { name: 'ChapString', type: 'String' },\r\n  0x37c: { name: 'ChapLanguage', type: 'String' },\r\n  0x37e: { name: 'ChapCountry', type: 'String' },\r\n  0x2944: { name: 'ChapProcess', type: 'Container' },\r\n  0x2955: { name: 'ChapProcessCodecID', type: 'Uint' },\r\n  0x50d: { name: 'ChapProcessPrivate', type: 'Binary' },\r\n  0x2911: { name: 'ChapProcessCommand', type: 'Container' },\r\n  0x2922: { name: 'ChapProcessTime', type: 'Uint' },\r\n  0x2933: { name: 'ChapProcessData', type: 'Binary' },\r\n  0x254c367: { name: 'Tags', type: 'Container' },\r\n  0x3373: { name: 'Tag', type: 'Container' },\r\n  0x23c0: { name: 'Targets', type: 'Container' },\r\n  0x28ca: { name: 'TargetTypeValue', type: 'Uint' },\r\n  0x23ca: { name: 'TargetType', type: 'String' },\r\n  0x23c5: { name: 'TagTrackUID', type: 'Uint' },\r\n  0x23c9: { name: 'TagEditionUID', type: 'Uint' },\r\n  0x23c4: { name: 'TagChapterUID', type: 'Uint' },\r\n  0x23c6: { name: 'TagAttachmentUID', type: 'Uint' },\r\n  0x27c8: { name: 'SimpleTag', type: 'Container' },\r\n  0x5a3: { name: 'TagName', type: 'String' },\r\n  0x47a: { name: 'TagLanguage', type: 'String' },\r\n  0x484: { name: 'TagDefault', type: 'Uint' },\r\n  0x487: { name: 'TagString', type: 'String' },\r\n  0x485: { name: 'TagBinary', type: 'Binary' }\r\n}\r\n\r\nclass WebmBase {\r\n  constructor (name, type) {\r\n    this.name = name || 'Unknown'\r\n    this.type = type || 'Unknown'\r\n  }\r\n\r\n  updateBySource () { }\r\n  setSource (source) {\r\n    this.source = source\r\n    this.updateBySource()\r\n  }\r\n\r\n  updateByData () { }\r\n  setData (data) {\r\n    this.data = data\r\n    this.updateByData()\r\n  }\r\n}\r\n\r\nclass WebmUint extends WebmBase {\r\n  constructor (name, type = 'Uint') {\r\n    super(name, type)\r\n  }\r\n\r\n  updateBySource () {\r\n    // use hex representation of a number instead of number value\r\n    this.data = ''\r\n    for (let i = 0; i < this.source.length; i++) {\r\n      const hex = this.source[i].toString(16)\r\n      this.data += padHex(hex)\r\n    }\r\n  }\r\n\r\n  updateByData () {\r\n    const length = this.data.length / 2\r\n    this.source = new Uint8Array(length)\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = this.data.substr(i * 2, 2)\r\n      this.source[i] = parseInt(hex, 16)\r\n    }\r\n  }\r\n\r\n  getValue () {\r\n    return parseInt(this.data, 16)\r\n  }\r\n\r\n  setValue (value) {\r\n    this.setData(padHex(value.toString(16)))\r\n  }\r\n}\r\nfunction padHex (hex) {\r\n  return hex.length % 2 === 1 ? '0' + hex : hex\r\n}\r\n\r\nclass WebmFloat extends WebmBase {\r\n  constructor (name, type = 'Float') {\r\n    super(name, type)\r\n  }\r\n\r\n  getFloatArrayType () {\r\n    return this.source && this.source.length === 4 ? Float32Array : Float64Array\r\n  }\r\n\r\n  updateBySource () {\r\n    const byteArray = this.source.reverse()\r\n    const FloatArrayType = this.getFloatArrayType()\r\n    const floatArray = new FloatArrayType(byteArray.buffer)\r\n    this.data = floatArray[0]\r\n  }\r\n\r\n  updateByData () {\r\n    const FloatArrayType = this.getFloatArrayType()\r\n    const floatArray = new FloatArrayType([this.data])\r\n    const byteArray = new Uint8Array(floatArray.buffer)\r\n    this.source = byteArray.reverse()\r\n  }\r\n\r\n  getValue () {\r\n    return this.data\r\n  }\r\n\r\n  setValue (value) {\r\n    this.setData(value)\r\n  }\r\n}\r\n\r\nclass WebmContainer extends WebmBase {\r\n  constructor (name, type = 'Container') {\r\n    super(name, type)\r\n  }\r\n\r\n  readByte () {\r\n    return this.source[this.offset++]\r\n  }\r\n\r\n  readUint () {\r\n    const firstByte = this.readByte()\r\n    const bytes = 8 - firstByte.toString(2).length\r\n    let value = firstByte - (1 << (7 - bytes))\r\n    for (let i = 0; i < bytes; i++) {\r\n      // don't use bit operators to support x86\r\n      value *= 256\r\n      value += this.readByte()\r\n    }\r\n    return value\r\n  }\r\n\r\n  updateBySource () {\r\n    this.data = []\r\n    let end\r\n    for (this.offset = 0; this.offset < this.source.length; this.offset = end) {\r\n      const id = this.readUint()\r\n      const len = this.readUint()\r\n      end = Math.min(this.offset + len, this.source.length)\r\n      const data = this.source.slice(this.offset, end)\r\n\r\n      const info = sections[id] || { name: 'Unknown', type: 'Unknown' }\r\n      let Ctr = WebmBase\r\n      switch (info.type) {\r\n        case 'Container':\r\n          Ctr = WebmContainer\r\n          break\r\n        case 'Uint':\r\n          Ctr = WebmUint\r\n          break\r\n        case 'Float':\r\n          Ctr = WebmFloat\r\n          break\r\n      }\r\n      const section = new Ctr(info.name, info.type)\r\n      section.setSource(data)\r\n      this.data.push({\r\n        id: id,\r\n        idHex: id.toString(16),\r\n        data: section\r\n      })\r\n    }\r\n  }\r\n\r\n  writeUint (x, draft) {\r\n    let bytes = 1\r\n    let flag = 0x80\r\n    while (x >= flag && bytes < 8) {\r\n      bytes++\r\n      flag *= 0x80\r\n    }\r\n\r\n    if (!draft) {\r\n      let value = flag + x\r\n      for (let i = bytes - 1; i >= 0; i--) {\r\n        // don't use bit operators to support x86\r\n        const c = value % 256\r\n        this.source[this.offset + i] = c\r\n        value = (value - c) / 256\r\n      }\r\n    }\r\n\r\n    this.offset += bytes\r\n  }\r\n\r\n  writeSections (draft) {\r\n    this.offset = 0\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const section = this.data[i]; const content = section.data.source; const contentLength = content.length\r\n      this.writeUint(section.id, draft)\r\n      this.writeUint(contentLength, draft)\r\n      if (!draft) {\r\n        this.source.set(content, this.offset)\r\n      }\r\n      this.offset += contentLength\r\n    }\r\n    return this.offset\r\n  }\r\n\r\n  updateByData () {\r\n    // run without accessing this.source to determine total length - need to know it to create Uint8Array\r\n    const length = this.writeSections('draft')\r\n    this.source = new Uint8Array(length)\r\n    // now really write data\r\n    this.writeSections()\r\n  }\r\n\r\n  getSectionById (id) {\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const section = this.data[i]\r\n      if (section.id === id) {\r\n        return section.data\r\n      }\r\n    }\r\n    return null\r\n  }\r\n}\r\n\r\nclass WebmFile extends WebmContainer {\r\n  constructor (source) {\r\n    super('File', 'File')\r\n    this.setSource(source)\r\n  }\r\n\r\n  fixDuration (duration) {\r\n    const segmentSection = this.getSectionById(0x8538067)\r\n    if (!segmentSection) return false\r\n\r\n    const infoSection = segmentSection.getSectionById(0x549a966)\r\n    if (!infoSection) return false\r\n\r\n    const timeScaleSection = infoSection.getSectionById(0xad7b1)\r\n    if (!timeScaleSection) return false\r\n\r\n    let durationSection = infoSection.getSectionById(0x489)\r\n    if (durationSection) {\r\n      if (durationSection.getValue() <= 0) {\r\n        durationSection.setValue(duration)\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      // append Duration section\r\n      durationSection = new WebmFloat('Duration', 'Float')\r\n      durationSection.setValue(duration)\r\n      infoSection.data.push({\r\n        id: 0x489,\r\n        data: durationSection\r\n      })\r\n    }\r\n\r\n    // set default time scale to 1 millisecond (1000000 nanoseconds)\r\n    timeScaleSection.setValue(1000000)\r\n    infoSection.updateByData()\r\n    segmentSection.updateByData()\r\n    this.updateByData()\r\n\r\n    return true\r\n  }\r\n\r\n  toBlob (mimeType) {\r\n    return new Blob([this.source.buffer], { type: mimeType || 'video/webm' })\r\n  }\r\n}\r\n\r\nexport function fixDuration (blob, duration, callback) {\r\n  return new Promise(resolve => {\r\n    try {\r\n      blob.arrayBuffer().then(buffer => {\r\n        try {\r\n          const file = new WebmFile(new Uint8Array(buffer))\r\n          if (file.fixDuration(duration)) {\r\n            blob = file.toBlob(blob.type)\r\n          }\r\n        } catch (ex) {\r\n        // ignore\r\n        }\r\n        resolve(blob)\r\n      })\r\n    } catch (ex) {\r\n      resolve(blob)\r\n    }\r\n  })\r\n}\r\n","import safariFix from 'safari-14-idb-fix';\n\nfunction promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const dbp = safariFix().then(() => {\n        const request = indexedDB.open(dbName);\n        request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n        return promisifyRequest(request);\n    });\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(customStore, callback) {\n    return customStore('readonly', (store) => {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        store.openCursor().onsuccess = function () {\n            if (!this.result)\n                return;\n            callback(this.result);\n            this.result.continue();\n        };\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.key)).then(() => items);\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.value)).then(() => items);\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push([cursor.key, cursor.value])).then(() => items);\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","/**\n * Work around Safari 14 IndexedDB open bug.\n *\n * Safari has a horrible bug where IDB requests can hang while the browser is starting up. https://bugs.webkit.org/show_bug.cgi?id=226547\n * The only solution is to keep nudging it until it's awake.\n */\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    // No point putting other browsers or older versions of Safari through this mess.\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nexport default idbReady;\n","<script>\n  import InstallPrompt from './modules/InstallPrompt.svelte'\n  import { fixDuration } from './lib/durationfix.js'\n  import { createStore, get, set } from 'idb-keyval'\n\n  navigator.serviceWorker.register('/sw.js')\n\n  const customStore = createStore('screen-recorder-settings', 'settings')\n  let settings = {\n    fps: 60,\n    folder: null,\n    vidrate: 25,\n    audrate: 128,\n    mic: true,\n    supression: true,\n    cancellation: true,\n    channels: 2,\n    samplesize: 24,\n    samplerate: 48,\n    codec: 'vp9',\n    container: 'mkv',\n    cursor: 'never'\n  }\n  let folderName = null\n\n  get('settings', customStore).then(obj => {\n    if (obj) {\n      settings = obj\n      if (obj.folder) folderName = obj.folder.name || 'none'\n    }\n  })\n\n  $: set('settings', settings, customStore)\n  async function pickFolder() {\n    const handle = await window.showDirectoryPicker()\n    await handle.requestPermission({ mode: 'readwrite' })\n    settings.folder = handle\n    folderName = handle.name || 'none'\n  }\n\n  let startTime = null\n  let mediaRecorder = null\n  let displayStream = null\n  let voiceStream = null\n  let audioContext = null\n  const handleRecord = async stream => {\n    // to collect stream chunks\n    let recordedChunks = []\n    mediaRecorder = new MediaRecorder(stream, {\n      audioBitsPerSecond: settings.audrate * 1000,\n      videoBitsPerSecond: settings.vidrate * 1000000,\n      mimeType: `video/${settings.container === 'mkv' ? 'x-matroska' : 'webm'};codecs=${settings.codec}`\n    })\n    startTime = Date.now()\n    const fileHandle = await settings.folder?.getFileHandle(`${startTime}.${settings.container}`, { create: true })\n    console.log(fileHandle)\n    const fileStream = await fileHandle.createWritable()\n    mediaRecorder.ondataavailable = ({ data }) => {\n      if (data.size > 0) {\n        if (fileStream) {\n          fileStream.write(data)\n        } else {\n          recordedChunks.push(data)\n        }\n      }\n    }\n    mediaRecorder.onstop = async () => {\n      const duration = Date.now() - startTime\n      const blob = new Blob(recordedChunks)\n      for (const track of stream.getTracks()) {\n        track.stop()\n      }\n      if (fileStream) {\n        await fileStream.close()\n        const file = await fileHandle.getFile()\n        const fixed = await fixDuration(file.slice(0, 64), duration)\n        const fixStream = await fileHandle.createWritable({ keepExistingData: true })\n        fixStream.write({ type: 'write', position: 0, data: fixed })\n        fixStream.close()\n      } else {\n        const file = await fixDuration(blob.slice(0, 64), duration)\n        const patched = new Blob([file, blob.slice(64)])\n        const downloadLink = document.createElement('a')\n        downloadLink.href = URL.createObjectURL(patched)\n        downloadLink.download = `${startTime}.${settings.container}`\n        downloadLink.click()\n      }\n    }\n\n    mediaRecorder.start(200) // 200ms interval\n  }\n  async function record() {\n    if ('showDirectoryPicker' in window && !settings.folder) await pickFolder()\n    if (settings.folder) settings.folder.requestPermission({ mode: 'readwrite' })\n    if (mediaRecorder) {\n      mediaRecorder.stop()\n      mediaRecorder = null\n      return\n    }\n    displayStream = await navigator.mediaDevices.getDisplayMedia({\n      video: { frameRate: settings.fps, cursor: settings.cursor },\n      audio: {\n        echoCancellation: false,\n        noiseSuppression: false\n      }\n    })\n    displayStream.getVideoTracks()[0].onended = () => {\n      for (const track of [...displayStream.getTracks(), ...voiceStream.getTracks()]) {\n        track.stop()\n      }\n      if (audioContext) audioContext.close()\n      mediaRecorder.stop()\n      mediaRecorder = null\n    }\n    let tracks = displayStream.getTracks()\n    if (settings.mic) {\n      audioContext = new AudioContext()\n      voiceStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: settings.cancellation,\n          noiseSuppression: settings.supression\n        },\n        video: false\n      })\n      const audio1 = audioContext.createMediaStreamSource(voiceStream)\n      const audio2 = audioContext.createMediaStreamSource(displayStream)\n      const dest = audioContext.createMediaStreamDestination()\n      audio1.connect(dest)\n      audio2.connect(dest)\n      tracks = [...displayStream.getVideoTracks(), ...dest.stream.getAudioTracks()]\n    }\n    handleRecord(new MediaStream(tracks))\n  }\n</script>\n\n<div class=\"sticky-alerts d-flex flex-column-reverse\">\n  <InstallPrompt />\n</div>\n<div class=\"w-full h-full overflow-hidden position-relative dragarea d-flex align-items-center justify-content-center overflow-auto\">\n  <div class=\"content flex-row flex-wrap mw-600\">\n    {#if 'showDirectoryPicker' in window}\n      <div class=\"input-group mb-10 w-300\" on:click={pickFolder}>\n        <div class=\"input-group-prepend\">\n          <button class=\"btn btn-primary w-150\" type=\"button\">Choose Folder</button>\n        </div>\n        <input type=\"text\" class=\"form-control pl-10\" placeholder=\"Folder\" value={folderName} />\n      </div>\n    {/if}\n    <div class=\"input-group mb-10 w-300\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Cursor Display</span>\n      </div>\n      <select class=\"form-control\" bind:value={settings.cursor}>\n        <option value=\"never\">Never</option>\n        <option value=\"always\">Always</option>\n        <option value=\"motion\">Motion</option>\n      </select>\n    </div>\n    <div class=\"input-group mb-10 w-300\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Video Container</span>\n      </div>\n      <select class=\"form-control\" bind:value={settings.container}>\n        <option value=\"mkv\">mkv</option>\n        <option value=\"webm\">webm</option>\n      </select>\n    </div>\n    <div class=\"input-group mb-10 w-300\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Video Codec</span>\n      </div>\n      <select class=\"form-control\" bind:value={settings.codec}>\n        <option value=\"vp9\">vp9</option>\n        <option value=\"vp8\">vp8</option>\n        <option value=\"h264\">h264</option>\n        <option value=\"avc1\">avc1</option>\n      </select>\n    </div>\n    <div class=\"input-group w-300 mb-10\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Video Framerate</span>\n      </div>\n      <input type=\"number\" bind:value={settings.fps} min=\"0\" max=\"120\" class=\"form-control\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text w-50\">FPS</span>\n      </div>\n    </div>\n    <div class=\"input-group w-300 mb-10\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Video Bitrate</span>\n      </div>\n      <input type=\"number\" bind:value={settings.vidrate} min=\"0\" max=\"50\" class=\"form-control\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text w-50\">MB/s</span>\n      </div>\n    </div>\n    <div class=\"input-group w-300 mb-10\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Audio Bitrate</span>\n      </div>\n      <input type=\"number\" bind:value={settings.audrate} min=\"0\" max=\"128\" class=\"form-control\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text w-50\">KB/s</span>\n      </div>\n    </div>\n    <div class=\"input-group w-300 mb-10\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Sample Rate</span>\n      </div>\n      <input type=\"number\" bind:value={settings.samplerate} min=\"22\" max=\"192\" class=\"form-control\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text w-50\">KHz</span>\n      </div>\n    </div>\n    <div class=\"input-group w-300 mb-10\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Sample Size</span>\n      </div>\n      <input type=\"number\" bind:value={settings.samplesize} min=\"8\" max=\"32\" class=\"form-control\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text w-50\">bits</span>\n      </div>\n    </div>\n    <div class=\"input-group w-300 mb-10\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text w-150 justify-content-center\">Audio Channels</span>\n      </div>\n      <input type=\"number\" bind:value={settings.channels} min=\"1\" max=\"8\" class=\"form-control\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text\">Channels</span>\n      </div>\n    </div>\n    <div class=\"custom-switch mb-10 font-size-16 w-300\">\n      <input type=\"checkbox\" id=\"compact\" bind:checked={settings.mic} />\n      <label for=\"compact\">Record Microphone</label>\n    </div>\n    <div class=\"custom-switch mb-10 font-size-16 w-300\">\n      <input type=\"checkbox\" id=\"mic\" bind:checked={settings.supression} />\n      <label for=\"mic\">Noise Suppression</label>\n    </div>\n    <div class=\"custom-switch mb-10 font-size-16 w-300\">\n      <input type=\"checkbox\" id=\"cancel\" bind:checked={settings.cancellation} />\n      <label for=\"cancel\">Echo Cancellation</label>\n    </div>\n\n    <button class=\"btn mt-10\" on:click={record}>{mediaRecorder ? 'Stop Recording' : 'Start Recording'}</button>\n  </div>\n</div>\n\n<svelte:head>\n  <title>Screen Recorder</title>\n</svelte:head>\n\n<style>\n  * {\n    user-select: none;\n  }\n  :root {\n    --tooltip-width: 17rem;\n  }\n  .sticky-alerts {\n    --sticky-alerts-top: auto;\n    bottom: 1rem;\n  }\n  :global(::-webkit-inner-spin-button) {\n    opacity: 1;\n    margin-left: 0.4rem;\n    margin-right: -0.5rem;\n    filter: invert(0.84);\n    padding-top: 2rem;\n  }\n\n  :global(.bg-dark::-webkit-inner-spin-button) {\n    filter: invert(0.942);\n  }\n</style>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_input_value","input","select_option","select","i","length","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","globals","window","globalThis","global","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","deferredPrompt","e","preventDefault","prompt","outcome","userChoice","sections","WebmBase","constructor","updateBySource","setSource","source","updateByData","setData","WebmUint","super","hex","toString","padHex","Uint8Array","substr","parseInt","getValue","setValue","WebmFloat","getFloatArrayType","Float32Array","Float64Array","byteArray","reverse","floatArray","buffer","WebmContainer","readByte","offset","readUint","firstByte","bytes","end","id","len","Math","min","slice","info","Ctr","section","idHex","writeUint","x","draft","flag","writeSections","content","contentLength","set","getSectionById","WebmFile","fixDuration","duration","segmentSection","infoSection","timeScaleSection","durationSection","toBlob","mimeType","Blob","blob","arrayBuffer","file","ex","promisifyRequest","request","reject","oncomplete","onsuccess","result","onabort","onerror","error","createStore","dbName","storeName","dbp","navigator","userAgentData","test","userAgent","indexedDB","databases","tryIdb","finally","intervalId","setInterval","clearInterval","open","onupgradeneeded","createObjectStore","txMode","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","cursor","container","codec","fps","vidrate","audrate","samplerate","samplesize","channels","mic","supression","cancellation","wholeText","o","outros","serviceWorker","register","customStore","settings","folder","folderName","pickFolder","handle","showDirectoryPicker","requestPermission","mode","key","store","get","startTime","mediaRecorder","displayStream","voiceStream","audioContext","put","stop","mediaDevices","getDisplayMedia","video","frameRate","audio","echoCancellation","noiseSuppression","getVideoTracks","onended","track","getTracks","close","tracks","AudioContext","getUserMedia","audio1","createMediaStreamSource","audio2","dest","createMediaStreamDestination","connect","stream","getAudioTracks","recordedChunks","MediaRecorder","audioBitsPerSecond","videoBitsPerSecond","Date","now","fileHandle","getFileHandle","console","log","fileStream","createWritable","ondataavailable","size","write","onstop","getFile","fixed","fixStream","keepExistingData","position","patched","downloadLink","href","URL","createObjectURL","download","click","start","handleRecord","MediaStream","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAsRhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAChBvB,EAAK0B,aAAaH,KAAeC,GACtCxB,EAAK2B,aAAaJ,EAAWC,GAkDrC,SAASI,EAAUJ,GACf,MAAiB,KAAVA,EAAe,MAAQA,EAuIlC,SAASK,EAAgBC,EAAON,GAC5BM,EAAMN,MAAiB,MAATA,EAAgB,GAAKA,EAavC,SAASO,EAAcC,EAAQR,GAC3B,IAAK,IAAIS,EAAI,EAAGA,EAAID,EAAOb,QAAQe,OAAQD,GAAK,EAAG,CAC/C,MAAME,EAASH,EAAOb,QAAQc,GAC9B,GAAIE,EAAOC,UAAYZ,EAEnB,YADAW,EAAOE,UAAW,GAI1BL,EAAOM,eAAiB,EAQ5B,SAASC,EAAaP,GAClB,MAAMQ,EAAkBR,EAAOS,cAAc,aAAeT,EAAOb,QAAQ,GAC3E,OAAOqB,GAAmBA,EAAgBJ,QA2Q9C,IAAIM,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAwDxB,MAAMC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBnE,GACzB6D,EAAiBO,KAAKpE,GAK1B,IAAIqE,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAItB,EAAI,EAAGA,EAAIY,EAAiBX,OAAQD,GAAK,EAAG,CACjD,MAAMW,EAAYC,EAAiBZ,GACnCU,EAAsBC,GACtBe,EAAOf,EAAUgB,IAIrB,IAFAjB,EAAsB,MACtBE,EAAiBX,OAAS,EACnBY,EAAkBZ,QACrBY,EAAkBe,KAAlBf,GAIJ,IAAK,IAAIb,EAAI,EAAGA,EAAIc,EAAiBb,OAAQD,GAAK,EAAG,CACjD,MAAM6B,EAAWf,EAAiBd,GAC7BuB,EAAeO,IAAID,KAEpBN,EAAeQ,IAAIF,GACnBA,KAGRf,EAAiBb,OAAS,QACrBW,EAAiBX,QAC1B,KAAOc,EAAgBd,QACnBc,EAAgBa,KAAhBb,GAEJI,GAAmB,EACnBG,GAAW,EACXC,EAAeS,SAEnB,SAASN,EAAOC,GACZ,GAAoB,OAAhBA,EAAGM,SAAmB,CACtBN,EAAGD,SACHrE,EAAQsE,EAAGO,eACX,MAAMC,EAAQR,EAAGQ,MACjBR,EAAGQ,MAAQ,EAAE,GACbR,EAAGM,UAAYN,EAAGM,SAASG,EAAET,EAAGU,IAAKF,GACrCR,EAAGW,aAAa/E,QAAQ6D,IAiBhC,MAAMmB,EAAW,IAAIf,IAerB,SAASgB,EAAcC,EAAOC,GACtBD,GAASA,EAAMzC,IACfuC,EAASI,OAAOF,GAChBA,EAAMzC,EAAE0C,IAuUhB,MAAME,EAA6B,oBAAXC,OAClBA,OACsB,oBAAfC,WACHA,WACAC,OA6SV,SAASC,EAAgBrC,EAAW7C,EAAQI,EAAQ+E,GAChD,MAAMhB,SAAEA,EAAQiB,SAAEA,EAAQC,WAAEA,EAAUb,aAAEA,GAAiB3B,EAAUgB,GACnEM,GAAYA,EAASmB,EAAEtF,EAAQI,GAC1B+E,GAED7B,GAAoB,KAChB,MAAMiC,EAAiBH,EAASI,IAAItG,GAAKuG,OAAO/F,GAC5C2F,EACAA,EAAW9B,QAAQgC,GAKnBhG,EAAQgG,GAEZ1C,EAAUgB,GAAGuB,SAAW,MAGhCZ,EAAa/E,QAAQ6D,GAEzB,SAASoC,EAAkB7C,EAAW8C,GAClC,MAAM9B,EAAKhB,EAAUgB,GACD,OAAhBA,EAAGM,WACH5E,EAAQsE,EAAGwB,YACXxB,EAAGM,UAAYN,EAAGM,SAASyB,EAAED,GAG7B9B,EAAGwB,WAAaxB,EAAGM,SAAW,KAC9BN,EAAGU,IAAM,IAGjB,SAASsB,EAAWhD,EAAWX,IACI,IAA3BW,EAAUgB,GAAGQ,MAAM,KACnBvB,EAAiBS,KAAKV,GAxvBrBQ,IACDA,GAAmB,EACnBH,EAAiB4C,KAAKnC,IAwvBtBd,EAAUgB,GAAGQ,MAAM0B,KAAK,IAE5BlD,EAAUgB,GAAGQ,MAAOnC,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS8D,EAAKnD,EAAWzB,EAAS6E,EAAUC,EAAiBC,EAAWC,EAAOC,EAAehC,EAAQ,EAAE,IACpG,MAAMiC,EAAmB3D,EACzBC,EAAsBC,GACtB,MAAMgB,EAAKhB,EAAUgB,GAAK,CACtBM,SAAU,KACVI,IAAK,KAEL6B,MAAAA,EACAxC,OAAQ3E,EACRkH,UAAAA,EACAI,MAAOnH,IAEPgG,SAAU,GACVC,WAAY,GACZmB,cAAe,GACfpC,cAAe,GACfI,aAAc,GACdiC,QAAS,IAAIC,IAAItF,EAAQqF,UAAYH,EAAmBA,EAAiBzC,GAAG4C,QAAU,KAEtFE,UAAWvH,IACXiF,MAAAA,EACAuC,YAAY,EACZC,KAAMzF,EAAQpB,QAAUsG,EAAiBzC,GAAGgD,MAEhDR,GAAiBA,EAAcxC,EAAGgD,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAjD,EAAGU,IAAM0B,EACHA,EAASpD,EAAWzB,EAAQgF,OAAS,IAAI,CAAClE,EAAG6E,KAAQC,KACnD,MAAMvF,EAAQuF,EAAK7E,OAAS6E,EAAK,GAAKD,EAOtC,OANIlD,EAAGU,KAAO4B,EAAUtC,EAAGU,IAAIrC,GAAI2B,EAAGU,IAAIrC,GAAKT,MACtCoC,EAAG+C,YAAc/C,EAAG0C,MAAMrE,IAC3B2B,EAAG0C,MAAMrE,GAAGT,GACZqF,GACAjB,EAAWhD,EAAWX,IAEvB6E,KAET,GACNlD,EAAGD,SACHkD,GAAQ,EACRvH,EAAQsE,EAAGO,eAEXP,EAAGM,WAAW+B,GAAkBA,EAAgBrC,EAAGU,KAC/CnD,EAAQpB,OAAQ,CAChB,GAAIoB,EAAQ6F,QAAS,CAEjB,MAAMC,EAvxClB,SAAkBzG,GACd,OAAO0G,MAAMC,KAAK3G,EAAQ4G,YAsxCJC,CAASlG,EAAQpB,QAE/B6D,EAAGM,UAAYN,EAAGM,SAASoD,EAAEL,GAC7BA,EAAMzH,QAAQa,QAIduD,EAAGM,UAAYN,EAAGM,SAASqD,IAE3BpG,EAAQqG,OACR/C,EAAc7B,EAAUgB,GAAGM,UAC/Be,EAAgBrC,EAAWzB,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQ+D,eAEnExB,IAEJf,EAAsB0D,GAkD1B,MAAMoB,EACFC,WACIjC,EAAkBkC,KAAM,GACxBA,KAAKD,SAAW1I,EAEpB4I,IAAIC,EAAM/D,GACN,MAAM4C,EAAaiB,KAAK/D,GAAG8C,UAAUmB,KAAUF,KAAK/D,GAAG8C,UAAUmB,GAAQ,IAEzE,OADAnB,EAAUpD,KAAKQ,GACR,KACH,MAAMgE,EAAQpB,EAAUqB,QAAQjE,IACjB,IAAXgE,GACApB,EAAUsB,OAAOF,EAAO,IAGpCG,KAAKC,GAtzDT,IAAkBC,EAuzDNR,KAAKS,QAvzDCD,EAuzDkBD,EAtzDG,IAA5B9I,OAAOiJ,KAAKF,GAAKjG,UAuzDhByF,KAAK/D,GAAG+C,YAAa,EACrBgB,KAAKS,MAAMF,GACXP,KAAK/D,GAAG+C,YAAa,iJC90DiD,4MAFhFzG,SACEJ,cACAA,iCAA8CwE,kBAFUA,iEADvDA,iCDqYM1D,EAAK,2CCrYX0D,8HAlBCgE,SAEJxD,OAAO1D,iBAAiB,uBAAuBmH,IAC7CA,EAAEC,qBACFF,EAAiBC,0BAGjBD,EAAeG,uBACPC,SAAkBJ,EAAeK,WACzB,aAAZD,OACFJ,EAAiB,sBAInBA,EAAiB,qECVrB,MAAMM,EAAW,CACf,UAAW,CAAEnI,KAAM,OAAQoH,KAAM,aACjC,IAAO,CAAEpH,KAAM,cAAeoH,KAAM,QACpC,IAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,QACxC,IAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,QACxC,IAAO,CAAEpH,KAAM,oBAAqBoH,KAAM,QAC1C,IAAO,CAAEpH,KAAM,UAAWoH,KAAM,UAChC,IAAO,CAAEpH,KAAM,iBAAkBoH,KAAM,QACvC,IAAO,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC3C,IAAM,CAAEpH,KAAM,OAAQoH,KAAM,UAC5B,GAAM,CAAEpH,KAAM,SAAUoH,KAAM,UAC9B,UAAW,CAAEpH,KAAM,gBAAiBoH,KAAM,aAC1C,MAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,MAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,MAAQ,CAAEpH,KAAM,qBAAsBoH,KAAM,UAC5C,MAAQ,CAAEpH,KAAM,YAAaoH,KAAM,UACnC,MAAQ,CAAEpH,KAAM,oBAAqBoH,KAAM,aAC3C,MAAQ,CAAEpH,KAAM,uBAAwBoH,KAAM,aAC9C,KAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,UACvC,UAAW,CAAEpH,KAAM,UAAWoH,KAAM,aACpC,SAAW,CAAEpH,KAAM,WAAYoH,KAAM,aACrC,KAAO,CAAEpH,KAAM,OAAQoH,KAAM,aAC7B,KAAQ,CAAEpH,KAAM,SAAUoH,KAAM,UAChC,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,QACtC,SAAW,CAAEpH,KAAM,OAAQoH,KAAM,aACjC,MAAQ,CAAEpH,KAAM,aAAcoH,KAAM,UACpC,MAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,UACzC,QAAU,CAAEpH,KAAM,UAAWoH,KAAM,UACnC,QAAU,CAAEpH,KAAM,eAAgBoH,KAAM,UACxC,QAAU,CAAEpH,KAAM,UAAWoH,KAAM,UACnC,QAAU,CAAEpH,KAAM,eAAgBoH,KAAM,UACxC,KAAO,CAAEpH,KAAM,gBAAiBoH,KAAM,UACtC,MAAQ,CAAEpH,KAAM,mBAAoBoH,KAAM,aAC1C,MAAQ,CAAEpH,KAAM,6BAA8BoH,KAAM,QACpD,MAAQ,CAAEpH,KAAM,wBAAyBoH,KAAM,QAC/C,MAAQ,CAAEpH,KAAM,qBAAsBoH,KAAM,UAC5C,OAAS,CAAEpH,KAAM,gBAAiBoH,KAAM,QACxC,KAAO,CAAEpH,KAAM,WAAYoH,KAAM,SACjC,KAAO,CAAEpH,KAAM,UAAWoH,KAAM,QAChC,MAAQ,CAAEpH,KAAM,QAASoH,KAAM,UAC/B,KAAO,CAAEpH,KAAM,YAAaoH,KAAM,UAClC,KAAQ,CAAEpH,KAAM,aAAcoH,KAAM,UAEpC,IAAM,CAAEpH,KAAM,WAAYoH,KAAM,QAChC,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,aACtC,KAAQ,CAAEpH,KAAM,oBAAqBoH,KAAM,QAC3C,GAAM,CAAEpH,KAAM,WAAYoH,KAAM,QAChC,GAAM,CAAEpH,KAAM,WAAYoH,KAAM,QAChC,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,UACnC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,aAClC,GAAM,CAAEpH,KAAM,QAASoH,KAAM,UAC7B,GAAM,CAAEpH,KAAM,eAAgBoH,KAAM,UACpC,MAAQ,CAAEpH,KAAM,iBAAkBoH,KAAM,aACxC,GAAM,CAAEpH,KAAM,YAAaoH,KAAM,aACjC,IAAM,CAAEpH,KAAM,aAAcoH,KAAM,QAClC,GAAM,CAAEpH,KAAM,kBAAmBoH,KAAM,UACvC,GAAM,CAAEpH,KAAM,gBAAiBoH,KAAM,QACrC,IAAM,CAAEpH,KAAM,oBAAqBoH,KAAM,QACzC,IAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,OACtC,IAAM,CAAEpH,KAAM,mBAAoBoH,KAAM,OACxC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,UAClC,MAAQ,CAAEpH,KAAM,iBAAkBoH,KAAM,OACxC,GAAK,CAAEpH,KAAM,SAAUoH,KAAM,aAC7B,IAAM,CAAEpH,KAAM,YAAaoH,KAAM,aACjC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,QAClC,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,QACnC,GAAM,CAAEpH,KAAM,kBAAmBoH,KAAM,QACvC,GAAM,CAAEpH,KAAM,QAASoH,KAAM,QAC7B,GAAM,CAAEpH,KAAM,gBAAiBoH,KAAM,QACrC,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,aACtC,GAAM,CAAEpH,KAAM,kBAAmBoH,KAAM,QACvC,GAAM,CAAEpH,KAAM,oBAAqBoH,KAAM,QACzC,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,UACtC,UAAW,CAAEpH,KAAM,SAAUoH,KAAM,aACnC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,aAClC,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,QACnC,MAAQ,CAAEpH,KAAM,WAAYoH,KAAM,QAClC,EAAK,CAAEpH,KAAM,YAAaoH,KAAM,QAChC,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,QACnC,EAAK,CAAEpH,KAAM,cAAeoH,KAAM,QAClC,KAAQ,CAAEpH,KAAM,aAAcoH,KAAM,QACpC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,QAClC,MAAQ,CAAEpH,KAAM,WAAYoH,KAAM,QAClC,MAAQ,CAAEpH,KAAM,WAAYoH,KAAM,QAClC,OAAS,CAAEpH,KAAM,kBAAmBoH,KAAM,QAC1C,OAAS,CAAEpH,KAAM,8BAA+BoH,KAAM,QACtD,OAAS,CAAEpH,KAAM,qBAAsBoH,KAAM,SAC7C,KAAQ,CAAEpH,KAAM,cAAeoH,KAAM,OACrC,KAAQ,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC5C,KAAQ,CAAEpH,KAAM,OAAQoH,KAAM,UAC9B,OAAS,CAAEpH,KAAM,WAAYoH,KAAM,UACnC,EAAK,CAAEpH,KAAM,UAAWoH,KAAM,UAC9B,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,UACtC,OAAS,CAAEpH,KAAM,YAAaoH,KAAM,UACpC,MAAQ,CAAEpH,KAAM,iBAAkBoH,KAAM,QACxC,QAAU,CAAEpH,KAAM,gBAAiBoH,KAAM,UACzC,QAAU,CAAEpH,KAAM,eAAgBoH,KAAM,UACxC,OAAS,CAAEpH,KAAM,mBAAoBoH,KAAM,UAC3C,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,QACtC,MAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,QACtC,KAAQ,CAAEpH,KAAM,aAAcoH,KAAM,QACpC,KAAQ,CAAEpH,KAAM,cAAeoH,KAAM,QACrC,KAAQ,CAAEpH,KAAM,iBAAkBoH,KAAM,aACxC,KAAQ,CAAEpH,KAAM,2BAA4BoH,KAAM,QAClD,KAAQ,CAAEpH,KAAM,sBAAuBoH,KAAM,QAC7C,KAAQ,CAAEpH,KAAM,wBAAyBoH,KAAM,UAC/C,GAAM,CAAEpH,KAAM,QAASoH,KAAM,aAC7B,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,QACtC,KAAQ,CAAEpH,KAAM,aAAcoH,KAAM,QACpC,KAAQ,CAAEpH,KAAM,YAAaoH,KAAM,QACnC,KAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,QAClC,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,QACnC,KAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,QACzC,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,QACtC,KAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,KAAQ,CAAEpH,KAAM,iBAAkBoH,KAAM,QACxC,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,QACtC,KAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,KAAQ,CAAEpH,KAAM,cAAeoH,KAAM,QACrC,KAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,QACzC,OAAS,CAAEpH,KAAM,cAAeoH,KAAM,UACtC,QAAS,CAAEpH,KAAM,aAAcoH,KAAM,SACrC,OAAS,CAAEpH,KAAM,YAAaoH,KAAM,SACpC,GAAM,CAAEpH,KAAM,QAASoH,KAAM,aAC7B,GAAM,CAAEpH,KAAM,oBAAqBoH,KAAM,SACzC,MAAQ,CAAEpH,KAAM,0BAA2BoH,KAAM,SACjD,GAAM,CAAEpH,KAAM,WAAYoH,KAAM,QAChC,MAAQ,CAAEpH,KAAM,mBAAoBoH,KAAM,UAC1C,KAAQ,CAAEpH,KAAM,WAAYoH,KAAM,QAClC,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,aACtC,GAAM,CAAEpH,KAAM,qBAAsBoH,KAAM,aAC1C,IAAM,CAAEpH,KAAM,aAAcoH,KAAM,aAClC,IAAM,CAAEpH,KAAM,gBAAiBoH,KAAM,QACrC,IAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,QACtC,IAAM,CAAEpH,KAAM,kBAAmBoH,KAAM,aACvC,IAAM,CAAEpH,KAAM,eAAgBoH,KAAM,QACpC,GAAM,CAAEpH,KAAM,gBAAiBoH,KAAM,QACrC,GAAM,CAAEpH,KAAM,uBAAwBoH,KAAM,UAC5C,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,QACtC,GAAM,CAAEpH,KAAM,sBAAuBoH,KAAM,QAC3C,GAAM,CAAEpH,KAAM,6BAA8BoH,KAAM,UAClD,MAAQ,CAAEpH,KAAM,mBAAoBoH,KAAM,aAC1C,KAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,aACzC,KAAQ,CAAEpH,KAAM,uBAAwBoH,KAAM,QAC9C,KAAQ,CAAEpH,KAAM,uBAAwBoH,KAAM,QAC9C,KAAQ,CAAEpH,KAAM,sBAAuBoH,KAAM,QAC7C,KAAQ,CAAEpH,KAAM,qBAAsBoH,KAAM,aAC5C,IAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,QACxC,IAAO,CAAEpH,KAAM,sBAAuBoH,KAAM,UAC5C,KAAQ,CAAEpH,KAAM,oBAAqBoH,KAAM,aAC3C,KAAO,CAAEpH,KAAM,iBAAkBoH,KAAM,QACvC,KAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,UACxC,KAAO,CAAEpH,KAAM,mBAAoBoH,KAAM,UACzC,KAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,UACxC,KAAO,CAAEpH,KAAM,iBAAkBoH,KAAM,QACvC,KAAO,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC3C,UAAW,CAAEpH,KAAM,OAAQoH,KAAM,aACjC,GAAM,CAAEpH,KAAM,WAAYoH,KAAM,aAChC,GAAM,CAAEpH,KAAM,UAAWoH,KAAM,QAC/B,GAAM,CAAEpH,KAAM,oBAAqBoH,KAAM,aACzC,IAAM,CAAEpH,KAAM,WAAYoH,KAAM,QAChC,IAAM,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC1C,IAAM,CAAEpH,KAAM,sBAAuBoH,KAAM,QAC3C,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,QACnC,KAAQ,CAAEpH,KAAM,iBAAkBoH,KAAM,QACxC,IAAM,CAAEpH,KAAM,gBAAiBoH,KAAM,QACrC,GAAM,CAAEpH,KAAM,eAAgBoH,KAAM,aACpC,GAAM,CAAEpH,KAAM,aAAcoH,KAAM,QAClC,GAAM,CAAEpH,KAAM,gBAAiBoH,KAAM,QACrC,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,QACtC,IAAM,CAAEpH,KAAM,mBAAoBoH,KAAM,QACxC,UAAW,CAAEpH,KAAM,cAAeoH,KAAM,aACxC,KAAQ,CAAEpH,KAAM,eAAgBoH,KAAM,aACtC,KAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,UACxC,KAAO,CAAEpH,KAAM,WAAYoH,KAAM,UACjC,KAAO,CAAEpH,KAAM,eAAgBoH,KAAM,UACrC,KAAO,CAAEpH,KAAM,WAAYoH,KAAM,UACjC,KAAO,CAAEpH,KAAM,UAAWoH,KAAM,QAChC,KAAO,CAAEpH,KAAM,eAAgBoH,KAAM,UACrC,KAAO,CAAEpH,KAAM,oBAAqBoH,KAAM,QAC1C,KAAO,CAAEpH,KAAM,kBAAmBoH,KAAM,QACxC,QAAU,CAAEpH,KAAM,WAAYoH,KAAM,aACpC,KAAO,CAAEpH,KAAM,eAAgBoH,KAAM,aACrC,KAAO,CAAEpH,KAAM,aAAcoH,KAAM,QACnC,KAAO,CAAEpH,KAAM,oBAAqBoH,KAAM,QAC1C,KAAO,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC3C,KAAO,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC3C,GAAM,CAAEpH,KAAM,cAAeoH,KAAM,aACnC,MAAQ,CAAEpH,KAAM,aAAcoH,KAAM,QACpC,KAAQ,CAAEpH,KAAM,mBAAoBoH,KAAM,UAC1C,GAAM,CAAEpH,KAAM,mBAAoBoH,KAAM,QACxC,GAAM,CAAEpH,KAAM,iBAAkBoH,KAAM,QACtC,GAAM,CAAEpH,KAAM,oBAAqBoH,KAAM,QACzC,KAAO,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC3C,MAAQ,CAAEpH,KAAM,oBAAqBoH,KAAM,UAC3C,MAAQ,CAAEpH,KAAM,2BAA4BoH,KAAM,QAClD,KAAQ,CAAEpH,KAAM,uBAAwBoH,KAAM,QAC9C,GAAK,CAAEpH,KAAM,eAAgBoH,KAAM,aACnC,EAAK,CAAEpH,KAAM,qBAAsBoH,KAAM,QACzC,EAAK,CAAEpH,KAAM,iBAAkBoH,KAAM,aACrC,EAAK,CAAEpH,KAAM,aAAcoH,KAAM,UACjC,IAAO,CAAEpH,KAAM,eAAgBoH,KAAM,UACrC,IAAO,CAAEpH,KAAM,cAAeoH,KAAM,UACpC,MAAQ,CAAEpH,KAAM,cAAeoH,KAAM,aACrC,MAAQ,CAAEpH,KAAM,qBAAsBoH,KAAM,QAC5C,KAAO,CAAEpH,KAAM,qBAAsBoH,KAAM,UAC3C,MAAQ,CAAEpH,KAAM,qBAAsBoH,KAAM,aAC5C,MAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,QACzC,MAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,UACzC,SAAW,CAAEpH,KAAM,OAAQoH,KAAM,aACjC,MAAQ,CAAEpH,KAAM,MAAOoH,KAAM,aAC7B,KAAQ,CAAEpH,KAAM,UAAWoH,KAAM,aACjC,MAAQ,CAAEpH,KAAM,kBAAmBoH,KAAM,QACzC,KAAQ,CAAEpH,KAAM,aAAcoH,KAAM,UACpC,KAAQ,CAAEpH,KAAM,cAAeoH,KAAM,QACrC,KAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,KAAQ,CAAEpH,KAAM,gBAAiBoH,KAAM,QACvC,KAAQ,CAAEpH,KAAM,mBAAoBoH,KAAM,QAC1C,MAAQ,CAAEpH,KAAM,YAAaoH,KAAM,aACnC,KAAO,CAAEpH,KAAM,UAAWoH,KAAM,UAChC,KAAO,CAAEpH,KAAM,cAAeoH,KAAM,UACpC,KAAO,CAAEpH,KAAM,aAAcoH,KAAM,QACnC,KAAO,CAAEpH,KAAM,YAAaoH,KAAM,UAClC,KAAO,CAAEpH,KAAM,YAAaoH,KAAM,WAGpC,MAAMgB,EACJC,YAAarI,EAAMoH,GACjBF,KAAKlH,KAAOA,GAAQ,UACpBkH,KAAKE,KAAOA,GAAQ,UAGtBkB,kBACAC,UAAWC,GACTtB,KAAKsB,OAASA,EACdtB,KAAKoB,iBAGPG,gBACAC,QAAStI,GACP8G,KAAK9G,KAAOA,EACZ8G,KAAKuB,gBAIT,MAAME,UAAiBP,EACrBC,YAAarI,EAAMoH,EAAO,QACxBwB,MAAM5I,EAAMoH,GAGdkB,iBAEEpB,KAAK9G,KAAO,GACZ,IAAK,IAAIoB,EAAI,EAAGA,EAAI0F,KAAKsB,OAAO/G,OAAQD,IAAK,CAC3C,MAAMqH,EAAM3B,KAAKsB,OAAOhH,GAAGsH,SAAS,IACpC5B,KAAK9G,MAAQ2I,EAAOF,IAIxBJ,eACE,MAAMhH,EAASyF,KAAK9G,KAAKqB,OAAS,EAClCyF,KAAKsB,OAAS,IAAIQ,WAAWvH,GAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC/B,MAAMqH,EAAM3B,KAAK9G,KAAK6I,OAAW,EAAJzH,EAAO,GACpC0F,KAAKsB,OAAOhH,GAAK0H,SAASL,EAAK,KAInCM,WACE,OAAOD,SAAShC,KAAK9G,KAAM,IAG7BgJ,SAAUrI,GACRmG,KAAKwB,QAAQK,EAAOhI,EAAM+H,SAAS,OAGvC,SAASC,EAAQF,GACf,OAAOA,EAAIpH,OAAS,GAAM,EAAI,IAAMoH,EAAMA,EAG5C,MAAMQ,UAAkBjB,EACtBC,YAAarI,EAAMoH,EAAO,SACxBwB,MAAM5I,EAAMoH,GAGdkC,oBACE,OAAOpC,KAAKsB,QAAiC,IAAvBtB,KAAKsB,OAAO/G,OAAe8H,aAAeC,aAGlElB,iBACE,MAAMmB,EAAYvC,KAAKsB,OAAOkB,UAExBC,EAAa,IADIzC,KAAKoC,oBACT,CAAmBG,EAAUG,QAChD1C,KAAK9G,KAAOuJ,EAAW,GAGzBlB,eACE,MACMkB,EAAa,IADIzC,KAAKoC,oBACT,CAAmB,CAACpC,KAAK9G,OACtCqJ,EAAY,IAAIT,WAAWW,EAAWC,QAC5C1C,KAAKsB,OAASiB,EAAUC,UAG1BP,WACE,OAAOjC,KAAK9G,KAGdgJ,SAAUrI,GACRmG,KAAKwB,QAAQ3H,IAIjB,MAAM8I,UAAsBzB,EAC1BC,YAAarI,EAAMoH,EAAO,aACxBwB,MAAM5I,EAAMoH,GAGd0C,WACE,OAAO5C,KAAKsB,OAAOtB,KAAK6C,UAG1BC,WACE,MAAMC,EAAY/C,KAAK4C,WACjBI,EAAQ,EAAID,EAAUnB,SAAS,GAAGrH,OACxC,IAAIV,EAAQkJ,GAAa,GAAM,EAAIC,GACnC,IAAK,IAAI1I,EAAI,EAAGA,EAAI0I,EAAO1I,IAEzBT,GAAS,IACTA,GAASmG,KAAK4C,WAEhB,OAAO/I,EAGTuH,iBAEE,IAAI6B,EACJ,IAFAjD,KAAK9G,KAAO,GAEP8G,KAAK6C,OAAS,EAAG7C,KAAK6C,OAAS7C,KAAKsB,OAAO/G,OAAQyF,KAAK6C,OAASI,EAAK,CACzE,MAAMC,EAAKlD,KAAK8C,WACVK,EAAMnD,KAAK8C,WACjBG,EAAMG,KAAKC,IAAIrD,KAAK6C,OAASM,EAAKnD,KAAKsB,OAAO/G,QAC9C,MAAMrB,EAAO8G,KAAKsB,OAAOgC,MAAMtD,KAAK6C,OAAQI,GAEtCM,EAAOtC,EAASiC,IAAO,CAAEpK,KAAM,UAAWoH,KAAM,WACtD,IAAIsD,EAAMtC,EACV,OAAQqC,EAAKrD,MACX,IAAK,YACHsD,EAAMb,EACN,MACF,IAAK,OACHa,EAAM/B,EACN,MACF,IAAK,QACH+B,EAAMrB,EAGV,MAAMsB,EAAU,IAAID,EAAID,EAAKzK,KAAMyK,EAAKrD,MACxCuD,EAAQpC,UAAUnI,GAClB8G,KAAK9G,KAAKyC,KAAK,CACbuH,GAAIA,EACJQ,MAAOR,EAAGtB,SAAS,IACnB1I,KAAMuK,KAKZE,UAAWC,EAAGC,GACZ,IAAIb,EAAQ,EACRc,EAAO,IACX,KAAOF,GAAKE,GAAQd,EAAQ,GAC1BA,IACAc,GAAQ,IAGV,IAAKD,EAAO,CACV,IAAIhK,EAAQiK,EAAOF,EACnB,IAAK,IAAItJ,EAAI0I,EAAQ,EAAG1I,GAAK,EAAGA,IAAK,CAEnC,MAAMsF,EAAI/F,EAAQ,IAClBmG,KAAKsB,OAAOtB,KAAK6C,OAASvI,GAAKsF,EAC/B/F,GAASA,EAAQ+F,GAAK,KAI1BI,KAAK6C,QAAUG,EAGjBe,cAAeF,GACb7D,KAAK6C,OAAS,EACd,IAAK,IAAIvI,EAAI,EAAGA,EAAI0F,KAAK9G,KAAKqB,OAAQD,IAAK,CACzC,MAAMmJ,EAAUzD,KAAK9G,KAAKoB,GAAU0J,EAAUP,EAAQvK,KAAKoI,OAAc2C,EAAgBD,EAAQzJ,OACjGyF,KAAK2D,UAAUF,EAAQP,GAAIW,GAC3B7D,KAAK2D,UAAUM,EAAeJ,GACzBA,GACH7D,KAAKsB,OAAO4C,IAAIF,EAAShE,KAAK6C,QAEhC7C,KAAK6C,QAAUoB,EAEjB,OAAOjE,KAAK6C,OAGdtB,eAEE,MAAMhH,EAASyF,KAAK+D,cAAc,SAClC/D,KAAKsB,OAAS,IAAIQ,WAAWvH,GAE7ByF,KAAK+D,gBAGPI,eAAgBjB,GACd,IAAK,IAAI5I,EAAI,EAAGA,EAAI0F,KAAK9G,KAAKqB,OAAQD,IAAK,CACzC,MAAMmJ,EAAUzD,KAAK9G,KAAKoB,GAC1B,GAAImJ,EAAQP,KAAOA,EACjB,OAAOO,EAAQvK,KAGnB,OAAO,MAIX,MAAMkL,UAAiBzB,EACrBxB,YAAaG,GACXI,MAAM,OAAQ,QACd1B,KAAKqB,UAAUC,GAGjB+C,YAAaC,GACX,MAAMC,EAAiBvE,KAAKmE,eAAe,WAC3C,IAAKI,EAAgB,OAAO,EAE5B,MAAMC,EAAcD,EAAeJ,eAAe,UAClD,IAAKK,EAAa,OAAO,EAEzB,MAAMC,EAAmBD,EAAYL,eAAe,QACpD,IAAKM,EAAkB,OAAO,EAE9B,IAAIC,EAAkBF,EAAYL,eAAe,MACjD,GAAIO,EAAiB,CACnB,KAAIA,EAAgBzC,YAAc,GAGhC,OAAO,EAFPyC,EAAgBxC,SAASoC,QAM3BI,EAAkB,IAAIvC,EAAU,WAAY,SAC5CuC,EAAgBxC,SAASoC,GACzBE,EAAYtL,KAAKyC,KAAK,CACpBuH,GAAI,KACJhK,KAAMwL,IAUV,OALAD,EAAiBvC,SAAS,KAC1BsC,EAAYjD,eACZgD,EAAehD,eACfvB,KAAKuB,gBAEE,EAGToD,OAAQC,GACN,OAAO,IAAIC,KAAK,CAAC7E,KAAKsB,OAAOoB,QAAS,CAAExC,KAAM0E,GAAY,gBAIvD,SAASP,EAAaS,EAAMR,EAAUnI,GAC3C,OAAO,IAAIZ,SAAQC,IACjB,IACEsJ,EAAKC,cAAc7G,MAAKwE,IACtB,IACE,MAAMsC,EAAO,IAAIZ,EAAS,IAAItC,WAAWY,IACrCsC,EAAKX,YAAYC,KACnBQ,EAAOE,EAAKL,OAAOG,EAAK5E,OAE1B,MAAO+E,IAGTzJ,EAAQsJ,MAEV,MAAOG,GACPzJ,EAAQsJ,OCred,SAASI,EAAiBC,GACtB,OAAO,IAAI5J,SAAQ,CAACC,EAAS4J,KAEzBD,EAAQE,WAAaF,EAAQG,UAAY,IAAM9J,EAAQ2J,EAAQI,QAE/DJ,EAAQK,QAAUL,EAAQM,QAAU,IAAML,EAAOD,EAAQO,UAGjE,SAASC,EAAYC,EAAQC,GACzB,MAAMC,ICJUC,UAAUC,eACtB,WAAWC,KAAKF,UAAUG,aACzB,iBAAiBD,KAAKF,UAAUG,YAEnBC,UAAUC,UAGrB,IAAI7K,SAAQ,SAAUC,GACzB,IAAI6K,EAAS,WAAc,OAAOF,UAAUC,YAAYE,QAAQ9K,IAChE+K,EAAaC,YAAYH,EAAQ,KACjCA,OACDC,SAAQ,WAAc,OAAOG,cAAcF,MANnChL,QAAQC,WDDK0C,MAAK,KACzB,MAAMiH,EAAUgB,UAAUO,KAAKd,GAE/B,OADAT,EAAQwB,gBAAkB,IAAMxB,EAAQI,OAAOqB,kBAAkBf,GAC1DX,EAAiBC,MCRhC,IAOQoB,EDGJ,MAAO,CAACM,EAAQ1K,IAAa2J,EAAI5H,MAAM4I,GAAO3K,EAAS2K,EAAGC,YAAYlB,EAAWgB,GAAQG,YAAYnB,MAEzG,IAAIoB,EACJ,SAASC,KAIL,OAHKD,IACDA,EAAsBtB,EAAY,eAAgB,WAE/CsB,iSE8NsCtK,KAAgB,iBAAmB,qCAzG3E,wBAAyBQ,0VAKgDR,mEAJ5EpE,SACEJ,cAGAA,yBAJ6CwE,mCAI6BA,eAAAA,8CLqiDlF,IAA0BI,cAAAA,kBACbA,EAAM6C,s/FK/hD4BjD,KAASwK,2TAUTxK,KAASyK,+bASTzK,KAAS0K,u7EApCxD9O,8BAGAA,SACEJ,+BASEA,OACEA,cAGAA,OACEA,OACAA,OACAA,WAHuCwE,KAASwK,eAMpDhP,OACEA,cAGAA,OACEA,OACAA,WAFuCwE,KAASyK,kBAKpDjP,OACEA,cAGAA,OACEA,OACAA,OACAA,OACAA,WAJuCwE,KAAS0K,cAOpDlP,OACEA,cAGAA,WAAiCwE,KAAS2K,YAC1CnP,gBAIFA,QACEA,kBAGAA,cAAiCwE,KAAS4K,kBAC1CpP,iBAIFA,QACEA,kBAGAA,cAAiCwE,KAAS6K,kBAC1CrP,iBAIFA,QACEA,kBAGAA,cAAiCwE,KAAS8K,qBAC1CtP,iBAIFA,QACEA,kBAGAA,cAAiCwE,KAAS+K,qBAC1CvP,iBAIFA,QACEA,kBAGAA,cAAiCwE,KAASgL,mBAC1CxP,iBAIFA,QACEA,oBAAkDwE,KAASiL,aAC3DzP,iBAEFA,QACEA,oBAA8CwE,KAASkL,oBACvD1P,iBAEFA,QACEA,oBAAiDwE,KAASmL,sBAC1D3P,iBAGFA,oSAAoCwE,wBAzG/B,wBAAyBQ,2BAYaR,KAASwK,iBAUTxK,KAASyK,oBASTzK,KAAS0K,yBAWjB1K,KAAS2K,SAAT3K,KAAS2K,wBAST3K,KAAS4K,cAAT5K,KAAS4K,4BAST5K,KAAS6K,cAAT7K,KAAS6K,4BAST7K,KAAS8K,iBAAT9K,KAAS8K,+BAST9K,KAAS+K,iBAAT/K,KAAS+K,+BAST/K,KAASgL,eAAThL,KAASgL,2BAMQhL,KAASiL,sBAIbjL,KAASkL,6BAINlL,KAASmL,mCAIfnL,KAAgB,iBAAmB,oBL8XpF,SAAkB1D,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAK8O,YAAc7O,IACnBD,EAAKC,KAAOA,uDAidpB,SAAwB6D,EAAOC,EAAOtE,EAAQyD,GAC1C,GAAIY,GAASA,EAAMiL,EAAG,CAClB,GAAInL,EAAST,IAAIW,GACb,OACJF,EAASR,IAAIU,SAxBjBkL,GAyBWrI,EAAEjE,MAAK,KACVkB,EAASI,OAAOF,GACZZ,IACIzD,GACAqE,EAAMiB,EAAE,GACZ7B,QAGRY,EAAMiL,EAAEhL,oHK/kCd+I,UAAUmC,cAAcC,SAAS,gBAE3BC,EAAczC,EAAY,2BAA4B,gBACxD0C,GACFf,IAAK,GACLgB,OAAQ,KACRf,QAAS,GACTC,QAAS,IACTI,KAAK,EACLC,YAAY,EACZC,cAAc,EACdH,SAAU,EACVD,WAAY,GACZD,WAAY,GACZJ,MAAO,MACPD,UAAW,MACXD,OAAQ,SAENoB,EAAa,oBAUFC,UACPC,QAAetL,OAAOuL,4BACtBD,EAAOE,mBAAoBC,KAAM,kBACvCP,EAASC,OAASG,SAClBF,EAAaE,EAAO3P,MAAQ,SFNhC,SAAa+P,EAAKT,EAAclB,MAC5B,OAAOkB,EAAY,YAAaU,GAAU5D,EAAiB4D,EAAMC,IAAIF,OEPvEE,CAAI,WAAYX,GAAalK,MAAKsC,IAC5BA,QACF6H,EAAW7H,GACPA,EAAI8H,YAAQC,EAAa/H,EAAI8H,OAAOxP,MAAQ,gBAYhDkQ,EAAY,KACZC,EAAgB,KAChBC,EAAgB,KAChBC,EAAc,KACdC,EAAe,2CFHrB,SAAaP,EAAKhP,EAAOuO,EAAclB,MAC5BkB,EAAY,aAAcU,IAC7BA,EAAMO,IAAIxP,EAAOgP,GACV3D,EAAiB4D,EAAM/B,gBEZjC7C,CAAI,WAAYmE,EAAUD,iCA4DvB,wBAAyBjL,SAAWkL,EAASC,cAAcE,IAC3DH,EAASC,QAAQD,EAASC,OAAOK,mBAAoBC,KAAM,cAC3DK,SACFA,EAAcK,gBACdL,EAAgB,MAGlBC,QAAsBnD,UAAUwD,aAAaC,iBAC3CC,OAASC,UAAWrB,EAASf,IAAKH,OAAQkB,EAASlB,QACnDwC,OACEC,kBAAkB,EAClBC,kBAAkB,KAGtBX,EAAcY,iBAAiB,GAAGC,uBACrBC,QAAad,EAAce,eAAgBd,EAAYc,aAChED,EAAMV,OAEJF,GAAcA,EAAac,QAC/BjB,EAAcK,WACdL,EAAgB,WAEdkB,EAASjB,EAAce,eACvB5B,EAAST,KACXwB,MAAmBgB,aACnBjB,QAAoBpD,UAAUwD,aAAac,cACzCV,OACEC,iBAAkBvB,EAASP,aAC3B+B,iBAAkBxB,EAASR,YAE7B4B,OAAO,UAEHa,EAASlB,EAAamB,wBAAwBpB,GAC9CqB,EAASpB,EAAamB,wBAAwBrB,GAC9CuB,EAAOrB,EAAasB,+BAC1BJ,EAAOK,QAAQF,GACfD,EAAOG,QAAQF,GACfN,MAAajB,EAAcY,oBAAqBW,EAAKG,OAAOC,iCAlF1DC,SACJ7B,MAAoB8B,cAAcH,GAChCI,mBAAuC,IAAnB3C,EAASb,QAC7ByD,mBAAuC,IAAnB5C,EAASd,QAC7B3C,kBAA0C,QAAvByD,EAASjB,UAAsB,aAAe,iBAAiBiB,EAAShB,WAE7F2B,EAAYkC,KAAKC,YACXC,QAAmB/C,EAASC,QAAQ+C,iBAAiBrC,KAAaX,EAASjB,aAAe1P,QAAQ,KACxG4T,QAAQC,IAAIH,SACNI,QAAmBJ,EAAWK,qBACpCxC,EAAcyC,kBAAqBxS,KAAAA,MAC7BA,EAAKyS,KAAO,IACVH,EACFA,EAAWI,MAAM1S,GAEjB4R,EAAenP,KAAKzC,YAI1B+P,EAAc4C,uBACNvH,EAAW4G,KAAKC,MAAQnC,EACxBlE,MAAWD,KAAKiG,aACXd,KAASY,EAAOX,YACzBD,EAAMV,UAEJkC,SACIA,EAAWtB,cACXlF,QAAaoG,EAAWU,UACxBC,QAAc1H,EAAYW,EAAK1B,MAAM,EAAG,IAAKgB,GAC7C0H,QAAkBZ,EAAWK,gBAAiBQ,kBAAkB,IACtED,EAAUJ,OAAQ1L,KAAM,QAASgM,SAAU,EAAGhT,KAAM6S,IACpDC,EAAU9B,mBAEJlF,QAAaX,EAAYS,EAAKxB,MAAM,EAAG,IAAKgB,GAC5C6H,MAActH,MAAMG,EAAMF,EAAKxB,MAAM,MACrC8I,EAAerT,SAASC,cAAc,KAC5CoT,EAAaC,KAAOC,IAAIC,gBAAgBJ,GACxCC,EAAaI,YAAcxD,KAAaX,EAASjB,YACjDgF,EAAaK,aAIjBxD,EAAcyD,MAAM,MA0CpBC,KAAiBC,YAAYzC,gBAqBc9B,EAASlB,kCAUTkB,EAASjB,qCASTiB,EAAShB,iCAWjBgB,EAASf,qCASTe,EAASd,yCASTc,EAASb,yCASTa,EAASZ,4CASTY,EAASX,4CASTW,EAASV,0CAMQU,EAAST,oCAIbS,EAASR,2CAINQ,EAASP,0CC/OpD,kEAAQ,CAClB1P,OAAQW,SAAS8T"}