{"version":3,"file":"bundle.js","sources":["../../../node_modules/svelte/internal/index.mjs","../../../shared/InstallPrompt.svelte","../../../shared/util.js","../../../node_modules/idb-keyval/dist/index.js","../../../node_modules/safari-14-idb-fix/dist/index.js","../../../shared/RecentFiles.svelte","../../../shared/inputHandler.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n  let deferredPrompt\r\n\r\n  window.addEventListener('beforeinstallprompt', e => {\r\n    e.preventDefault()\r\n    deferredPrompt = e\r\n  })\r\n  async function promptInstall() {\r\n    deferredPrompt.prompt()\r\n    const { outcome } = await deferredPrompt.userChoice\r\n    if (outcome === 'accepted') {\r\n      deferredPrompt = null\r\n    }\r\n  }\r\n  function dismiss() {\r\n    deferredPrompt = null\r\n  }\r\n</script>\r\n\r\n{#if deferredPrompt}\r\n  <div class=\"alert alert-success filled-dm show\" on:click={promptInstall}>\r\n    <h4 class=\"alert-heading\">Install</h4>\r\n    <button class=\"close\" type=\"button\" on:click={dismiss}><span>×</span></button>\r\n    Click here to install the app for more features!\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .alert {\r\n    display: block !important;\r\n    animation: fly-in 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  }\r\n\r\n  @keyframes fly-in {\r\n    0% {\r\n      right: -50rem;\r\n    }\r\n    100% {\r\n      right: 0;\r\n    }\r\n  }\r\n</style>\r\n","/* eslint-env browser */\r\nexport const videoExtensions = ['3g2', '3gp', 'asf', 'avi', 'dv', 'flv', 'gxf', 'm2ts', 'm4a', 'm4b', 'm4p', 'm4r', 'm4v', 'mkv', 'mov', 'mp4', 'mpd', 'mpeg', 'mpg', 'mxf', 'nut', 'ogm', 'ogv', 'swf', 'ts', 'vob', 'webm', 'wmv', 'wtv']\r\nexport const videoRx = new RegExp(`.(${videoExtensions.join('|')})$`, 'i')\r\n\r\nexport const subtitleExtensions = ['srt', 'vtt', 'ass', 'ssa', 'sub', 'txt']\r\nexport const subRx = new RegExp(`.(${subtitleExtensions.join('|')})$`, 'i')\r\n\r\nexport const audioExtensions = ['3gp', '3gpp', '3g2', 'aac', 'adts', 'ac3', 'amr', 'eac3', 'flac', 'mp3', 'm4a', 'mp4', 'mp4a', 'mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a', 'oga', 'ogg', 'mogg', 'spx', 'opus', 'raw', 'wav', 'weba']\r\nexport const audioRx = new RegExp(`.(${audioExtensions.join('|')})$`, 'i')\r\n\r\nexport const imageExtensions = ['apng', 'avif', 'bmp', 'gif', 'ico', 'jpg', 'jpeg', 'jfif', 'pjpeg', 'pjp', 'png', 'svg', 'tif', 'tiff', 'webp']\r\nexport const imageRx = new RegExp(`.(${imageExtensions.join('|')})$`, 'i')\r\n\r\nexport const bookExtensions = ['epub', 'cbr', 'cba', 'cbt', 'cbz', 'cb7', 'zip']\r\nexport const bookRx = new RegExp(`.(${bookExtensions.join('|')})$`, 'i')\r\n\r\nexport function toTS (sec, full) {\r\n  if (isNaN(sec) || sec < 0) {\r\n    switch (full) {\r\n      case 1:\r\n        return '0:00:00.00'\r\n      case 2:\r\n        return '0:00:00'\r\n      case 3:\r\n        return '00:00'\r\n      default:\r\n        return '0:00'\r\n    }\r\n  }\r\n  const hours = Math.floor(sec / 3600)\r\n  let minutes = Math.floor(sec / 60) - hours * 60\r\n  let seconds = full === 1 ? (sec % 60).toFixed(2) : Math.floor(sec % 60)\r\n  if (minutes < 10 && (hours > 0 || full)) minutes = '0' + minutes\r\n  if (seconds < 10) seconds = '0' + seconds\r\n  return (hours > 0 || full === 1 || full === 2) ? hours + ':' + minutes + ':' + seconds : minutes + ':' + seconds\r\n}\r\n\r\nexport const DOMPARSER = new DOMParser().parseFromString.bind(new DOMParser())\r\n","import safariFix from 'safari-14-idb-fix';\n\nfunction promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const dbp = safariFix().then(() => {\n        const request = indexedDB.open(dbName);\n        request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n        return promisifyRequest(request);\n    });\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","/**\n * Work around Safari 14 IndexedDB open bug.\n *\n * Safari has a horrible bug where IDB requests can hang while the browser is starting up. https://bugs.webkit.org/show_bug.cgi?id=226547\n * The only solution is to keep nudging it until it's awake.\n */\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    // No point putting other browsers or older versions of Safari through this mess.\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nexport default idbReady;\n","<script context=\"module\">\r\n  import { get, set, createStore } from 'idb-keyval'\r\n\r\n  const supported = 'FileSystemFileHandle' in window\r\n\r\n  const asyncSome = async (arr, predicate) => {\r\n    for (const e of arr) {\r\n      if (await predicate(e)) return true\r\n    }\r\n    return false\r\n  }\r\n  const asyncFilter = async (arr, predicate) => {\r\n    const results = await Promise.all(arr.map(predicate))\r\n\r\n    return arr.filter((_v, index) => results[index])\r\n  }\r\n\r\n  let db = null\r\n  async function setHandles() {\r\n    handles = (await get('recents', db)) || []\r\n  }\r\n  export function initDb(appName) {\r\n    db = createStore(appName, 'recents')\r\n  }\r\n\r\n  let handles = []\r\n\r\n  // this is clunky, but dataTransfer doesn't persist across async calls.... https://stackoverflow.com/questions/55658851\r\n  export async function updateRecents(files) {\r\n    if (supported && db && files?.length) {\r\n      const promises = files\r\n        .map(file => (file instanceof FileSystemFileHandle ? file : file.getAsFileSystemHandle()))\r\n        .filter(file => file instanceof FileSystemFileHandle || file instanceof File)\r\n      if (!promises.length) return null\r\n      const newHandles = await Promise.all(promises)\r\n      await setHandles()\r\n      handles = await asyncFilter(handles, async handle => {\r\n        return !(await asyncSome(newHandles, recent => recent.isSameEntry(handle)))\r\n      })\r\n      handles.unshift(...newHandles)\r\n      handles.length = Math.min(handles.length, 15)\r\n      set('recents', handles, db)\r\n    }\r\n  }\r\n</script>\r\n\r\n<script>\r\n  export let files = null\r\n  let recents = []\r\n  setHandles().then(() => {\r\n    recents = handles\r\n  })\r\n  async function selectFile(handle) {\r\n    updateRecents([handle])\r\n    await handle.requestPermission({ mode: 'read' })\r\n    files = [await handle.getFile()]\r\n  }\r\n\r\n  export let handlePopup = () => {}\r\n</script>\r\n\r\n<div class=\"h-full my-0 bg-very-dark\">\r\n  <div class=\"container h-full p-20\">\r\n    <div class=\"p-20 d-flex flex-column h-full\">\r\n      <div class=\"font-weight-bold font-size-24 p-5\">Recent Files</div>\r\n      <hr class=\"w-full my-15\" />\r\n      <div class=\"overflow-y-auto\">\r\n        {#if supported}\r\n          {#each recents as recent}\r\n            <div class=\"p-5 pointer text-muted hover\" on:click={selectFile(recent)}>\r\n              <div class=\"ml-5\">{recent.name}</div>\r\n            </div>\r\n          {:else}\r\n            <div class=\"ml-5 p-5\">Your recent files will show up here!</div>\r\n          {/each}\r\n        {:else if window.chrome}\r\n          <div>\r\n            Your browser doesn't support recent files, but it could! Visit <code class=\"code\">chrome://flags</code> and enable <code class=\"code\">#file-system-access-api!</code>\r\n          </div>\r\n        {:else}\r\n          <div>Your browser doesn't support recent files.</div>\r\n        {/if}\r\n      </div>\r\n      <div class=\"py-20 pointer text-muted hover mt-auto\" on:click={handlePopup}>You can also drag-drop or paste files, or click here to select some!</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .pointer {\r\n    cursor: pointer;\r\n  }\r\n  .hover:hover {\r\n    color: #fff !important;\r\n  }\r\n</style>\r\n","/* eslint-env browser */\r\nimport { audioRx, videoRx, imageRx, subRx, bookRx, audioExtensions, videoExtensions, imageExtensions, subtitleExtensions, bookExtensions, DOMPARSER } from './util'\r\nimport { updateRecents } from './RecentFiles.svelte'\r\n\r\n// types: image, audio, video, subtitle\r\nexport async function handleItems (transferList = [], types = []) {\r\n  const items = await Promise.all([...transferList].map(item => processItem(item, types)))\r\n  return items.flat().filter(i => i)\r\n}\r\nconst rxMap = {\r\n  audio: audioRx,\r\n  video: videoRx,\r\n  image: imageRx,\r\n  subtitle: subRx,\r\n  book: bookRx\r\n}\r\nconst exMap = {\r\n  audio: audioExtensions,\r\n  video: videoExtensions,\r\n  image: imageExtensions,\r\n  subtitle: subtitleExtensions,\r\n  book: bookExtensions\r\n}\r\nconst selectorMap = {\r\n  image: 'img',\r\n  subtitle: 'input'\r\n}\r\n\r\nasync function processItem (item, types) {\r\n  if (!item) return null\r\n  if (item.type) {\r\n    // type matches File\r\n    if (types.some(type => item.type.indexOf(type) === 0)) {\r\n      updateRecents([item])\r\n      return item.getAsFile()\r\n    }\r\n    // text\r\n    if (item.type === 'text/plain') {\r\n      // URL\r\n      if (item.kind === 'string') {\r\n        const string = await new Promise(resolve => item.getAsString(resolve))\r\n        try {\r\n          // URL might be invalid\r\n          const url = new URL(string)\r\n          const type = types.find(type => string.match(rxMap[type]))\r\n          if (url && type) {\r\n            return {\r\n              url: string,\r\n              name: string.substring(string.lastIndexOf('/') + 1),\r\n              type\r\n            }\r\n          }\r\n        } catch (e) { }\r\n        return null\r\n      }\r\n      // Text File\r\n      if (item.kind === 'file') {\r\n        updateRecents(item)\r\n        const file = item.getAsFile()\r\n        if (types.some(type => file.name.match(rxMap[type]))) return file\r\n      }\r\n      return null\r\n    }\r\n    // XML or clipboard\r\n    if (item.type === 'text/html') {\r\n      const string = await new Promise(resolve => item.getAsString(resolve))\r\n      const elems = types.map(type => DOMPARSER(string, 'text/html').querySelectorAll(selectorMap[type] || type)).flat()\r\n      if (!elems.length) return null\r\n      return elems.map(elem => {\r\n        const url = elem.src || elem.value\r\n        if (url) {\r\n          return {\r\n            url,\r\n            name: url.substring(url.lastIndexOf('/') + 1)\r\n          }\r\n        }\r\n        return null\r\n      })\r\n    }\r\n  }\r\n  // Folder or unknown file type\r\n  const entry = item.webkitGetAsEntry()\r\n  if (entry?.isDirectory) {\r\n    const entries = await new Promise(resolve => entry.createReader().readEntries(resolve))\r\n    const filePromises = entries.filter(entry => entry.isFile && types.some(type => entry.name.match(rxMap[type]))).map(file => new Promise(resolve => file.file(resolve)))\r\n    return Promise.all(filePromises)\r\n  }\r\n  if (entry?.isFile) {\r\n    if (types.some(type => entry.name.match(rxMap[type]))) {\r\n      return new Promise(resolve => entry.file(resolve))\r\n    }\r\n  }\r\n}\r\nexport async function filePopup (types = []) {\r\n  if ('FileSystemFileHandle' in window) {\r\n    const handles = await window.showOpenFilePicker({\r\n      types: [{\r\n        description: types.join(', '),\r\n        accept: {\r\n          '*/*': types.map(type =>\r\n            exMap[type].map(ex => '.' + ex)\r\n          ).flat()\r\n        }\r\n      }],\r\n      multiple: true\r\n    })\r\n    updateRecents(handles)\r\n    return await Promise.all(handles.map(handle => handle.getFile()))\r\n  } else {\r\n    return new Promise(resolve => {\r\n      let input = document.createElement('input')\r\n      input.type = 'file'\r\n      input.multiple = 'multiple'\r\n      input.accept = types.map(type => '.' + exMap[type].join(',.')).flat()\r\n\r\n      input.onchange = async ({ target }) => {\r\n        resolve([...target.files])\r\n        input = null\r\n      }\r\n      input.click()\r\n    })\r\n  }\r\n}\r\n\r\nexport function getSearchFiles (types) {\r\n  const search = [...new URLSearchParams(location.search)]\r\n  if (!search.length) return null\r\n  const files = []\r\n  for (const param of search) {\r\n    const type = types.find(type => param[1].match(rxMap[type]))\r\n    if (type) {\r\n      const name = param[1].substring(Math.max(param[1].lastIndexOf('\\\\') + 2, param[1].lastIndexOf('/') + 1))\r\n      files.push({\r\n        name,\r\n        url: param[1],\r\n        type: type + '/*'\r\n      })\r\n    }\r\n  }\r\n  return files\r\n}\r\nexport async function getLaunchFiles () {\r\n  /* global launchQueue */\r\n  return new Promise(resolve => {\r\n    launchQueue.setConsumer(async launchParams => {\r\n      if (!launchParams.files.length) {\r\n        return\r\n      }\r\n      const promises = launchParams.files.map(file => {\r\n        updateRecents([file])\r\n        return file.getFile()\r\n      })\r\n      // for some fucking reason, the same file can get passed multiple times, why? I still want to future-proof multi-files\r\n      resolve((await Promise.all(promises)).filter((file, index, all) => {\r\n        return all.findIndex(search => {\r\n          return search.name === file.name && search.size === file.size && search.lastModified === file.lastModified\r\n        }) === index\r\n      }))\r\n    })\r\n  })\r\n}\r\n","<script>\n  import InstallPrompt from '../../shared/InstallPrompt.svelte'\n  import { filePopup, handleItems, getSearchFiles, getLaunchFiles } from '../../shared/inputHandler.js'\n  import RecentFiles, { initDb } from '../../shared/RecentFiles.svelte'\n\n  initDb('img-viewer')\n\n  let src = null\n  let image = null\n  let scale = 0\n  let isBlurred = true\n  let name = 'Image Viewer'\n  let fileSize = null\n  const initial = { x: 0, y: 0 }\n  const old = { x: 0, y: 0 }\n  const position = { x: 0, y: 0 }\n  let disPos = initial\n  const dimensions = { x: null, y: null }\n  const units = [' B', ' KB', ' MB', ' GB']\n  let files = []\n  let current = null\n\n  navigator.serviceWorker.register('/sw.js')\n\n  function prettyBytes(num) {\n    if (isNaN(num) || num == null) return ''\n    if (num < 1) return num + ' B'\n    const exponent = Math.min(Math.floor(Math.log(num) / Math.log(1000)), units.length - 1)\n    return Number((num / Math.pow(1000, exponent)).toFixed(2)) + units[exponent]\n  }\n\n  function setSource(target) {\n    if (target) {\n      if (target.constructor === String) {\n        const startIndex = Math.max(target.lastIndexOf('\\\\'), target.lastIndexOf('/')) + 1\n        name = target.substring(startIndex)\n        fileSize = null\n        src = target\n      } else {\n        const startIndex = Math.max(target.name.lastIndexOf('\\\\'), target.name.lastIndexOf('/')) + 1\n        name = target.name.substring(startIndex)\n        fileSize = target.size\n        src = target.url\n      }\n    }\n  }\n\n  let transition = true\n  // dragging around\n  function dragStart(e) {\n    transition = false\n    initial.x = e.clientX\n    initial.y = e.clientY\n    image.onpointermove = handleDrag\n    if (e.pointerId) image.setPointerCapture(e.pointerId)\n  }\n  function dragEnd(e) {\n    if (image.onpointermove) {\n      transition = true\n      image.onpointermove = null\n      if (e.pointerId) image.releasePointerCapture(e.pointerId)\n      if (pinching) {\n        pinching = false\n        lasthypot = 0\n      } else {\n        old.x += e.clientX - initial.x\n        old.y += e.clientY - initial.y\n      }\n    }\n  }\n  function handleDrag(e) {\n    if (!pinching) {\n      position.x = old.x + e.clientX - initial.x\n      position.y = old.y + e.clientY - initial.y\n      disPos = position\n    }\n  }\n  function viewNext() {\n    current = files[(files.indexOf(current) + 1) % files.length]\n  }\n  function viewLast() {\n    const index = files.indexOf(current)\n    current = files[index === 0 ? files.length - 1 : index - 1]\n  }\n  function handleKey({ code }) {\n    if (code === 'ArrowRight') {\n      viewNext()\n    } else if (code === 'ArrowLeft') {\n      viewLast()\n    } else if (code.includes('Numpad')) {\n      const index = code.slice(6)\n      current = files[index % files.length]\n    }\n  }\n\n  // zooming\n  let pinching = false\n  function checkPinch({ touches }) {\n    if (touches.length === 2) {\n      pinching = true\n      transition = true\n    }\n  }\n  let lasthypot = 0\n  let hypotdelta = 0\n  function handlePinch({ touches }) {\n    if (touches.length === 2 && pinching === true) {\n      const last = lasthypot\n      lasthypot = Math.hypot(touches[0].pageX - touches[1].pageX, touches[0].pageY - touches[1].pageY)\n      hypotdelta += last - lasthypot\n      if (hypotdelta > 20 || hypotdelta < -20) {\n        handleZoom({ deltaY: hypotdelta > 0 ? 100 : -100 })\n        hypotdelta = 0\n      }\n    }\n  }\n  let zoom = 1\n  function handleZoom({ deltaY }) {\n    const diff = deltaY * -0.01\n    if (diff < 0) {\n      if (!(scale < -4)) scale -= 0.5\n      old.x /= 1.5\n      old.y /= 1.5\n    } else if (diff > 0 && !(scale > 11)) {\n      scale += 0.5\n      old.x *= 1.5\n      old.y *= 1.5\n    }\n    zoom = 2 ** scale\n    disPos = old\n  }\n\n  // loading files\n  async function handleInput({ dataTransfer, clipboardData }) {\n    const items = clipboardData?.items || dataTransfer?.items\n    if (items) {\n      handleFiles(await handleItems(items, ['image']))\n    }\n  }\n\n  if ('launchQueue' in window) {\n    getLaunchFiles().then(handleFiles)\n  }\n  async function handlePopup() {\n    if (!files.length) {\n      handleFiles(await filePopup(['image']))\n    }\n  }\n  let recentfile = null\n  $: handleFiles(recentfile)\n  function handleFiles(newfiles) {\n    if (newfiles?.length) {\n      for (const file of newfiles) {\n        // this is both bad and good, makes 2nd load instant, but uses extra ram\n        if (file instanceof File) file.url = URL.createObjectURL(file)\n      }\n      files = files.concat(newfiles)\n      if (!current) current = files[0]\n    }\n  }\n  handleFiles(getSearchFiles(['image']))\n\n  // UI\n  function toggleBlur() {\n    isBlurred = !isBlurred\n    image.style.setProperty('--pixel', isBlurred ? 'crisp-edges' : 'pixelated')\n  }\n  function resetPos() {\n    old.x = 0\n    old.y = 0\n    scale = 0\n    zoom = 1\n    disPos = old\n  }\n  function handleImage() {\n    dimensions.x = image.naturalWidth\n    dimensions.y = image.naturalHeight\n  }\n  let rotation = 0\n  // this is bad, but %360 causes css animation bug :(\n  function rotateL() {\n    rotation -= 90\n  }\n  function rotateR() {\n    rotation += 90\n  }\n  let flip = false\n  function toggleFlip() {\n    flip = !flip\n  }\n  let mirror = false\n  function toggleMirror() {\n    mirror = !mirror\n  }\n  function handleStyle({ disPos, mirror, flip, rotation, zoom }) {\n    image?.style.setProperty('transform', `rotate(${rotation}deg) ` + `scaleX(${mirror ? -1 : 1}) ` + `scaleY(${flip ? -1 : 1}) ` + `scale(${zoom})`)\n    image?.style.setProperty('--left', disPos.x + 'px')\n    image?.style.setProperty('--top', disPos.y + 'px')\n  }\n  $: handleStyle({ disPos, mirror, flip, rotation, zoom })\n\n  $: setSource(current)\n</script>\n\n<div class=\"sticky-alerts d-flex flex-column-reverse\">\n  <InstallPrompt />\n</div>\n{#if !files.length}\n  <RecentFiles bind:files={recentfile} {handlePopup} />\n{:else}\n  <div\n    class=\"w-full h-full overflow-hidden position-relative dragarea\"\n    on:pointerdown={dragStart}\n    on:pointerup={dragEnd}\n    on:wheel|passive={handleZoom}\n    on:touchend={dragEnd}\n    on:touchstart={checkPinch}\n    on:touchmove={handlePinch}>\n    <img {src} class:transition alt=\"view\" class=\"w-full h-full position-absolute\" bind:this={image} on:load={handleImage} />\n  </div>\n\n  <div class=\"position-absolute buttons row w-full justify-content-center\">\n    {#if files.length > 1}\n      <div class=\"btn-group bg-dark-dm bg-light-lm rounded m-5 col-auto\">\n        <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={viewLast}>arrow_back</button>\n        <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={viewNext}>arrow_forward</button>\n      </div>\n    {/if}\n\n    <div class=\"btn-group input-group bg-dark-dm bg-light-lm rounded m-5 w-200 col-auto\">\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={resetPos}>zoom_out_map</button>\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={() => handleZoom({ deltaY: 100 })}>remove</button>\n      <input type=\"number\" step=\"0.1\" min=\"0.1\" class=\"form-control form-control-lg text-right\" placeholder=\"Scale\" readonly value={zoom.toFixed(1)} />\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={() => handleZoom({ deltaY: -100 })}>add</button>\n    </div>\n\n    <div class=\"btn-group bg-dark-dm bg-light-lm rounded m-5 col-auto\">\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={toggleBlur}>\n        {isBlurred ? 'blur_off' : 'blur_on'}\n      </button>\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={rotateL}>rotate_left</button>\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={rotateR}>rotate_right</button>\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={toggleFlip}><div class=\"flip\">flip</div></button>\n      <button class=\"btn btn-lg btn-square material-icons\" type=\"button\" on:click={toggleMirror}>flip</button>\n    </div>\n  </div>\n{/if}\n\n<svelte:head>\n  <title>{name} {dimensions.x && dimensions.y ? `(${dimensions.x} x ${dimensions.y})` : ''} {prettyBytes(fileSize)}</title>\n</svelte:head>\n\n<svelte:window\n  on:drop|preventDefault={handleInput}\n  on:dragenter|preventDefault\n  on:dragover|preventDefault\n  on:dragstart|preventDefault\n  on:dragleave|preventDefault\n  on:paste|preventDefault={handleInput}\n  on:keydown={handleKey} />\n\n<style>\n  :global(body) {\n    position: unset !important;\n  }\n  img {\n    object-fit: contain;\n    --top: 0;\n    --left: 0;\n    --pixel: 'crisp-edges';\n    top: var(--top);\n    left: var(--left);\n    image-rendering: var(--pixel);\n  }\n  .flip {\n    transform: rotate(90deg);\n  }\n  .input-group button {\n    flex: unset;\n  }\n  .transition {\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.25, 1);\n  }\n  img:not([src]) {\n    display: none;\n  }\n  .dragarea {\n    background: repeating-conic-gradient(rgba(0, 0, 0, 0.3) 0% 25%, transparent 0% 50%) 50% / 20px 20px;\n    user-select: none;\n    cursor: grab;\n    touch-action: none;\n  }\n  .buttons {\n    bottom: 8rem;\n    left: 50%;\n    transform: translate(-50%, 0);\n  }\n  .sticky-alerts {\n    --sticky-alerts-top: auto;\n    bottom: 1rem;\n  }\n  input::-webkit-inner-spin-button {\n    display: none;\n  }\n  input {\n    -moz-appearance: textfield;\n  }\n</style>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","set_current_component","component","bubble","callbacks","$$","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","globals","window","globalThis","global","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","deferredPrompt","e","prompt","outcome","userChoice","videoExtensions","videoRx","RegExp","join","subtitleExtensions","subRx","audioExtensions","audioRx","imageExtensions","imageRx","bookExtensions","bookRx","DOMPARSER","DOMParser","parseFromString","bind","promisifyRequest","request","reject","oncomplete","onsuccess","result","onabort","onerror","error","createStore","dbName","storeName","dbp","navigator","userAgentData","test","userAgent","indexedDB","databases","tryIdb","finally","intervalId","setInterval","clearInterval","open","onupgradeneeded","createObjectStore","txMode","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","iterations","supported","chrome","setHandles","handles","key","customStore","store","get","updateRecents","files","promises","file","FileSystemFileHandle","getAsFileSystemHandle","File","newHandles","all","arr","predicate","results","_v","asyncFilter","asyncSome","recent","isSameEntry","handle","unshift","Math","min","put","set","recents","handlePopup","requestPermission","mode","getFile","async","handleItems","transferList","types","items","item","some","getAsFile","kind","string","getAsString","URL","find","match","rxMap","substring","lastIndexOf","elems","querySelectorAll","selectorMap","flat","elem","src","entry","webkitGetAsEntry","isDirectory","filePromises","createReader","readEntries","isFile","processItem","audio","video","image","subtitle","book","exMap","toFixed","undefined","x","y","r","scale","isBlurred","fileSize","initial","old","position","disPos","dimensions","units","current","serviceWorker","register","transition","handleDrag","pinching","clientX","clientY","viewNext","viewLast","lasthypot","hypotdelta","zoom","handleZoom","deltaY","diff","launchQueue","setConsumer","launchParams","findIndex","search","size","lastModified","getLaunchFiles","handleFiles","recentfile","newfiles","createObjectURL","concat","URLSearchParams","location","param","max","getSearchFiles","rotation","flip","mirror","style","setProperty","handleStyle","constructor","String","startIndex","setSource","num","isNaN","exponent","floor","log","Number","pow","onpointermove","pointerId","setPointerCapture","releasePointerCapture","code","includes","touches","last","hypot","pageX","pageY","dataTransfer","clipboardData","showOpenFilePicker","description","accept","ex","multiple","input","onchange","click","filePopup","naturalWidth","naturalHeight","body"],"mappings":"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"}