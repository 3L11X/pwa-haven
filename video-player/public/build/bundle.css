.material-icons.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy,.row.svelte-wvx9gy>div.svelte-wvx9gy>div.svelte-wvx9gy{font-size:1.8rem;font-weight:bold;display:flex;justify-content:center;align-items:center}.material-icons.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{font-size:2.2rem !important;font-weight:unset !important}.row.svelte-wvx9gy>div.svelte-wvx9gy.svelte-wvx9gy{height:5rem;width:5rem;padding:0.5rem;transition:transform 0.2s ease}.row.svelte-wvx9gy>div.svelte-wvx9gy.svelte-wvx9gy:hover{transform:scale(0.9)}.row.svelte-wvx9gy>div.svelte-wvx9gy>div.svelte-wvx9gy{background-color:var(--dark-color-light);height:100%;border-radius:var(--base-border-radius) !important}.w-75.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{width:7.5rem !important}.w-85.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{width:8.5rem !important}.w-90.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{width:9rem !important}.w-110.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{width:11rem !important}.w-115.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{width:11.5rem !important}.w-820.svelte-wvx9gy.svelte-wvx9gy.svelte-wvx9gy{width:82rem;animation:.3s ease 0s 1 svelte-wvx9gy-load-in;background:rgba(0, 0, 0, 0.8)
  }@keyframes svelte-wvx9gy-load-in{from{bottom:-1.2rem;transform:scale(.75)}to{bottom:0;transform:scale(1)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
.bg-tp.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{background:#000000bb;backdrop-filter:blur(10px)}.bg-tp.svelte-9xn76c .close.svelte-9xn76c.svelte-9xn76c{position:absolute;top:0;right:0;cursor:pointer;color:inherit;padding:var(--alert-close-padding);line-height:var(--alert-close-line-height);font-size:var(--alert-close-font-size);background-color:transparent;border-color:transparent}video.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{transition:margin-top 0.2s ease}.player.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{user-select:none;font-family:Roboto, Arial, Helvetica, sans-serif;transition:width 0.2s ease;background:#000}.pip.svelte-9xn76c canvas{left:99.9% !important}.material-icons.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{font-size:2.2rem;padding:1.2rem;transition:all 0.2s ease;display:flex}.immersed.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{cursor:none}.immersed.svelte-9xn76c .middle .ctrl.svelte-9xn76c.svelte-9xn76c,.immersed.svelte-9xn76c .top.svelte-9xn76c.svelte-9xn76c,.immersed.svelte-9xn76c .bottom.svelte-9xn76c.svelte-9xn76c{opacity:0}.bottom.svelte-9xn76c img[src=' '].svelte-9xn76c.svelte-9xn76c,.svelte-9xn76c:fullscreen .ctrl[data-name='toggleCast'].svelte-9xn76c.svelte-9xn76c,.svelte-9xn76c:fullscreen .ctrl[data-name='togglePopout'].svelte-9xn76c.svelte-9xn76c{display:none !important}.pip.svelte-9xn76c video.svelte-9xn76c.svelte-9xn76c{visibility:hidden}.middle.svelte-9xn76c div[data-name='bufferingDisplay'].svelte-9xn76c.svelte-9xn76c{border:4px solid #ffffff00;border-top:4px solid #fff;border-radius:50%;width:40px;height:40px;animation:svelte-9xn76c-spin 1s linear infinite;opacity:0;transition:0.5s opacity ease;filter:drop-shadow(0 0 8px #000)}.buffering.svelte-9xn76c .middle div[data-name='bufferingDisplay'].svelte-9xn76c.svelte-9xn76c{opacity:1 !important}@keyframes svelte-9xn76c-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.middle.svelte-9xn76c .ctrl.svelte-9xn76c.svelte-9xn76c{font-size:4rem;margin:2rem;z-index:3;display:none}@media(pointer: none), (pointer: coarse){.middle.svelte-9xn76c .ctrl.svelte-9xn76c.svelte-9xn76c{display:flex}.middle.svelte-9xn76c .play-overlay.svelte-9xn76c.svelte-9xn76c{display:none !important
    }}.middle.svelte-9xn76c .ctrl[data-name='playPause'].svelte-9xn76c.svelte-9xn76c{font-size:6rem}.middle.svelte-9xn76c .ctrl.svelte-9xn76c.svelte-9xn76c,.bottom.svelte-9xn76c .ctrl.svelte-9xn76c.svelte-9xn76c:hover,.bottom.svelte-9xn76c .ts.svelte-9xn76c.svelte-9xn76c:hover,.bottom.svelte-9xn76c .hover .ts.svelte-9xn76c.svelte-9xn76c{filter:drop-shadow(0 0 8px #000)}.bottom.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{background:linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4) 25%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.1) 75%, transparent);transition:0.5s opacity ease}.top.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{background:linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4) 25%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.1) 75%, transparent);transition:0.5s opacity ease}.ctrl.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{cursor:pointer}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{-webkit-appearance:none;background:transparent;margin:0;cursor:pointer;height:8px}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c:focus{outline:none}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-webkit-slider-runnable-track{height:3px}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-moz-range-track{height:3px;border:none}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-webkit-slider-thumb{height:0;width:0;border-radius:50%;background:#ff3c00;-webkit-appearance:none;appearance:none;transition:all 0.1s ease}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-moz-range-thumb{height:0;width:0;border-radius:50%;background:#ff3c00;-webkit-appearance:none;appearance:none;transition:all 0.1s ease;border:none}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c:hover::-webkit-slider-thumb{height:12px;width:12px;margin-top:-4px}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c:hover::-moz-range-thumb{height:12px;width:12px;margin-top:-4px}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-moz-range-track{background:linear-gradient(90deg, #ff3c00 var(--value), rgba(255, 255, 255, 0.2) var(--value))}input[type='range'].svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-webkit-slider-runnable-track{background:linear-gradient(90deg, #ff3c00 var(--value), rgba(255, 255, 255, 0.2) var(--value))}.bottom.svelte-9xn76c .volume:hover input[type='range'].svelte-9xn76c.svelte-9xn76c{width:5vw;display:inline-block;transition:all 0.1s ease;margin-right:1rem}.bottom.svelte-9xn76c .volume input[type='range'].svelte-9xn76c.svelte-9xn76c{width:0;transition:all 0.1s ease;height:100%}.bottom.svelte-9xn76c [data-name='setProgress'].svelte-9xn76c~.hover.svelte-9xn76c{pointer-events:none;opacity:0;top:1.2rem;transform:translate(-50%, -100%);position:absolute;font-family:Roboto, Arial, Helvetica, sans-serif;white-space:nowrap;font-weight:600;width:200px;transition:0.2s opacity ease}.bottom.svelte-9xn76c [data-name='setProgress'].svelte-9xn76c:hover~.hover.svelte-9xn76c{opacity:1}.bottom.svelte-9xn76c div[data-name='progressWrapper'] .ts.svelte-9xn76c.svelte-9xn76c{color:#ececec;font-size:1.8rem !important;white-space:nowrap;align-self:center;line-height:var(--base-line-height);padding:0 1.2rem;font-weight:600}@media(pointer: none), (pointer: coarse){.bottom.svelte-9xn76c .ctrl[data-name='playPause'].svelte-9xn76c.svelte-9xn76c,.bottom.svelte-9xn76c .ctrl[data-name='playNext'].svelte-9xn76c.svelte-9xn76c,.bottom.svelte-9xn76c .volume.svelte-9xn76c.svelte-9xn76c,.bottom.svelte-9xn76c .ctrl[data-name='toggleFullscreen'].svelte-9xn76c.svelte-9xn76c{display:none}}.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c::-webkit-inner-spin-button{opacity:1;margin-left:0.4rem;margin-right:-0.5rem;filter:invert(0.84);padding-top:2rem}.custom-radio.svelte-9xn76c.svelte-9xn76c.svelte-9xn76c{display:flex;flex-direction:column}.custom-radio.svelte-9xn76c label.svelte-9xn76c.svelte-9xn76c{position:relative}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:hover+label.svelte-9xn76c:before{background-color:var(--lm-radio-bg-color-hover);border-color:var(--lm-radio-border-color-hover)}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:focus+label.svelte-9xn76c:before{border-color:var(--lm-radio-border-color-focus);-moz-box-shadow:var(--lm-radio-box-shadow-focus);-webkit-box-shadow:var(--lm-radio-box-shadow-focus);box-shadow:var(--lm-radio-box-shadow-focus)}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:checked+label.svelte-9xn76c:before{background-color:var(--lm-radio-bg-color-checked);border-color:var(--lm-radio-border-color-checked)}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:checked:focus+label.svelte-9xn76c:before{border-color:var(--lm-radio-border-color-checked-focus);-moz-box-shadow:var(--lm-radio-box-shadow-checked-focus);-webkit-box-shadow:var(--lm-radio-box-shadow-checked-focus);box-shadow:var(--lm-radio-box-shadow-checked-focus)}.dark-mode .custom-radio.svelte-9xn76c label.svelte-9xn76c.svelte-9xn76c:before{background-color:var(--dm-radio-bg-color);border-color:var(--dm-radio-border-color)}.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:hover+label.svelte-9xn76c:before{background-color:var(--dm-radio-bg-color-hover);border-color:var(--dm-radio-border-color-hover)}.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:focus+label.svelte-9xn76c:before{border-color:var(--dm-radio-border-color-focus);-moz-box-shadow:var(--dm-radio-box-shadow-focus);-webkit-box-shadow:var(--dm-radio-box-shadow-focus);box-shadow:var(--dm-radio-box-shadow-focus)}.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:checked+label.svelte-9xn76c:before{background-color:var(--dm-radio-bg-color-checked);border-color:var(--dm-radio-border-color-checked)}.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:checked:focus+label.svelte-9xn76c:before{border-color:var(--dm-radio-border-color-checked-focus);-moz-box-shadow:var(--dm-radio-box-shadow-checked-focus);-webkit-box-shadow:var(--dm-radio-box-shadow-checked-focus);box-shadow:var(--dm-radio-box-shadow-checked-focus)}.custom-radio.svelte-9xn76c label.svelte-9xn76c.svelte-9xn76c:after{content:'';position:absolute;display:none;top:var(--radio-checkmark-top);left:var(--radio-checkmark-left);width:var(--radio-checkmark-width-height);height:var(--radio-checkmark-width-height);background-color:var(--lm-radio-checkmark-color);border-radius:var(--radio-checkmark-border-radius)}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:checked+label.svelte-9xn76c:after{display:block}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:disabled+label.svelte-9xn76c{opacity:0.6;cursor:not-allowed}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:disabled+label.svelte-9xn76c:before,.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:hover:disabled+label.svelte-9xn76c:before{background-color:var(--lm-radio-bg-color);border-color:var(--lm-radio-border-color)}.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:disabled:checked+label.svelte-9xn76c:before,.custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:hover:disabled:checked+label.svelte-9xn76c:before{background-color:var(--lm-radio-bg-color-checked);border-color:var(--lm-radio-border-color-checked)}.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:disabled+label.svelte-9xn76c:before,.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:hover:disabled+label.svelte-9xn76c:before{background-color:var(--dm-radio-bg-color);border-color:var(--dm-radio-border-color)}.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:disabled:checked+label.svelte-9xn76c:before,.dark-mode .custom-radio.svelte-9xn76c input[type='radio'].svelte-9xn76c:hover:disabled:checked+label.svelte-9xn76c:before{background-color:var(--dm-radio-bg-color-checked);border-color:var(--dm-radio-border-color-checked)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGxheWVyLnN2ZWx0ZSIsInNvdXJjZXMiOlsiUGxheWVyLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxyXG4gIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnXHJcbiAgaW1wb3J0IHsgc2V0RmlsZSwgc3BlZWQgfSBmcm9tICcuL3NlcnZlci5qcydcclxuICBpbXBvcnQgUGVlciBmcm9tICcuLi8uLi8uLi9zaGFyZWQvUGVlci5qcydcclxuICBpbXBvcnQgJy4vRmlsZS5qcydcclxuICBpbXBvcnQgU3VidGl0bGVzIGZyb20gJy4vc3VidGl0bGVzLmpzJ1xyXG4gIGltcG9ydCB7IHRvVFMsIHZpZGVvUngsIHJlcXVlc3RUaW1lb3V0LCBjYW5jZWxUaW1lb3V0IH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3V0aWwuanMnXHJcbiAgaW1wb3J0IGFuaXRvbXlzY3JpcHQgZnJvbSAnYW5pdG9teXNjcmlwdCdcclxuICBpbXBvcnQgeyBVUkxGaWxlIH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL1VSTEZpbGUuanMnXHJcbiAgaW1wb3J0IEtleWJvYXJkIGZyb20gJy4vS2V5Ym9hcmQuc3ZlbHRlJ1xyXG5cclxuICAkOiB1cGRhdGVGaWxlcyhmaWxlcylcclxuICBleHBvcnQgbGV0IGZpbGVzID0gW11cclxuICBleHBvcnQgbGV0IG5hbWUgPSBudWxsXHJcbiAgbGV0IHNyYyA9IG51bGxcclxuICBsZXQgdmlkZW8gPSBudWxsXHJcbiAgbGV0IGNvbnRhaW5lciA9IG51bGxcclxuICBsZXQgY3VycmVudCA9IG51bGxcclxuICBsZXQgc3VicyA9IG51bGxcclxuICBsZXQgZHVyYXRpb24gPSAwLjFcclxuICBsZXQgcGF1c2VkID0gdHJ1ZVxyXG4gIGxldCBtdXRlZCA9IGZhbHNlXHJcbiAgbGV0IHdhc1BhdXNlZCA9IHRydWVcclxuICBsZXQgdGh1bWJuYWlsID0gJyAnXHJcbiAgbGV0IHZpZGVvcyA9IFtdXHJcbiAgbGV0IGltbWVyc2VkID0gZmFsc2VcclxuICBsZXQgYnVmZmVyaW5nID0gZmFsc2VcclxuICBsZXQgaW1tZXJzZVRpbWVvdXQgPSBudWxsXHJcbiAgbGV0IGJ1ZmZlclRpbWVvdXQgPSBudWxsXHJcbiAgbGV0IHN1YkhlYWRlcnMgPSBudWxsXHJcbiAgbGV0IHBpcCA9IGZhbHNlXHJcbiAgbGV0IHByZXNlbnRhdGlvblJlcXVlc3QgPSBudWxsXHJcbiAgbGV0IHByZXNlbnRhdGlvbkNvbm5lY3Rpb24gPSBudWxsXHJcbiAgbGV0IGNhbkNhc3QgPSBmYWxzZVxyXG4gIGxldCBpc0Z1bGxzY3JlZW4gPSBmYWxzZVxyXG4gIGxldCBlbmRlZCA9IGZhbHNlXHJcbiAgbGV0IHZvbHVtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd2b2x1bWUnKSB8fCAxXHJcbiAgbGV0IHBsYXliYWNrUmF0ZSA9IDFcclxuICAkOiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndm9sdW1lJywgdm9sdW1lKVxyXG4gIG9uTW91bnQoKCkgPT4ge1xyXG4gICAgaWYgKCdyZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrJyBpbiBIVE1MVmlkZW9FbGVtZW50LnByb3RvdHlwZSkge1xyXG4gICAgICB2aWRlby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRkYXRhJywgKCkgPT4ge1xyXG4gICAgICAgIHZpZGVvLmZwcyA9IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgbGV0IGxhc3RtZXRhID0gbnVsbFxyXG4gICAgICAgICAgbGV0IGNvdW50ID0gMFxyXG5cclxuICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZUZyYW1lcyhub3csIG1ldGFkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChjb3VudCkge1xyXG4gICAgICAgICAgICAgIC8vIHJlc29sdmUgb24gMm5kIGZyYW1lLCAxc3QgZnJhbWUgbWlnaHQgYmUgYSBjdXQtb2ZmXHJcbiAgICAgICAgICAgICAgaWYgKGxhc3RtZXRhKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtc2JmID0gKG1ldGFkYXRhLm1lZGlhVGltZSAtIGxhc3RtZXRhLm1lZGlhVGltZSkgLyAobWV0YWRhdGEucHJlc2VudGVkRnJhbWVzIC0gbGFzdG1ldGEucHJlc2VudGVkRnJhbWVzKVxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmF3RlBTID0gKDEgLyBtc2JmKS50b0ZpeGVkKDMpXHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIGFjY3VyYXRlIGZvciBtcDQsIG1rdiBpcyBhIGZldyBtcyBvZmZcclxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Lm5hbWUuZW5kc1dpdGgoJy5ta3YnKSkge1xyXG4gICAgICAgICAgICAgICAgICBpZiAocmF3RlBTIDwgMjUgJiYgcmF3RlBTID4gMjIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKDIzLjk3NilcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyYXdGUFMgPCAzMSAmJiByYXdGUFMgPiAyOCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoMjkuOTcpXHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmF3RlBTIDwgNjIgJiYgcmF3RlBTID4gNTgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKDU5Ljk0KVxyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmF3RlBTKSAvLyBzbXRoIHdlbnQgVkVSWSB3cm9uZ1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICByZXNvbHZlKHJhd0ZQUylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGFzdG1ldGEgPSBtZXRhZGF0YVxyXG4gICAgICAgICAgICAgICAgdmlkZW8ucmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjayhoYW5kbGVGcmFtZXMpXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGNvdW50KytcclxuICAgICAgICAgICAgICBwYXVzZWQgPSBmYWxzZVxyXG4gICAgICAgICAgICAgIHZpZGVvLnJlcXVlc3RWaWRlb0ZyYW1lQ2FsbGJhY2soaGFuZGxlRnJhbWVzKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKGhhbmRsZUZyYW1lcylcclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmlkZW8uZnBzID0gMjMuOTc2XHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbiAgaWYgKCdQcmVzZW50YXRpb25SZXF1ZXN0JyBpbiB3aW5kb3cpIHtcclxuICAgIGNvbnN0IGhhbmRsZUF2YWlsYWJpbGl0eSA9IGF2YWwgPT4ge1xyXG4gICAgICBjYW5DYXN0ID0gISFhdmFsXHJcbiAgICB9XHJcbiAgICBwcmVzZW50YXRpb25SZXF1ZXN0ID0gbmV3IFByZXNlbnRhdGlvblJlcXVlc3QoWydidWlsZC9jYXN0Lmh0bWwnXSlcclxuICAgIHByZXNlbnRhdGlvblJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcignY29ubmVjdGlvbmF2YWlsYWJsZScsIGUgPT4gaW5pdENhc3QoZSkpXHJcbiAgICBuYXZpZ2F0b3IucHJlc2VudGF0aW9uLmRlZmF1bHRSZXF1ZXN0ID0gcHJlc2VudGF0aW9uUmVxdWVzdFxyXG4gICAgcHJlc2VudGF0aW9uUmVxdWVzdC5nZXRBdmFpbGFiaWxpdHkoKS50aGVuKGF2YWwgPT4ge1xyXG4gICAgICBhdmFsLm9uY2hhbmdlID0gZSA9PiBoYW5kbGVBdmFpbGFiaWxpdHkoZS50YXJnZXQudmFsdWUpXHJcbiAgICAgIGhhbmRsZUF2YWlsYWJpbGl0eShhdmFsLnZhbHVlKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8vZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnQgaXNuJ3QgcmVhY3RpdmVcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdmdWxsc2NyZWVuY2hhbmdlJywgKCkgPT4ge1xyXG4gICAgaXNGdWxsc2NyZWVuID0gISFkb2N1bWVudC5mdWxsc2NyZWVuRWxlbWVudFxyXG4gIH0pXHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZUhlYWRlcnMoKSB7XHJcbiAgICBzdWJIZWFkZXJzID0gc3Vicz8uaGVhZGVyc1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlRmlsZXMoZmlsZXMpIHtcclxuICAgIGlmIChmaWxlcyAmJiBmaWxlcy5sZW5ndGgpIHtcclxuICAgICAgdmlkZW9zID0gZmlsZXMuZmlsdGVyKGZpbGUgPT4gdmlkZW9SeC50ZXN0KGZpbGUubmFtZSkpXHJcbiAgICAgIGlmICh2aWRlb3M/Lmxlbmd0aCkge1xyXG4gICAgICAgIGlmICghY3VycmVudCkge1xyXG4gICAgICAgICAgaGFuZGxlQ3VycmVudCh2aWRlb3NbMF0pXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmIChzdWJzKSB7XHJcbiAgICAgICAgICAgIHN1YnMuZmlsZXMgPSBmaWxlcyB8fCBbXVxyXG4gICAgICAgICAgICBzdWJzLmZpbmRTdWJ0aXRsZUZpbGVzKGN1cnJlbnQpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVDdXJyZW50KGZpbGUpIHtcclxuICAgIGlmIChmaWxlKSB7XHJcbiAgICAgIGlmICh0aHVtYm5haWxEYXRhLnZpZGVvPy5zcmMpIFVSTC5yZXZva2VPYmplY3RVUkwodmlkZW8/LnNyYylcclxuICAgICAgT2JqZWN0LmFzc2lnbih0aHVtYm5haWxEYXRhLCB7XHJcbiAgICAgICAgdGh1bWJuYWlsczogW10sXHJcbiAgICAgICAgaW50ZXJ2YWw6IHVuZGVmaW5lZCxcclxuICAgICAgICB2aWRlbzogdW5kZWZpbmVkXHJcbiAgICAgIH0pXHJcbiAgICAgIGlmIChmaWxlIGluc3RhbmNlb2YgRmlsZSB8fCBmaWxlIGluc3RhbmNlb2YgVVJMRmlsZSkge1xyXG4gICAgICAgIHNldEZpbGUoZmlsZSlcclxuICAgICAgICBzcmMgPSBgc2VydmVyLyR7ZmlsZS5uYW1lfWBcclxuICAgICAgICBjdXJyZW50ID0gZmlsZVxyXG4gICAgICAgIGZhc3QgPSBmYWxzZVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNldEZpbGUobnVsbClcclxuICAgICAgICBzcmMgPSBmaWxlLnVybFxyXG4gICAgICAgIGN1cnJlbnQgPSBmaWxlXHJcbiAgICAgICAgZmFzdCA9IHRydWVcclxuICAgICAgfVxyXG4gICAgICB2aWRlbz8ubG9hZCgpXHJcbiAgICB9XHJcbiAgfVxyXG4gICQ6IGluaXRTdWJzKGN1cnJlbnQsIHZpZGVvKVxyXG5cclxuICBmdW5jdGlvbiBpbml0U3VicyhjdXJyZW50LCB2aWRlbykge1xyXG4gICAgaWYgKGN1cnJlbnQgJiYgdmlkZW8pIHtcclxuICAgICAgaWYgKHN1YnMpIHN1YnMuZGVzdHJveSgpXHJcbiAgICAgIHN1YnMgPSBuZXcgU3VidGl0bGVzKHZpZGVvLCBmaWxlcywgY3VycmVudCwgaGFuZGxlSGVhZGVycylcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gY3ljbGVTdWJ0aXRsZXMoKSB7XHJcbiAgICBpZiAoY3VycmVudCAmJiBzdWJzPy5oZWFkZXJzKSB7XHJcbiAgICAgIGNvbnN0IHRyYWNrcyA9IHN1YnMuaGVhZGVycy5maWx0ZXIoaGVhZGVyID0+IGhlYWRlcilcclxuICAgICAgY29uc3QgaW5kZXggPSB0cmFja3MuaW5kZXhPZihzdWJzLmhlYWRlcnNbc3Vicy5jdXJyZW50XSkgKyAxXHJcbiAgICAgIHN1YnMuc2VsZWN0Q2FwdGlvbnMoaW5kZXggPj0gdHJhY2tzLmxlbmd0aCA/IC0xIDogc3Vicy5oZWFkZXJzLmluZGV4T2YodHJhY2tzW2luZGV4XSkpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBsZXQgc3ViRGVsYXkgPSAwXHJcbiAgJDogdXBkYXRlRGVsYXkoc3ViRGVsYXkpXHJcbiAgZnVuY3Rpb24gdXBkYXRlRGVsYXkoZGVsYXkpIHtcclxuICAgIGlmIChzdWJzPy5yZW5kZXJlcikgc3Vicy5yZW5kZXJlci50aW1lT2Zmc2V0ID0gZGVsYXlcclxuICB9XHJcblxyXG4gIGxldCBjdXJyZW50VGltZSA9IDBcclxuICAkOiBwcm9ncmVzcyA9IGN1cnJlbnRUaW1lIC8gZHVyYXRpb25cclxuICAkOiB0YXJnZXRUaW1lID0gKCFwYXVzZWQgJiYgY3VycmVudFRpbWUpIHx8IHRhcmdldFRpbWVcclxuICBmdW5jdGlvbiBoYW5kbGVNb3VzZURvd24oeyB0YXJnZXQgfSkge1xyXG4gICAgd2FzUGF1c2VkID0gcGF1c2VkXHJcbiAgICBwYXVzZWQgPSB0cnVlXHJcbiAgICB0YXJnZXRUaW1lID0gdGFyZ2V0LnZhbHVlICogZHVyYXRpb25cclxuICB9XHJcbiAgZnVuY3Rpb24gaGFuZGxlTW91c2VVcCgpIHtcclxuICAgIHBhdXNlZCA9IHdhc1BhdXNlZFxyXG4gICAgY3VycmVudFRpbWUgPSB0YXJnZXRUaW1lXHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGhhbmRsZVByb2dyZXNzKHsgdGFyZ2V0IH0pIHtcclxuICAgIHRhcmdldFRpbWUgPSB0YXJnZXQudmFsdWUgKiBkdXJhdGlvblxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcGxheVBhdXNlKCkge1xyXG4gICAgcGF1c2VkID0gIXBhdXNlZFxyXG4gIH1cclxuICBmdW5jdGlvbiB0b2dnbGVNdXRlKCkge1xyXG4gICAgbXV0ZWQgPSAhbXV0ZWRcclxuICB9XHJcbiAgZnVuY3Rpb24gcGxheU5leHQoKSB7XHJcbiAgICBoYW5kbGVDdXJyZW50KHZpZGVvc1sodmlkZW9zLmluZGV4T2YoY3VycmVudCkgKyAxKSAlIHZpZGVvcy5sZW5ndGhdKVxyXG4gIH1cclxuICBmdW5jdGlvbiBwbGF5TGFzdCgpIHtcclxuICAgIGNvbnN0IGluZGV4ID0gdmlkZW9zLmluZGV4T2YoY3VycmVudClcclxuICAgIGhhbmRsZUN1cnJlbnQodmlkZW9zW2luZGV4ID09PSAwID8gdmlkZW9zLmxlbmd0aCAtIDEgOiBpbmRleCAtIDFdKVxyXG4gIH1cclxuICBmdW5jdGlvbiB0b2dnbGVGdWxsc2NyZWVuKCkge1xyXG4gICAgZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnQgPyBkb2N1bWVudC5leGl0RnVsbHNjcmVlbigpIDogY29udGFpbmVyLnJlcXVlc3RGdWxsc2NyZWVuKClcclxuICB9XHJcbiAgZnVuY3Rpb24gc2Vlayh0aW1lKSB7XHJcbiAgICBpZiAodGltZSA9PT0gODUgJiYgY3VycmVudFRpbWUgPCAxMCkge1xyXG4gICAgICB0YXJnZXRUaW1lID0gY3VycmVudFRpbWUgPSA5MFxyXG4gICAgfSBlbHNlIGlmICh0aW1lID09PSA4NSAmJiBkdXJhdGlvbiAtIGN1cnJlbnRUaW1lIDwgOTApIHtcclxuICAgICAgdGFyZ2V0VGltZSA9IGN1cnJlbnRUaW1lID0gZHVyYXRpb25cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRhcmdldFRpbWUgPSBjdXJyZW50VGltZSArPSB0aW1lXHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGZvcndhcmQoKSB7XHJcbiAgICBzZWVrKDIpXHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHJld2luZCgpIHtcclxuICAgIHNlZWsoLTIpXHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHNlbGVjdEF1ZGlvKGlkKSB7XHJcbiAgICBpZiAoaWQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHRyYWNrIG9mIHZpZGVvLmF1ZGlvVHJhY2tzKSB7XHJcbiAgICAgICAgdHJhY2suZW5hYmxlZCA9IHRyYWNrLmlkID09PSBpZFxyXG4gICAgICB9XHJcbiAgICAgIHNlZWsoLTAuNSkgLy8gc3R1cGlkIGZpeCBiZWNhdXNlIHZpZGVvIGZyZWV6ZXMgdXAgd2hlbiBjaGFnaW5nIHRyYWNrc1xyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiB0b2dnbGVDYXN0KCkge1xyXG4gICAgaWYgKHZpZGVvLnJlYWR5U3RhdGUpIHtcclxuICAgICAgaWYgKHByZXNlbnRhdGlvbkNvbm5lY3Rpb24pIHtcclxuICAgICAgICBwcmVzZW50YXRpb25Db25uZWN0aW9uPy50ZXJtaW5hdGUoKVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByZXNlbnRhdGlvblJlcXVlc3Quc3RhcnQoKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIGZ1bmN0aW9uIHRvZ2dsZVBvcG91dCgpIHtcclxuICAgIGlmICh2aWRlby5yZWFkeVN0YXRlKSB7XHJcbiAgICAgIGF3YWl0IHZpZGVvLmZwc1xyXG4gICAgICBpZiAoIXN1YnM/LnJlbmRlcmVyKSB7XHJcbiAgICAgICAgdmlkZW8gIT09IGRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50ID8gdmlkZW8ucmVxdWVzdFBpY3R1cmVJblBpY3R1cmUoKSA6IGRvY3VtZW50LmV4aXRQaWN0dXJlSW5QaWN0dXJlKClcclxuICAgICAgICBwaXAgPSAhZG9jdW1lbnQucGljdHVyZUluUGljdHVyZUVsZW1lbnRcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAoZG9jdW1lbnQucGljdHVyZUluUGljdHVyZUVsZW1lbnQgJiYgIWRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50LmlkKSB7XHJcbiAgICAgICAgICAvLyBvbmx5IGV4aXQgaWYgcGlwIGlzIHRoZSBjdXN0b20gb25lLCBlbHNlIG92ZXJ3cml0ZSBleGlzdGluZyBwaXAgd2l0aCBjdXN0b21cclxuICAgICAgICAgIGRvY3VtZW50LmV4aXRQaWN0dXJlSW5QaWN0dXJlKClcclxuICAgICAgICAgIHBpcCA9ICEhZG9jdW1lbnQucGljdHVyZUluUGljdHVyZUVsZW1lbnRcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc3QgY2FudmFzVmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2aWRlbycpXHJcbiAgICAgICAgICBjb25zdCB7IHN0cmVhbSwgZGVzdHJveSB9ID0gYXdhaXQgZ2V0QnVybkluKClcclxuICAgICAgICAgIGNhbnZhc1ZpZGVvLnNyY09iamVjdCA9IHN0cmVhbVxyXG4gICAgICAgICAgY2FudmFzVmlkZW8ub25sb2FkZWRtZXRhZGF0YSA9ICgpID0+IHtcclxuICAgICAgICAgICAgY2FudmFzVmlkZW8ucGxheSgpXHJcbiAgICAgICAgICAgIGNhbnZhc1ZpZGVvXHJcbiAgICAgICAgICAgICAgLnJlcXVlc3RQaWN0dXJlSW5QaWN0dXJlKClcclxuICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBwaXAgPSAhIWRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50XHJcbiAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBwaXAgPSAhIWRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCBUbyBCdXJuIEluIFN1YnRpdGxlcyAnICsgZSlcclxuICAgICAgICAgICAgICAgIGRlc3Ryb3koKVxyXG4gICAgICAgICAgICAgICAgY2FudmFzVmlkZW8ucmVtb3ZlKClcclxuICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgY2FudmFzVmlkZW8ub25sZWF2ZXBpY3R1cmVpbnBpY3R1cmUgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGRlc3Ryb3koKVxyXG4gICAgICAgICAgICBjYW52YXNWaWRlby5yZW1vdmUoKVxyXG4gICAgICAgICAgICBwaXAgPSAhIWRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGxldCBzaG93S2V5YmluZHMgPSBmYWxzZVxyXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUtleWRvd24oeyBrZXkgfSkge1xyXG4gICAgc3dpdGNoIChrZXkpIHtcclxuICAgICAgY2FzZSAncic6XHJcbiAgICAgICAgc2VlaygtOTApXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnLCc6XHJcbiAgICAgICAgc2VlaygtMSAvIChhd2FpdCB2aWRlby5mcHMpIHx8IDApXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnLic6XHJcbiAgICAgICAgc2VlaygxIC8gKGF3YWl0IHZpZGVvLmZwcykgfHwgMClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdpJzpcclxuICAgICAgICB0b2dnbGVTdGF0cygpXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnYCc6XHJcbiAgICAgICAgc2hvd0tleWJpbmRzID0gIXNob3dLZXliaW5kc1xyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJyAnOlxyXG4gICAgICAgIHBsYXlQYXVzZSgpXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnbic6XHJcbiAgICAgICAgcGxheU5leHQoKVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ20nOlxyXG4gICAgICAgIG11dGVkID0gIW11dGVkXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAncCc6XHJcbiAgICAgICAgdG9nZ2xlUG9wb3V0KClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdmJzpcclxuICAgICAgICB0b2dnbGVGdWxsc2NyZWVuKClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdzJzpcclxuICAgICAgICBzZWVrKDg1KVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ2QnOlxyXG4gICAgICAgIHRvZ2dsZUNhc3QoKVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ2MnOlxyXG4gICAgICAgIGN5Y2xlU3VidGl0bGVzKClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdBcnJvd0xlZnQnOlxyXG4gICAgICAgIHJld2luZCgpXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnQXJyb3dSaWdodCc6XHJcbiAgICAgICAgZm9yd2FyZCgpXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnQXJyb3dVcCc6XHJcbiAgICAgICAgdm9sdW1lID0gTWF0aC5taW4oMSwgdm9sdW1lICsgMC4wNSlcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdBcnJvd0Rvd24nOlxyXG4gICAgICAgIHZvbHVtZSA9IE1hdGgubWF4KDAsIHZvbHVtZSAtIDAuMDUpXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnWyc6XHJcbiAgICAgICAgcGxheWJhY2tSYXRlIC09IDAuMVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ10nOlxyXG4gICAgICAgIHBsYXliYWNrUmF0ZSArPSAwLjFcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdcXFxcJzpcclxuICAgICAgICBwbGF5YmFja1JhdGUgPSAxXHJcbiAgICAgICAgYnJlYWtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIGdldEJ1cm5Jbihub1N1YnMpIHtcclxuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpXHJcbiAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJywgeyBhbHBoYTogZmFsc2UsIGNvbG9yU3BhY2U6ICdkaXNwbGF5LXAzJyB9KVxyXG4gICAgbGV0IGxvb3AgPSBudWxsXHJcbiAgICBsZXQgZGVzdHJveSA9IG51bGxcclxuICAgIGNhbnZhcy53aWR0aCA9IHZpZGVvLnZpZGVvV2lkdGhcclxuICAgIGNhbnZhcy5oZWlnaHQgPSB2aWRlby52aWRlb0hlaWdodFxyXG5cclxuICAgIGlmICgncmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaycgaW4gSFRNTFZpZGVvRWxlbWVudC5wcm90b3R5cGUpIHtcclxuICAgICAgY29uc3QgcmVuZGVyRnJhbWUgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UodmlkZW8sIDAsIDApXHJcbiAgICAgICAgaWYgKCFub1N1YnMpIGNvbnRleHQuZHJhd0ltYWdlKHN1YnMucmVuZGVyZXI/LmNhbnZhcywgMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KVxyXG4gICAgICAgIGxvb3AgPSB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKHJlbmRlckZyYW1lKVxyXG4gICAgICB9XHJcbiAgICAgIGxvb3AgPSB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKHJlbmRlckZyYW1lKVxyXG4gICAgICBkZXN0cm95ID0gKCkgPT4ge1xyXG4gICAgICAgIHZpZGVvLmNhbmNlbFZpZGVvRnJhbWVDYWxsYmFjayhsb29wKVxyXG4gICAgICAgIGNhbnZhcy5yZW1vdmUoKVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBmb3IgdGhlIGZpcmVmb3ggaWRpb3RzXHJcbiAgICAgIGNvbnN0IGZwcyA9IGF3YWl0IHZpZGVvLmZwc1xyXG4gICAgICBjb25zdCByZW5kZXJGcmFtZSA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb250ZXh0LmRyYXdJbWFnZSh2aWRlbywgMCwgMClcclxuICAgICAgICBpZiAoIW5vU3VicykgY29udGV4dC5kcmF3SW1hZ2Uoc3Vicy5yZW5kZXJlcj8uY2FudmFzLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpXHJcbiAgICAgICAgbG9vcCA9IHJlcXVlc3RUaW1lb3V0KHJlbmRlckZyYW1lLCA1MDAgLyBmcHMpIC8vIHJlcXVlc3QgeDIgZnBzIGZvciBzbW9vdGhuZXNzXHJcbiAgICAgIH1cclxuICAgICAgbG9vcCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJGcmFtZSlcclxuICAgICAgZGVzdHJveSA9ICgpID0+IHtcclxuICAgICAgICBjYW5jZWxUaW1lb3V0KGxvb3ApXHJcbiAgICAgICAgY2FudmFzLnJlbW92ZSgpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7IHN0cmVhbTogY2FudmFzLmNhcHR1cmVTdHJlYW0oYXdhaXQgdmlkZW8uZnBzKSwgZGVzdHJveSB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBpbml0Q2FzdChldmVudCkge1xyXG4gICAgLy8gdGhlc2UgcXVhbGl0eSBzZXR0aW5ncyBhcmUgbGlrZWx5IHRvIG1ha2UgY2FzdCBvdmVyaGVhdCwgb2ggbm9lcyFcclxuICAgIGxldCBwZWVyID0gbmV3IFBlZXIoe1xyXG4gICAgICBwb2xpdGU6IHRydWUsXHJcbiAgICAgIHF1YWxpdHk6IHtcclxuICAgICAgICBhdWRpbzoge1xyXG4gICAgICAgICAgc3RlcmVvOiAxLFxyXG4gICAgICAgICAgJ3Nwcm9wLXN0ZXJlbyc6IDEsXHJcbiAgICAgICAgICBtYXhhdmVyYWdlYml0cmF0ZTogNTEwMDAwLFxyXG4gICAgICAgICAgbWF4cGxheWJhY2tyYXRlOiA1MTAwMDAsXHJcbiAgICAgICAgICBjYnI6IDAsXHJcbiAgICAgICAgICB1c2VpbmJhbmRmZWM6IDEsXHJcbiAgICAgICAgICB1c2VkdHg6IDEsXHJcbiAgICAgICAgICBtYXhwdGltZTogMjAsXHJcbiAgICAgICAgICBtaW5wdGltZTogMTBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHZpZGVvOiB7XHJcbiAgICAgICAgICBiaXRyYXRlOiAyMDAwMDAwLFxyXG4gICAgICAgICAgY29kZWNzOiBbJ1ZQOScsICdWUDgnLCAnSDI2NCddXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24gPSBldmVudC5jb25uZWN0aW9uXHJcbiAgICBwcmVzZW50YXRpb25Db25uZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ3Rlcm1pbmF0ZScsICgpID0+IHtcclxuICAgICAgcHJlc2VudGF0aW9uQ29ubmVjdGlvbiA9IG51bGxcclxuICAgICAgcGVlciA9IG51bGxcclxuICAgIH0pXHJcblxyXG4gICAgcGVlci5zaWduYWxpbmdQb3J0Lm9ubWVzc2FnZSA9ICh7IGRhdGEgfSkgPT4ge1xyXG4gICAgICBwcmVzZW50YXRpb25Db25uZWN0aW9uLnNlbmQoZGF0YSlcclxuICAgIH1cclxuXHJcbiAgICBwcmVzZW50YXRpb25Db25uZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCAoeyBkYXRhIH0pID0+IHtcclxuICAgICAgcGVlci5zaWduYWxpbmdQb3J0LnBvc3RNZXNzYWdlKGRhdGEpXHJcbiAgICB9KVxyXG5cclxuICAgIHBlZXIuZGMub25vcGVuID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICBpZiAocGVlciAmJiBwcmVzZW50YXRpb25Db25uZWN0aW9uKSB7XHJcbiAgICAgICAgY29uc3QgdHJhY2tzID0gW11cclxuICAgICAgICBjb25zdCB2aWRlb3N0cmVhbSA9IHZpZGVvLmNhcHR1cmVTdHJlYW0oYXdhaXQgdmlkZW8uZnBzKVxyXG4gICAgICAgIGlmICh0cnVlKSB7XHJcbiAgICAgICAgICAvLyBUT0RPOiBjaGVjayBpZiBjYXN0IHN1cHBvcnRzIGNvZGVjc1xyXG4gICAgICAgICAgY29uc3QgeyBzdHJlYW0sIGRlc3Ryb3kgfSA9IGF3YWl0IGdldEJ1cm5Jbighc3Vicz8ucmVuZGVyZXIpXHJcbiAgICAgICAgICB0cmFja3MucHVzaChzdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVswXSwgdmlkZW9zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXSlcclxuICAgICAgICAgIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigndGVybWluYXRlJywgZGVzdHJveSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdHJhY2tzLnB1c2godmlkZW9zdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVswXSwgdmlkZW9zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChjb25zdCB0cmFjayBvZiB0cmFja3MpIHtcclxuICAgICAgICAgIHBlZXIucGMuYWRkVHJhY2sodHJhY2ssIHZpZGVvc3RyZWFtKVxyXG4gICAgICAgIH1cclxuICAgICAgICBwYXVzZWQgPSBmYWxzZSAvLyB2aWRlbyBwYXVzZXMgZm9yIHNvbWUgcmVhc29uXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGltbWVyc2VQbGF5ZXIoKSB7XHJcbiAgICBpbW1lcnNlZCA9IHRydWVcclxuICAgIGltbWVyc2VUaW1lb3V0ID0gdW5kZWZpbmVkXHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXNldEltbWVyc2UoKSB7XHJcbiAgICBpZiAoaW1tZXJzZVRpbWVvdXQpIHtcclxuICAgICAgY2xlYXJUaW1lb3V0KGltbWVyc2VUaW1lb3V0KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaW1tZXJzZWQgPSBmYWxzZVxyXG4gICAgfVxyXG4gICAgaW1tZXJzZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGltbWVyc2VQbGF5ZXIsIDggKiAxMDAwKVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaGlkZUJ1ZmZlcmluZygpIHtcclxuICAgIGlmIChidWZmZXJUaW1lb3V0KSB7XHJcbiAgICAgIGNsZWFyVGltZW91dChidWZmZXJUaW1lb3V0KVxyXG4gICAgICBidWZmZXJUaW1lb3V0ID0gbnVsbFxyXG4gICAgICBidWZmZXJpbmcgPSBmYWxzZVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc2hvd0J1ZmZlcmluZygpIHtcclxuICAgIGJ1ZmZlclRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgYnVmZmVyaW5nID0gdHJ1ZVxyXG4gICAgICByZXNldEltbWVyc2UoKVxyXG4gICAgfSwgMTUwKVxyXG4gIH1cclxuICAkOiBuYXZpZ2F0b3IubWVkaWFTZXNzaW9uPy5zZXRQb3NpdGlvblN0YXRlKHtcclxuICAgIGR1cmF0aW9uOiBNYXRoLm1heCgwLCBkdXJhdGlvbiB8fCAwKSxcclxuICAgIHBsYXliYWNrUmF0ZTogMSxcclxuICAgIHBvc2l0aW9uOiBNYXRoLm1heChkdXJhdGlvbiB8fCAwLCBjdXJyZW50VGltZSB8fCAwKVxyXG4gIH0pXHJcbiAgYXN5bmMgZnVuY3Rpb24gbWVkaWFDaGFuZ2UoY3VycmVudCwgaW1hZ2UpIHtcclxuICAgIGlmIChjdXJyZW50KSB7XHJcbiAgICAgIGNvbnN0IHsgcmVsZWFzZV9ncm91cCwgYW5pbWVfdGl0bGUsIGVwaXNvZGVfbnVtYmVyLCBlcGlzb2RlX3RpdGxlIH0gPSBhd2FpdCBhbml0b215c2NyaXB0KGN1cnJlbnQubmFtZSlcclxuICAgICAgLy8gaG9uZXN0bHksIHRoaXMgaXMgbWFkZSBmb3IgYW5pbWUsIGJ1dCB3b3JrcyBmYW50YXN0aWMgZm9yIGV2ZXJ5dGhpbmcgZWxzZS5cclxuICAgICAgbmFtZSA9IFthbmltZV90aXRsZSwgZXBpc29kZV9udW1iZXIsIGVwaXNvZGVfdGl0bGVdLmZpbHRlcihpID0+IGkpLmpvaW4oJyAtICcpXHJcbiAgICAgIGlmICgnbWVkaWFTZXNzaW9uJyBpbiBuYXZpZ2F0b3IpIHtcclxuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IGltYWdlXHJcbiAgICAgICAgICA/IG5ldyBNZWRpYU1ldGFkYXRhKHtcclxuICAgICAgICAgICAgICB0aXRsZTogbmFtZSB8fCAnVmlkZW8gUGxheWVyJyxcclxuICAgICAgICAgICAgICBhcnR3b3JrOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgIHNyYzogaW1hZ2UsXHJcbiAgICAgICAgICAgICAgICAgIHNpemVzOiAnMjU2eDI1NicsXHJcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbWFnZS9qcGcnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgOiBuZXcgTWVkaWFNZXRhZGF0YSh7XHJcbiAgICAgICAgICAgICAgdGl0bGU6IG5hbWUgfHwgJ1ZpZGVvIFBsYXllcidcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICBpZiAocmVsZWFzZV9ncm91cCkgbWV0YWRhdGEuYXJ0aXN0ID0gcmVsZWFzZV9ncm91cFxyXG4gICAgICAgIG5hdmlnYXRvci5tZWRpYVNlc3Npb24ubWV0YWRhdGEgPSBtZXRhZGF0YVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICQ6IG1lZGlhQ2hhbmdlKGN1cnJlbnQpXHJcblxyXG4gIGlmICgnbWVkaWFTZXNzaW9uJyBpbiBuYXZpZ2F0b3IpIHtcclxuICAgIG5hdmlnYXRvci5tZWRpYVNlc3Npb24uc2V0QWN0aW9uSGFuZGxlcigncGxheScsIHBsYXlQYXVzZSlcclxuICAgIG5hdmlnYXRvci5tZWRpYVNlc3Npb24uc2V0QWN0aW9uSGFuZGxlcigncGF1c2UnLCBwbGF5UGF1c2UpXHJcbiAgICBuYXZpZ2F0b3IubWVkaWFTZXNzaW9uLnNldEFjdGlvbkhhbmRsZXIoJ25leHR0cmFjaycsIHBsYXlOZXh0KVxyXG4gICAgbmF2aWdhdG9yLm1lZGlhU2Vzc2lvbi5zZXRBY3Rpb25IYW5kbGVyKCdwcmV2aW91c3RyYWNrJywgcGxheUxhc3QpXHJcbiAgICBuYXZpZ2F0b3IubWVkaWFTZXNzaW9uLnNldEFjdGlvbkhhbmRsZXIoJ3NlZWtmb3J3YXJkJywgZm9yd2FyZClcclxuICAgIG5hdmlnYXRvci5tZWRpYVNlc3Npb24uc2V0QWN0aW9uSGFuZGxlcignc2Vla2JhY2t3YXJkJywgcmV3aW5kKVxyXG4gIH1cclxuICBsZXQgc3RhdHMgPSBudWxsXHJcbiAgbGV0IHJlcXVlc3RDYWxsYmFjayA9IG51bGxcclxuICBmdW5jdGlvbiB0b2dnbGVTdGF0cygpIHtcclxuICAgIGlmICgncmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaycgaW4gSFRNTFZpZGVvRWxlbWVudC5wcm90b3R5cGUpIHtcclxuICAgICAgaWYgKHJlcXVlc3RDYWxsYmFjaykge1xyXG4gICAgICAgIHN0YXRzID0gbnVsbFxyXG4gICAgICAgIHZpZGVvLmNhbmNlbFZpZGVvRnJhbWVDYWxsYmFjayhyZXF1ZXN0Q2FsbGJhY2spXHJcbiAgICAgICAgcmVxdWVzdENhbGxiYWNrID0gbnVsbFxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcXVlc3RDYWxsYmFjayA9IHZpZGVvLnJlcXVlc3RWaWRlb0ZyYW1lQ2FsbGJhY2soKGEsIGIpID0+IHtcclxuICAgICAgICAgIHN0YXRzID0ge31cclxuICAgICAgICAgIGhhbmRsZVN0YXRzKGEsIGIpXHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVTdGF0cyhub3csIG1ldGFkYXRhKSB7XHJcbiAgICBpZiAoc3RhdHMpIHtcclxuICAgICAgc3RhdHMgPSB7XHJcbiAgICAgICAgZnBzOiBhd2FpdCB2aWRlby5mcHMsXHJcbiAgICAgICAgcHJlc2VudGVkOiBtZXRhZGF0YS5wcmVzZW50ZWRGcmFtZXMsXHJcbiAgICAgICAgZHJvcHBlZDogdmlkZW8uZ2V0VmlkZW9QbGF5YmFja1F1YWxpdHkoKT8uZHJvcHBlZFZpZGVvRnJhbWVzLFxyXG4gICAgICAgIHByb2Nlc3Npbmc6IG1ldGFkYXRhLnByb2Nlc3NpbmdEdXJhdGlvbiArICcgbXMnLFxyXG4gICAgICAgIHZpZXdwb3J0OiB2aWRlby5jbGllbnRXaWR0aCArICd4JyArIHZpZGVvLmNsaWVudEhlaWdodCxcclxuICAgICAgICByZXNvbHV0aW9uOiB2aWRlb1dpZHRoICsgJ3gnICsgdmlkZW9IZWlnaHQsXHJcbiAgICAgICAgYnVmZmVyOiBnZXRCdWZmZXJIZWFsdGgobWV0YWRhdGEubWVkaWFUaW1lKSArICcgcydcclxuICAgICAgfVxyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHZpZGVvLnJlcXVlc3RWaWRlb0ZyYW1lQ2FsbGJhY2soaGFuZGxlU3RhdHMpLCAyMDApXHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGdldEJ1ZmZlckhlYWx0aCh0aW1lKSB7XHJcbiAgICBmb3IgKGxldCBpbmRleCA9IHZpZGVvLmJ1ZmZlcmVkLmxlbmd0aDsgaW5kZXgtLTsgKSB7XHJcbiAgICAgIGlmICh0aW1lIDwgdmlkZW8uYnVmZmVyZWQuZW5kKGluZGV4KSAmJiB0aW1lID4gdmlkZW8uYnVmZmVyZWQuc3RhcnQoaW5kZXgpKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHZpZGVvLmJ1ZmZlcmVkLmVuZChpbmRleCkgLSB0aW1lKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGxldCBmYXN0ID0gZmFsc2VcclxuICBsZXQgc3VjY2Vzc0NvdW50ID0gMFxyXG4gIGFzeW5jIGZ1bmN0aW9uIGNoZWNrU3BlZWQoKSB7XHJcbiAgICBpZiAoIWZhc3QgJiYgKGN1cnJlbnQgaW5zdGFuY2VvZiBGaWxlIHx8IGN1cnJlbnQgaW5zdGFuY2VvZiBVUkxGaWxlKSAmJiBkdXJhdGlvbikge1xyXG4gICAgICBjb25zdCBieXRlcmF0ZSA9IGN1cnJlbnQuc2l6ZSAvIGR1cmF0aW9uXHJcbiAgICAgIGNvbnN0IGN1cnJCcHMgPSBzcGVlZCgpXHJcbiAgICAgIGlmIChjdXJyQnBzID4gNSAqIGJ5dGVyYXRlKSB7XHJcbiAgICAgICAgKytzdWNjZXNzQ291bnRcclxuICAgICAgICAvLyB0aGlzIGlzIGZhdWx0eSBsb2dpYywgYmVjYXVzZSB0aGVyZSBtaWdodCBub3QgYmUgYSBuZWVkIHRvIHB1bGwgZGF0YSwgZXZlbiBpZiB0aGUgc3BlZWRzIGNhbiBiZSByZWFjaGVkXHJcbiAgICAgICAgaWYgKHN1Y2Nlc3NDb3VudCA+IDEwKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnQWNjZXNzIHNwZWVkIGV4Y2VlZHMgeDUgYml0cmF0ZScpXHJcbiAgICAgICAgICBmYXN0ID0gdHJ1ZVxyXG4gICAgICAgICAgYXdhaXQgc3Vicz8ucGFyc2VTdWJ0aXRsZXMoKVxyXG4gICAgICAgICAgZmluaXNoVGh1bWJuYWlscygpXHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHN1Y2Nlc3NDb3VudCA9IDBcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBjb25zdCB0aHVtYkNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpXHJcbiAgdGh1bWJDYW52YXMud2lkdGggPSAyMDBcclxuICBjb25zdCB0aHVtYm5haWxEYXRhID0ge1xyXG4gICAgdGh1bWJuYWlsczogW10sXHJcbiAgICBjYW52YXM6IHRodW1iQ2FudmFzLFxyXG4gICAgY29udGV4dDogdGh1bWJDYW52YXMuZ2V0Q29udGV4dCgnMmQnKSxcclxuICAgIGludGVydmFsOiBudWxsLFxyXG4gICAgdmlkZW86IG51bGxcclxuICB9XHJcbiAgbGV0IGhvdmVyID0gbnVsbFxyXG4gIGxldCBob3ZlclRpbWUgPSAwXHJcbiAgbGV0IGhvdmVyT2Zmc2V0ID0gMFxyXG4gIGZ1bmN0aW9uIGhhbmRsZUhvdmVyKHsgb2Zmc2V0WCwgdGFyZ2V0IH0pIHtcclxuICAgIGhvdmVyT2Zmc2V0ID0gb2Zmc2V0WCAvIHRhcmdldC5jbGllbnRXaWR0aFxyXG4gICAgaG92ZXJUaW1lID0gZHVyYXRpb24gKiBob3Zlck9mZnNldFxyXG4gICAgaG92ZXIuc3R5bGUuc2V0UHJvcGVydHkoJ2xlZnQnLCBob3Zlck9mZnNldCAqIDEwMCArICclJylcclxuICAgIHRodW1ibmFpbCA9IHRodW1ibmFpbERhdGEudGh1bWJuYWlsc1tNYXRoLmZsb29yKGhvdmVyVGltZSAvIHRodW1ibmFpbERhdGEuaW50ZXJ2YWwpXSB8fCAnICdcclxuICB9XHJcbiAgZnVuY3Rpb24gY3JlYXRlVGh1bWJuYWlsKHZpZCA9IHZpZGVvKSB7XHJcbiAgICBpZiAodmlkPy5yZWFkeVN0YXRlID49IDIgJiYgKGN1cnJlbnQgaW5zdGFuY2VvZiBGaWxlIHx8IGN1cnJlbnQgaW5zdGFuY2VvZiBVUkxGaWxlKSkge1xyXG4gICAgICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IodmlkLmN1cnJlbnRUaW1lIC8gdGh1bWJuYWlsRGF0YS5pbnRlcnZhbClcclxuICAgICAgaWYgKCF0aHVtYm5haWxEYXRhLnRodW1ibmFpbHNbaW5kZXhdKSB7XHJcbiAgICAgICAgdGh1bWJuYWlsRGF0YS5jb250ZXh0LmZpbGxSZWN0KDAsIDAsIDIwMCwgdGh1bWJuYWlsRGF0YS5jYW52YXMuaGVpZ2h0KVxyXG4gICAgICAgIHRodW1ibmFpbERhdGEuY29udGV4dC5kcmF3SW1hZ2UodmlkLCAwLCAwLCAyMDAsIHRodW1ibmFpbERhdGEuY2FudmFzLmhlaWdodClcclxuICAgICAgICB0aHVtYm5haWxEYXRhLnRodW1ibmFpbHNbaW5kZXhdID0gdGh1bWJuYWlsRGF0YS5jYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJylcclxuICAgICAgICBpZiAoaW5kZXggPT09IDUpIG1lZGlhQ2hhbmdlKGN1cnJlbnQsIHRodW1ibmFpbERhdGEudGh1bWJuYWlsc1tpbmRleF0pXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgJDogaW5pdFRodW1ibmFpbHMoMjAwIC8gKHZpZGVvV2lkdGggLyB2aWRlb0hlaWdodCkpXHJcbiAgZnVuY3Rpb24gaW5pdFRodW1ibmFpbHMoaGVpZ2h0KSB7XHJcbiAgICBpZiAoIWlzTmFOKGhlaWdodCkpIHtcclxuICAgICAgdGh1bWJuYWlsRGF0YS5pbnRlcnZhbCA9IGR1cmF0aW9uIC8gMzAwIDwgNSA/IDUgOiBkdXJhdGlvbiAvIDMwMFxyXG4gICAgICB0aHVtYm5haWxEYXRhLmNhbnZhcy5oZWlnaHQgPSBoZWlnaHRcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGZpbmlzaFRodW1ibmFpbHMoKSB7XHJcbiAgICBjb25zdCB0MCA9IHBlcmZvcm1hbmNlLm5vdygpXHJcbiAgICBjb25zdCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJylcclxuICAgIGxldCBpbmRleCA9IDBcclxuICAgIHZpZGVvLnByZWxvYWQgPSAnbm9uZSdcclxuICAgIHZpZGVvLnZvbHVtZSA9IDBcclxuICAgIHZpZGVvLnBsYXliYWNrUmF0ZSA9IDBcclxuICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRlZGRhdGEnLCAoKSA9PiBsb2FkVGltZSgpKVxyXG4gICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignY2FucGxheScsICgpID0+IHtcclxuICAgICAgY3JlYXRlVGh1bWJuYWlsKHRodW1ibmFpbERhdGEudmlkZW8pXHJcbiAgICAgIGxvYWRUaW1lKClcclxuICAgIH0pXHJcbiAgICB0aHVtYm5haWxEYXRhLnZpZGVvID0gdmlkZW9cclxuICAgIGNvbnN0IGxvYWRUaW1lID0gKCkgPT4ge1xyXG4gICAgICB3aGlsZSAodGh1bWJuYWlsRGF0YS50aHVtYm5haWxzW2luZGV4XSAmJiBpbmRleCA8PSBNYXRoLmZsb29yKHRodW1ibmFpbERhdGEudmlkZW8uZHVyYXRpb24gLyB0aHVtYm5haWxEYXRhLmludGVydmFsKSkge1xyXG4gICAgICAgIC8vIG9ubHkgY3JlYXRlIHRodW1ibmFpbHMgdGhhdCBhcmUgbWlzc2luZ1xyXG4gICAgICAgIGluZGV4KytcclxuICAgICAgfVxyXG4gICAgICBpZiAodGh1bWJuYWlsRGF0YS52aWRlbz8uY3VycmVudFRpbWUgIT09IHRodW1ibmFpbERhdGEudmlkZW8/LmR1cmF0aW9uICYmIHRodW1ibmFpbERhdGEudmlkZW8pIHtcclxuICAgICAgICB0aHVtYm5haWxEYXRhLnZpZGVvLmN1cnJlbnRUaW1lID0gaW5kZXggKiB0aHVtYm5haWxEYXRhLmludGVydmFsXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGh1bWJuYWlsRGF0YS52aWRlbz8ucmVtb3ZlQXR0cmlidXRlKCdzcmMnKVxyXG4gICAgICAgIHRodW1ibmFpbERhdGEudmlkZW8/LmxvYWQoKVxyXG4gICAgICAgIHRodW1ibmFpbERhdGEudmlkZW8/LnJlbW92ZSgpXHJcbiAgICAgICAgZGVsZXRlIHRodW1ibmFpbERhdGEudmlkZW9cclxuICAgICAgICBjb25zb2xlLmxvZygnVGh1bWJuYWlsIGNyZWF0aW5nIGZpbmlzaGVkJywgaW5kZXgsIHRvVFMoKHBlcmZvcm1hbmNlLm5vdygpIC0gdDApIC8gMTAwMCkpXHJcbiAgICAgIH1cclxuICAgICAgaW5kZXgrK1xyXG4gICAgfVxyXG4gICAgdGh1bWJuYWlsRGF0YS52aWRlby5zcmMgPSBjdXJyZW50IGluc3RhbmNlb2YgRmlsZSA/IFVSTC5jcmVhdGVPYmplY3RVUkwoY3VycmVudCkgOiBjdXJyZW50LnVybFxyXG4gICAgdGh1bWJuYWlsRGF0YS52aWRlby5sb2FkKClcclxuICAgIGNvbnNvbGUubG9nKCdUaHVtYm5haWwgY3JlYXRpbmcgc3RhcnRlZCcpXHJcbiAgfVxyXG4gIGxldCBpc1N0YW5kYWxvbmUgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKGRpc3BsYXktbW9kZTogc3RhbmRhbG9uZSknKS5tYXRjaGVzXHJcbiAgd2luZG93Lm1hdGNoTWVkaWEoJyhkaXNwbGF5LW1vZGU6IHN0YW5kYWxvbmUpJykuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKHsgbWF0Y2hlcyB9KSA9PiB7XHJcbiAgICBpc1N0YW5kYWxvbmUgPSBtYXRjaGVzXHJcbiAgfSlcclxuICBjb25zdCBpc1dpbmRvd3MgPSBuYXZpZ2F0b3IuYXBwVmVyc2lvbi5pbmNsdWRlcygnV2luZG93cycpXHJcbiAgbGV0IGlubmVyV2lkdGgsIGlubmVySGVpZ2h0LCB2aWRlb1dpZHRoLCB2aWRlb0hlaWdodFxyXG4gIGxldCBtZW51YmFyT2Zmc2V0ID0gMFxyXG4gICQ6IGNhbGNNZW51YmFyT2Zmc2V0KGlubmVyV2lkdGgsIGlubmVySGVpZ2h0LCB2aWRlb1dpZHRoLCB2aWRlb0hlaWdodCwgaXNTdGFuZGFsb25lKVxyXG4gIGZ1bmN0aW9uIGNhbGNNZW51YmFyT2Zmc2V0KGlubmVyV2lkdGgsIGlubmVySGVpZ2h0LCB2aWRlb1dpZHRoLCB2aWRlb0hlaWdodCwgaXNTdGFuZGFsb25lKSB7XHJcbiAgICAvLyBvdXRlcmhlaWdodCByZXNpemUgYW5kIGlubmVyaGVpZ2h0IHJlc2l6ZSBpcyBtdXR1YWwsIGFkZGl0aW9uYWxseSB1cGRhdGUgb24gbWV0YWRhdGEgYW5kIGFwcCBzdGF0ZSBjaGFuZ2VcclxuICAgIGlmIChpc1N0YW5kYWxvbmUgJiYgdmlkZW9XaWR0aCAmJiB2aWRlb0hlaWdodCkge1xyXG4gICAgICAvLyBzbyB3aW5kb3dzIGlzIHZlcnkgZHVtYiwgYW5kIGNhbGN1bGF0ZXMgd2luZG93ZWQgbW9kZSBhcyBpZiBpdCB3YXMgd2luZG93IFhQLCB3aXRoIHRoZSBvbGQgYmFycywgYnV0IG5vdCB3aGVuIG1heGltaXNlZFxyXG4gICAgICBjb25zdCBpc01heGltaXNlZCA9IHNjcmVlbi5hdmFpbFdpZHRoID09PSB3aW5kb3cub3V0ZXJXaWR0aCAmJiBzY3JlZW4uYXZhaWxIZWlnaHQgPT09IHdpbmRvdy5vdXRlckhlaWdodFxyXG4gICAgICBjb25zdCBtZW51YmFyID0gTWF0aC5tYXgoMCwgaXNXaW5kb3dzICYmICFpc01heGltaXNlZCA/IHdpbmRvdy5vdXRlckhlaWdodCAtIGlubmVySGVpZ2h0IC0gOCA6IHdpbmRvdy5vdXRlckhlaWdodCAtIGlubmVySGVpZ2h0KVxyXG4gICAgICAvLyBlbGVtZW50IHJhdGlvIGNhbGNcclxuICAgICAgY29uc3QgdmlkZW9SYXRpbyA9IHZpZGVvV2lkdGggLyB2aWRlb0hlaWdodFxyXG4gICAgICBjb25zdCB7IG9mZnNldFdpZHRoLCBvZmZzZXRIZWlnaHQgfSA9IHZpZGVvXHJcbiAgICAgIGNvbnN0IGVsZW1lbnRSYXRpbyA9IG9mZnNldFdpZHRoIC8gb2Zmc2V0SGVpZ2h0XHJcbiAgICAgIC8vIHZpZGVvIGlzIHNob3J0ZXIgdGhhbiBlbGVtZW50ICYmIGhhcyBzcGFjZSBmb3IgbWVudWJhciBvZmZzZXRcclxuICAgICAgaWYgKCFkb2N1bWVudC5mdWxsc2NyZWVuRWxlbWVudCAmJiBtZW51YmFyICYmIGVsZW1lbnRSYXRpbyA8PSB2aWRlb1JhdGlvICYmIG9mZnNldEhlaWdodCAtIG9mZnNldFdpZHRoIC8gdmlkZW9SYXRpbyA+IG1lbnViYXIpIHtcclxuICAgICAgICBtZW51YmFyT2Zmc2V0ID0gKG1lbnViYXIgLyAyKSAqIC0xXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbWVudWJhck9mZnNldCA9IDBcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3ZlbHRlOndpbmRvdyBvbjprZXlkb3duPXtoYW5kbGVLZXlkb3dufSBiaW5kOmlubmVyV2lkdGggYmluZDppbm5lckhlaWdodCAvPlxyXG57I2lmIHNob3dLZXliaW5kc31cclxuICA8ZGl2IGNsYXNzPVwicG9zaXRpb24tYWJzb2x1dGUgYmctdHAgdy1mdWxsIGgtZnVsbCB6LTUwIHAtMjAgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyXCIgb246Y2xpY2t8c2VsZj17KCkgPT4gKHNob3dLZXliaW5kcyA9IGZhbHNlKX0+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiY2xvc2VcIiB0eXBlPVwiYnV0dG9uXCIgb246Y2xpY2s9eygpID0+IChzaG93S2V5YmluZHMgPSBmYWxzZSl9PjxzcGFuPsOXPC9zcGFuPjwvYnV0dG9uPlxyXG4gICAgPEtleWJvYXJkIC8+XHJcbiAgPC9kaXY+XHJcbnsvaWZ9XHJcbjwhLS0gc3ZlbHRlLWlnbm9yZSBhMTF5LW1lZGlhLWhhcy1jYXB0aW9uIC0tPlxyXG48ZGl2XHJcbiAgY2xhc3M9XCJwbGF5ZXIgdy1mdWxsIGgtZnVsbCBkLWZsZXggZmxleC1jb2x1bW5cIlxyXG4gIGNsYXNzOnBpcFxyXG4gIGNsYXNzOmltbWVyc2VkXHJcbiAgY2xhc3M6YnVmZmVyaW5nXHJcbiAgYmluZDp0aGlzPXtjb250YWluZXJ9XHJcbiAgb246bW91c2Vtb3ZlPXtyZXNldEltbWVyc2V9XHJcbiAgb246dG91Y2htb3ZlPXtyZXNldEltbWVyc2V9XHJcbiAgb246a2V5cHJlc3M9e3Jlc2V0SW1tZXJzZX1cclxuICBvbjptb3VzZWxlYXZlPXtpbW1lcnNlUGxheWVyfT5cclxuICA8dmlkZW9cclxuICAgIGNsYXNzPVwicG9zaXRpb24tYWJzb2x1dGUgaC1mdWxsIHctZnVsbFwiXHJcbiAgICBzdHlsZT17YG1hcmdpbi10b3A6ICR7bWVudWJhck9mZnNldH1weGB9XHJcbiAgICBhdXRvcGxheVxyXG4gICAgcHJlbG9hZD1cImF1dG9cIlxyXG4gICAge3NyY31cclxuICAgIGJpbmQ6dmlkZW9IZWlnaHRcclxuICAgIGJpbmQ6dmlkZW9XaWR0aFxyXG4gICAgYmluZDp0aGlzPXt2aWRlb31cclxuICAgIGJpbmQ6dm9sdW1lXHJcbiAgICBiaW5kOmR1cmF0aW9uXHJcbiAgICBiaW5kOmN1cnJlbnRUaW1lXHJcbiAgICBiaW5kOnBhdXNlZFxyXG4gICAgYmluZDplbmRlZFxyXG4gICAgYmluZDptdXRlZFxyXG4gICAgYmluZDpwbGF5YmFja1JhdGVcclxuICAgIG9uOnRpbWV1cGRhdGU9e2NoZWNrU3BlZWR9XHJcbiAgICBvbjp0aW1ldXBkYXRlPXsoKSA9PiBjcmVhdGVUaHVtYm5haWwoKX1cclxuICAgIG9uOndhaXRpbmc9e3Nob3dCdWZmZXJpbmd9XHJcbiAgICBvbjpsb2FkZWRkYXRhPXtoaWRlQnVmZmVyaW5nfVxyXG4gICAgb246Y2FucGxheT17aGlkZUJ1ZmZlcmluZ31cclxuICAgIG9uOnBsYXlpbmc9e2hpZGVCdWZmZXJpbmd9XHJcbiAgICBvbjpsb2FkZWRtZXRhZGF0YT17aGlkZUJ1ZmZlcmluZ31cclxuICAgIG9uOmxlYXZlcGljdHVyZWlucGljdHVyZT17KCkgPT4gKHBpcCA9IGZhbHNlKX0gLz5cclxuICB7I2lmIHN0YXRzfVxyXG4gICAgPGRpdiBjbGFzcz1cInBvc2l0aW9uLWFic29sdXRlIHRvcC0wIGJnLXRwIHAtMTAgbS0xNSB0ZXh0LW1vbm9zcGFjZSByb3VuZGVkIHotNTBcIj5cclxuICAgICAgPGJ1dHRvbiBjbGFzcz1cImNsb3NlXCIgdHlwZT1cImJ1dHRvblwiIG9uOmNsaWNrPXt0b2dnbGVTdGF0c30+PHNwYW4+w5c8L3NwYW4+PC9idXR0b24+XHJcbiAgICAgIEZQUzoge3N0YXRzLmZwc308YnIgLz5cclxuICAgICAgUHJlc2VudGVkIGZyYW1lczoge3N0YXRzLnByZXNlbnRlZH08YnIgLz5cclxuICAgICAgRHJvcHBlZCBmcmFtZXM6IHtzdGF0cy5kcm9wcGVkfTxiciAvPlxyXG4gICAgICBGcmFtZSB0aW1lOiB7c3RhdHMucHJvY2Vzc2luZ308YnIgLz5cclxuICAgICAgVmlld3BvcnQ6IHtzdGF0cy52aWV3cG9ydH08YnIgLz5cclxuICAgICAgUmVzb2x1dGlvbjoge3N0YXRzLnJlc29sdXRpb259PGJyIC8+XHJcbiAgICAgIEJ1ZmZlciBoZWFsdGg6IHtzdGF0cy5idWZmZXIgfHwgMH1cclxuICAgIDwvZGl2PlxyXG4gIHsvaWZ9XHJcbiAgPGRpdiBjbGFzcz1cInRvcCB6LTQwIGQtZmxleCBmbGV4LXJvdy1yZXZlcnNlXCI+XHJcbiAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmwgZm9udC1zaXplLTEyIHAtMTBcIiB0aXRsZT1cIktleWJpbmRzIFtgXVwiIGRhdGEtbmFtZT1cInRvZ2dsZVBvcG91dFwiIG9uOmNsaWNrPXsoKSA9PiAoc2hvd0tleWJpbmRzID0gdHJ1ZSl9PiBoZWxwX291dGxpbmUgPC9zcGFuPlxyXG4gIDwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJtaWRkbGUgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGZsZXgtZ3Jvdy0xIHotNDAgcG9zaXRpb24tcmVsYXRpdmVcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJwb3NpdGlvbi1hYnNvbHV0ZSB3LWZ1bGwgaC1mdWxsXCIgb246ZGJsY2xpY2s9e3RvZ2dsZUZ1bGxzY3JlZW59PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicGxheS1vdmVybGF5IHctZnVsbCBoLWZ1bGxcIiBvbjpjbGljaz17cGxheVBhdXNlfSAvPlxyXG4gICAgPC9kaXY+XHJcbiAgICB7I2lmIHZpZGVvcz8ubGVuZ3RoID4gMX1cclxuICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgZGF0YS1uYW1lPVwicGxheUxhc3RcIiBvbjpjbGljaz17cGxheUxhc3R9PiBza2lwX3ByZXZpb3VzIDwvc3Bhbj5cclxuICAgIHsvaWZ9XHJcbiAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiBkYXRhLW5hbWU9XCJyZXdpbmRcIiBvbjpjbGljaz17cmV3aW5kfT4gZmFzdF9yZXdpbmQgPC9zcGFuPlxyXG4gICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgZGF0YS1uYW1lPVwicGxheVBhdXNlXCIgb246Y2xpY2s9e3BsYXlQYXVzZX0+IHtlbmRlZCA/ICdyZXBsYXknIDogcGF1c2VkID8gJ3BsYXlfYXJyb3cnIDogJ3BhdXNlJ30gPC9zcGFuPlxyXG4gICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgZGF0YS1uYW1lPVwiZm9yd2FyZFwiIG9uOmNsaWNrPXtmb3J3YXJkfT4gZmFzdF9mb3J3YXJkIDwvc3Bhbj5cclxuICAgIHsjaWYgdmlkZW9zPy5sZW5ndGggPiAxfVxyXG4gICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiBkYXRhLW5hbWU9XCJwbGF5TmV4dFwiIG9uOmNsaWNrPXtwbGF5TmV4dH0+IHNraXBfbmV4dCA8L3NwYW4+XHJcbiAgICB7L2lmfVxyXG4gICAgPGRpdiBkYXRhLW5hbWU9XCJidWZmZXJpbmdEaXNwbGF5XCIgY2xhc3M9XCJwb3NpdGlvbi1hYnNvbHV0ZVwiIC8+XHJcbiAgPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cImJvdHRvbSBkLWZsZXggei00MFwiPlxyXG4gICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgdGl0bGU9XCJQbGF5L1BhdXNlIFtTcGFjZV1cIiBkYXRhLW5hbWU9XCJwbGF5UGF1c2VcIiBvbjpjbGljaz17cGxheVBhdXNlfT4ge2VuZGVkID8gJ3JlcGxheScgOiBwYXVzZWQgPyAncGxheV9hcnJvdycgOiAncGF1c2UnfSA8L3NwYW4+XHJcbiAgICB7I2lmIHZpZGVvcz8ubGVuZ3RoID4gMX1cclxuICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgdGl0bGU9XCJOZXh0IFtOXVwiIGRhdGEtbmFtZT1cInBsYXlOZXh0XCIgb246Y2xpY2s9e3BsYXlOZXh0fT4gc2tpcF9uZXh0IDwvc3Bhbj5cclxuICAgIHsvaWZ9XHJcbiAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IHctYXV0byB2b2x1bWVcIj5cclxuICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgdGl0bGU9XCJNdXRlIFtNXVwiIGRhdGEtbmFtZT1cInRvZ2dsZU11dGVcIiBvbjpjbGljaz17dG9nZ2xlTXV0ZX0+IHttdXRlZCA/ICd2b2x1bWVfb2ZmJyA6ICd2b2x1bWVfdXAnfSA8L3NwYW4+XHJcbiAgICAgIDxpbnB1dCBjbGFzcz1cImN0cmxcIiB0eXBlPVwicmFuZ2VcIiBtaW49XCIwXCIgbWF4PVwiMVwiIHN0ZXA9XCJhbnlcIiBkYXRhLW5hbWU9XCJzZXRWb2x1bWVcIiBiaW5kOnZhbHVlPXt2b2x1bWV9IHN0eWxlPVwiLS12YWx1ZToge3ZvbHVtZSAqIDEwMH0lXCIgLz5cclxuICAgIDwvZGl2PlxyXG4gICAgPCEtLSBzdmVsdGUtaWdub3JlIG1pc3NpbmctZGVjbGFyYXRpb24gLS0+XHJcbiAgICB7I2lmICdhdWRpb1RyYWNrcycgaW4gSFRNTFZpZGVvRWxlbWVudC5wcm90b3R5cGUgJiYgdmlkZW8/LmF1ZGlvVHJhY2tzPy5sZW5ndGggPiAxfVxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYXVkaW8tdHJhY2tzIGRyb3Bkb3duIGRyb3B1cCB3aXRoLWFycm93XCI+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgdGl0bGU9XCJBdWRpbyBUcmFja3NcIiBpZD1cImJhdWRpb1wiIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGRhdGEtbmFtZT1cImF1ZGlvQnV0dG9uXCI+XHJcbiAgICAgICAgICBxdWV1ZV9tdXNpY1xyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LWxlZnQgY3RybCBjdXN0b20tcmFkaW8gcC0xMCBwYi01IHRleHQtY2FwaXRhbGl6ZVwiIGFyaWEtbGFiZWxsZWRieT1cImJhdWRpb1wiIGRhdGEtbmFtZT1cInNlbGVjdEF1ZGlvXCI+XHJcbiAgICAgICAgICB7I2VhY2ggdmlkZW8uYXVkaW9UcmFja3MgYXMgdHJhY2t9XHJcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVwiYXVkaW8tcmFkaW8tc2V0XCIgdHlwZT1cInJhZGlvXCIgaWQ9XCJhdWRpby17dHJhY2suaWR9LXJhZGlvXCIgdmFsdWU9e3RyYWNrLmlkfSBjaGVja2VkPXt0cmFjay5lbmFibGVkfSAvPlxyXG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiYXVkaW8te3RyYWNrLmlkfS1yYWRpb1wiIG9uOmNsaWNrPXsoKSA9PiBzZWxlY3RBdWRpbyh0cmFjay5pZCl9IGNsYXNzPVwidGV4dC10cnVuY2F0ZSBwYi01XCI+XHJcbiAgICAgICAgICAgICAgeyh0cmFjay5sYW5ndWFnZSB8fCAoIU9iamVjdC52YWx1ZXModmlkZW8uYXVkaW9UcmFja3MpLnNvbWUodHJhY2sgPT4gdHJhY2subGFuZ3VhZ2UgPT09ICdlbmcnIHx8IHRyYWNrLmxhbmd1YWdlID09PSAnZW4nKSA/ICdlbmcnIDogdHJhY2subGFiZWwpKSArXHJcbiAgICAgICAgICAgICAgICAodHJhY2subGFiZWwgPyAnIC0gJyArIHRyYWNrLmxhYmVsIDogJycpfTwvbGFiZWw+XHJcbiAgICAgICAgICB7L2VhY2h9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgey9pZn1cclxuICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGwgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlclwiIGRhdGEtbmFtZT1cInByb2dyZXNzV3JhcHBlclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwidHNcIj57dG9UUyh0YXJnZXRUaW1lLCBkdXJhdGlvbiA+IDM2MDAgPyAyIDogMyl9PC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGwgaC1mdWxsIHBvc2l0aW9uLXJlbGF0aXZlXCI+XHJcbiAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICBjbGFzcz1cImN0cmwgdy1mdWxsIGgtZnVsbFwiXHJcbiAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxyXG4gICAgICAgICAgbWluPVwiMFwiXHJcbiAgICAgICAgICBtYXg9XCIxXCJcclxuICAgICAgICAgIHN0ZXA9XCJhbnlcIlxyXG4gICAgICAgICAgZGF0YS1uYW1lPVwic2V0UHJvZ3Jlc3NcIlxyXG4gICAgICAgICAgYmluZDp2YWx1ZT17cHJvZ3Jlc3N9XHJcbiAgICAgICAgICBvbjptb3VzZWRvd249e2hhbmRsZU1vdXNlRG93bn1cclxuICAgICAgICAgIG9uOm1vdXNldXA9e2hhbmRsZU1vdXNlVXB9XHJcbiAgICAgICAgICBvbjptb3VzZW1vdmU9e2hhbmRsZUhvdmVyfVxyXG4gICAgICAgICAgb246aW5wdXQ9e2hhbmRsZVByb2dyZXNzfVxyXG4gICAgICAgICAgb246dG91Y2hzdGFydD17aGFuZGxlTW91c2VEb3dufVxyXG4gICAgICAgICAgb246dG91Y2hlbmQ9e2hhbmRsZU1vdXNlVXB9XHJcbiAgICAgICAgICBzdHlsZT1cIi0tdmFsdWU6IHtwcm9ncmVzcyAqIDEwMH0lXCIgLz5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaG92ZXIgcG9zaXRpb24tYWJzb2x1dGUgZC1mbGV4IGZsZXgtY29sdW1uIGFsaWduLWl0ZW1zLWNlbnRlclwiIGJpbmQ6dGhpcz17aG92ZXJ9PlxyXG4gICAgICAgICAgPGltZyBhbHQ9XCJ0aHVtYm5haWxcIiBjbGFzcz1cInctZnVsbCBtYi01IHNoYWRvdy1sZ1wiIHNyYz17dGh1bWJuYWlsfSAvPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRzXCI+e3RvVFMoaG92ZXJUaW1lKX08L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJ0c1wiPnt0b1RTKGR1cmF0aW9uIC0gdGFyZ2V0VGltZSwgZHVyYXRpb24gPiAzNjAwID8gMiA6IDMpfTwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICB7I2lmIHN1YkhlYWRlcnM/Lmxlbmd0aH1cclxuICAgICAgPGRpdiBjbGFzcz1cInN1YnRpdGxlcyBkcm9wZG93biBkcm9wdXAgd2l0aC1hcnJvd1wiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgY3RybFwiIHRpdGxlPVwiU3VidGl0bGVzIFtDXVwiIGlkPVwiYmNhcFwiIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGRhdGEtbmFtZT1cImNhcHRpb25zQnV0dG9uXCI+XHJcbiAgICAgICAgICBzdWJ0aXRsZXNcclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCBjdHJsIGN1c3RvbS1yYWRpbyBwLTEwIHBiLTUgdGV4dC1jYXBpdGFsaXplIHctMjAwXCIgYXJpYS1sYWJlbGxlZGJ5PVwiYmNhcFwiIGRhdGEtbmFtZT1cInNlbGVjdENhcHRpb25zXCI+XHJcbiAgICAgICAgICA8aW5wdXQgbmFtZT1cInN1YnRpdGxlLXJhZGlvLXNldFwiIHR5cGU9XCJyYWRpb1wiIGlkPVwic3VidGl0bGUtb2ZmLXJhZGlvXCIgdmFsdWU9XCJvZmZcIiBjaGVja2VkPXtzdWJIZWFkZXJzICYmIHN1YnM/LmN1cnJlbnQgPT09IC0xfSAvPlxyXG4gICAgICAgICAgPGxhYmVsIGZvcj1cInN1YnRpdGxlLW9mZi1yYWRpb1wiIG9uOmNsaWNrPXsoKSA9PiBzdWJzLnNlbGVjdENhcHRpb25zKC0xKX0gY2xhc3M9XCJ0ZXh0LXRydW5jYXRlIHBiLTVcIj4gT0ZGIDwvbGFiZWw+XHJcbiAgICAgICAgICB7I2VhY2ggc3ViSGVhZGVycyBhcyB0cmFja31cclxuICAgICAgICAgICAgeyNpZiB0cmFja31cclxuICAgICAgICAgICAgICA8aW5wdXQgbmFtZT1cInN1YnRpdGxlLXJhZGlvLXNldFwiIHR5cGU9XCJyYWRpb1wiIGlkPVwic3VidGl0bGUte3RyYWNrLm51bWJlcn0tcmFkaW9cIiB2YWx1ZT17dHJhY2subnVtZXJ9IGNoZWNrZWQ9e3RyYWNrLm51bWJlciA9PT0gc3Vicy5jdXJyZW50fSAvPlxyXG4gICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJzdWJ0aXRsZS17dHJhY2subnVibWVyfS1yYWRpb1wiIG9uOmNsaWNrPXsoKSA9PiBzdWJzLnNlbGVjdENhcHRpb25zKHRyYWNrLm51bWJlcil9IGNsYXNzPVwidGV4dC10cnVuY2F0ZSBwYi01XCI+XHJcbiAgICAgICAgICAgICAgICB7KHRyYWNrLmxhbmd1YWdlIHx8ICghT2JqZWN0LnZhbHVlcyhzdWJzLmhlYWRlcnMpLnNvbWUoaGVhZGVyID0+IGhlYWRlci5sYW5ndWFnZSA9PT0gJ2VuZycgfHwgaGVhZGVyLmxhbmd1YWdlID09PSAnZW4nKSA/ICdlbmcnIDogdHJhY2sudHlwZSkpICtcclxuICAgICAgICAgICAgICAgICAgKHRyYWNrLm5hbWUgPyAnIC0gJyArIHRyYWNrLm5hbWUgOiAnJyl9XHJcbiAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgey9pZn1cclxuICAgICAgICAgIHsvZWFjaH1cclxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgc3RlcD1cIjAuMVwiIGJpbmQ6dmFsdWU9e3N1YkRlbGF5fSBjbGFzcz1cImZvcm0tY29udHJvbCB0ZXh0LXJpZ2h0IGZvcm0tY29udHJvbC1zbVwiIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgey9pZn1cclxuICAgIDwhLS0gc3ZlbHRlLWlnbm9yZSBtaXNzaW5nLWRlY2xhcmF0aW9uIC0tPlxyXG4gICAgeyNpZiAnUHJlc2VudGF0aW9uUmVxdWVzdCcgaW4gd2luZG93ICYmIGNhbkNhc3QgJiYgKCFjdXJyZW50IHx8IGN1cnJlbnQgaW5zdGFuY2VvZiBGaWxlIHx8IGN1cnJlbnQgaW5zdGFuY2VvZiBVUkxGaWxlKX1cclxuICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgdGl0bGU9XCJDYXN0IFZpZGVvIFtEXVwiIGRhdGEtbmFtZT1cInRvZ2dsZUNhc3RcIiBvbjpjbGljaz17dG9nZ2xlQ2FzdH0+XHJcbiAgICAgICAge3ByZXNlbnRhdGlvbkNvbm5lY3Rpb24gPyAnY2FzdF9jb25uZWN0ZWQnIDogJ2Nhc3QnfVxyXG4gICAgICA8L3NwYW4+XHJcbiAgICB7L2lmfVxyXG4gICAgeyNpZiAncGljdHVyZUluUGljdHVyZUVuYWJsZWQnIGluIGRvY3VtZW50fVxyXG4gICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiB0aXRsZT1cIlBvcG91dCBXaW5kb3cgW1BdXCIgZGF0YS1uYW1lPVwidG9nZ2xlUG9wb3V0XCIgb246Y2xpY2s9e3RvZ2dsZVBvcG91dH0+XHJcbiAgICAgICAge3BpcCA/ICdmZWF0dXJlZF92aWRlbycgOiAncGljdHVyZV9pbl9waWN0dXJlJ31cclxuICAgICAgPC9zcGFuPlxyXG4gICAgey9pZn1cclxuICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgY3RybFwiIHRpdGxlPVwiRnVsbHNjcmVlbiBbRl1cIiBkYXRhLW5hbWU9XCJ0b2dnbGVGdWxsc2NyZWVuXCIgb246Y2xpY2s9e3RvZ2dsZUZ1bGxzY3JlZW59PlxyXG4gICAgICB7aXNGdWxsc2NyZWVuID8gJ2Z1bGxzY3JlZW5fZXhpdCcgOiAnZnVsbHNjcmVlbid9XHJcbiAgICA8L3NwYW4+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PlxyXG5cclxuPHN0eWxlPlxyXG4gIC5iZy10cCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDAwYmI7XHJcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7XHJcbiAgfVxyXG4gIC5iZy10cCAuY2xvc2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgIHBhZGRpbmc6IHZhcigtLWFsZXJ0LWNsb3NlLXBhZGRpbmcpO1xyXG4gICAgbGluZS1oZWlnaHQ6IHZhcigtLWFsZXJ0LWNsb3NlLWxpbmUtaGVpZ2h0KTtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tYWxlcnQtY2xvc2UtZm9udC1zaXplKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICB9XHJcblxyXG4gIHZpZGVvIHtcclxuICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlO1xyXG4gIH1cclxuICAucGxheWVyIHtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuMnMgZWFzZTtcclxuICAgIGJhY2tncm91bmQ6ICMwMDA7XHJcbiAgfVxyXG5cclxuICAucGlwIDpnbG9iYWwoY2FudmFzKSB7XHJcbiAgICBsZWZ0OiA5OS45JSAhaW1wb3J0YW50O1xyXG4gICAgLypoYWNrIHRvIGhpZGUgdGhlIGNhbnZhcyBidXQgc3RpbGwga2VlcCBpdCB1cGRhdGluZyovXHJcbiAgfVxyXG5cclxuICAubWF0ZXJpYWwtaWNvbnMge1xyXG4gICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICBwYWRkaW5nOiAxLjJyZW07XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcblxyXG4gIC5pbW1lcnNlZCB7XHJcbiAgICBjdXJzb3I6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAuaW1tZXJzZWQgLm1pZGRsZSAuY3RybCxcclxuICAuaW1tZXJzZWQgLnRvcCxcclxuICAuaW1tZXJzZWQgLmJvdHRvbSB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSBpbWdbc3JjPScgJ10sXHJcbiAgOmZ1bGxzY3JlZW4gLmN0cmxbZGF0YS1uYW1lPSd0b2dnbGVDYXN0J10sXHJcbiAgOmZ1bGxzY3JlZW4gLmN0cmxbZGF0YS1uYW1lPSd0b2dnbGVQb3BvdXQnXSB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAucGlwIHZpZGVvIHtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICB9XHJcblxyXG4gIC5taWRkbGUgZGl2W2RhdGEtbmFtZT0nYnVmZmVyaW5nRGlzcGxheSddIHtcclxuICAgIGJvcmRlcjogNHB4IHNvbGlkICNmZmZmZmYwMDtcclxuICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IDAuNXMgb3BhY2l0eSBlYXNlO1xyXG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdygwIDAgOHB4ICMwMDApO1xyXG4gIH1cclxuXHJcbiAgLmJ1ZmZlcmluZyAubWlkZGxlIGRpdltkYXRhLW5hbWU9J2J1ZmZlcmluZ0Rpc3BsYXknXSB7XHJcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICBAa2V5ZnJhbWVzIHNwaW4ge1xyXG4gICAgMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuXHJcbiAgICAxMDAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5taWRkbGUgLmN0cmwge1xyXG4gICAgZm9udC1zaXplOiA0cmVtO1xyXG4gICAgbWFyZ2luOiAycmVtO1xyXG4gICAgei1pbmRleDogMztcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKHBvaW50ZXI6IG5vbmUpLCAocG9pbnRlcjogY29hcnNlKSB7XHJcbiAgICAubWlkZGxlIC5jdHJsIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxuICAgIC5taWRkbGUgLnBsYXktb3ZlcmxheSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm1pZGRsZSAuY3RybFtkYXRhLW5hbWU9J3BsYXlQYXVzZSddIHtcclxuICAgIGZvbnQtc2l6ZTogNnJlbTtcclxuICB9XHJcblxyXG4gIC5taWRkbGUgLmN0cmwsXHJcbiAgLmJvdHRvbSAuY3RybDpob3ZlcixcclxuICAuYm90dG9tIC50czpob3ZlcixcclxuICAuYm90dG9tIC5ob3ZlciAudHMge1xyXG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdygwIDAgOHB4ICMwMDApO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCByZ2JhKDAsIDAsIDAsIDAuOCksIHJnYmEoMCwgMCwgMCwgMC40KSAyNSUsIHJnYmEoMCwgMCwgMCwgMC4yKSA1MCUsIHJnYmEoMCwgMCwgMCwgMC4xKSA3NSUsIHRyYW5zcGFyZW50KTtcclxuICAgIHRyYW5zaXRpb246IDAuNXMgb3BhY2l0eSBlYXNlO1xyXG4gIH1cclxuICAudG9wIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC44KSwgcmdiYSgwLCAwLCAwLCAwLjQpIDI1JSwgcmdiYSgwLCAwLCAwLCAwLjIpIDUwJSwgcmdiYSgwLCAwLCAwLCAwLjEpIDc1JSwgdHJhbnNwYXJlbnQpO1xyXG4gICAgdHJhbnNpdGlvbjogMC41cyBvcGFjaXR5IGVhc2U7XHJcbiAgfVxyXG5cclxuICAuY3RybCB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPSdyYW5nZSddIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPSdyYW5nZSddOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XHJcbiAgICBoZWlnaHQ6IDNweDtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tb3otcmFuZ2UtdHJhY2sge1xyXG4gICAgaGVpZ2h0OiAzcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci10aHVtYiB7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICB3aWR0aDogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICNmZjNjMDA7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICBhcHBlYXJhbmNlOiBub25lO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZTtcclxuICB9XHJcbiAgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1vei1yYW5nZS10aHVtYiB7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICB3aWR0aDogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICNmZjNjMDA7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICBhcHBlYXJhbmNlOiBub25lO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ106aG92ZXI6Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcclxuICAgIGhlaWdodDogMTJweDtcclxuICAgIHdpZHRoOiAxMnB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTRweDtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ106aG92ZXI6Oi1tb3otcmFuZ2UtdGh1bWIge1xyXG4gICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgd2lkdGg6IDEycHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNHB4O1xyXG4gIH1cclxuXHJcbiAgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1vei1yYW5nZS10cmFjayB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICNmZjNjMDAgdmFyKC0tdmFsdWUpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgdmFyKC0tdmFsdWUpKTtcclxuICB9XHJcbiAgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjZmYzYzAwIHZhcigtLXZhbHVlKSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIHZhcigtLXZhbHVlKSk7XHJcbiAgfVxyXG4gIC5ib3R0b20gLnZvbHVtZTpob3ZlciBpbnB1dFt0eXBlPSdyYW5nZSddIHtcclxuICAgIHdpZHRoOiA1dnc7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSAudm9sdW1lIGlucHV0W3R5cGU9J3JhbmdlJ10ge1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSBbZGF0YS1uYW1lPSdzZXRQcm9ncmVzcyddIH4gLmhvdmVyIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRvcDogMS4ycmVtO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTEwMCUpO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgdHJhbnNpdGlvbjogMC4ycyBvcGFjaXR5IGVhc2U7XHJcbiAgfVxyXG5cclxuICAuYm90dG9tIFtkYXRhLW5hbWU9J3NldFByb2dyZXNzJ106aG92ZXIgfiAuaG92ZXIge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcblxyXG4gIC5ib3R0b20gZGl2W2RhdGEtbmFtZT0ncHJvZ3Jlc3NXcmFwcGVyJ10gLnRzIHtcclxuICAgIGNvbG9yOiAjZWNlY2VjO1xyXG4gICAgZm9udC1zaXplOiAxLjhyZW0gIWltcG9ydGFudDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBsaW5lLWhlaWdodDogdmFyKC0tYmFzZS1saW5lLWhlaWdodCk7XHJcbiAgICBwYWRkaW5nOiAwIDEuMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKHBvaW50ZXI6IG5vbmUpLCAocG9pbnRlcjogY29hcnNlKSB7XHJcbiAgICAuYm90dG9tIC5jdHJsW2RhdGEtbmFtZT0ncGxheVBhdXNlJ10sXHJcbiAgICAuYm90dG9tIC5jdHJsW2RhdGEtbmFtZT0ncGxheU5leHQnXSxcclxuICAgIC5ib3R0b20gLnZvbHVtZSxcclxuICAgIC5ib3R0b20gLmN0cmxbZGF0YS1uYW1lPSd0b2dnbGVGdWxsc2NyZWVuJ10ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBtYXJnaW4tbGVmdDogMC40cmVtO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAtMC41cmVtO1xyXG4gICAgZmlsdGVyOiBpbnZlcnQoMC44NCk7XHJcbiAgICBwYWRkaW5nLXRvcDogMnJlbTtcclxuICB9XHJcblxyXG4gIC8qIFJhZGlvIGRlYmxvYXQgZm9yIGhhbGZtb29uICovXHJcbiAgLmN1c3RvbS1yYWRpbyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgLmN1c3RvbS1yYWRpbyBsYWJlbCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gIC5jdXN0b20tcmFkaW8gaW5wdXRbdHlwZT0ncmFkaW8nXTpob3ZlciArIGxhYmVsOmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1sbS1yYWRpby1iZy1jb2xvci1ob3Zlcik7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWxtLXJhZGlvLWJvcmRlci1jb2xvci1ob3Zlcik7XHJcbiAgfVxyXG4gIC5jdXN0b20tcmFkaW8gaW5wdXRbdHlwZT0ncmFkaW8nXTpmb2N1cyArIGxhYmVsOmJlZm9yZSB7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWxtLXJhZGlvLWJvcmRlci1jb2xvci1mb2N1cyk7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IHZhcigtLWxtLXJhZGlvLWJveC1zaGFkb3ctZm9jdXMpO1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiB2YXIoLS1sbS1yYWRpby1ib3gtc2hhZG93LWZvY3VzKTtcclxuICAgIGJveC1zaGFkb3c6IHZhcigtLWxtLXJhZGlvLWJveC1zaGFkb3ctZm9jdXMpO1xyXG4gIH1cclxuICAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZCArIGxhYmVsOmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1sbS1yYWRpby1iZy1jb2xvci1jaGVja2VkKTtcclxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tbG0tcmFkaW8tYm9yZGVyLWNvbG9yLWNoZWNrZWQpO1xyXG4gIH1cclxuICAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZDpmb2N1cyArIGxhYmVsOmJlZm9yZSB7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWxtLXJhZGlvLWJvcmRlci1jb2xvci1jaGVja2VkLWZvY3VzKTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogdmFyKC0tbG0tcmFkaW8tYm94LXNoYWRvdy1jaGVja2VkLWZvY3VzKTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogdmFyKC0tbG0tcmFkaW8tYm94LXNoYWRvdy1jaGVja2VkLWZvY3VzKTtcclxuICAgIGJveC1zaGFkb3c6IHZhcigtLWxtLXJhZGlvLWJveC1zaGFkb3ctY2hlY2tlZC1mb2N1cyk7XHJcbiAgfVxyXG4gIC5kYXJrLW1vZGUgLmN1c3RvbS1yYWRpbyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZG0tcmFkaW8tYmctY29sb3IpO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1kbS1yYWRpby1ib3JkZXItY29sb3IpO1xyXG4gIH1cclxuICAuZGFyay1tb2RlIC5jdXN0b20tcmFkaW8gaW5wdXRbdHlwZT0ncmFkaW8nXTpob3ZlciArIGxhYmVsOmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kbS1yYWRpby1iZy1jb2xvci1ob3Zlcik7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWRtLXJhZGlvLWJvcmRlci1jb2xvci1ob3Zlcik7XHJcbiAgfVxyXG4gIC5kYXJrLW1vZGUgLmN1c3RvbS1yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddOmZvY3VzICsgbGFiZWw6YmVmb3JlIHtcclxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tZG0tcmFkaW8tYm9yZGVyLWNvbG9yLWZvY3VzKTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogdmFyKC0tZG0tcmFkaW8tYm94LXNoYWRvdy1mb2N1cyk7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IHZhcigtLWRtLXJhZGlvLWJveC1zaGFkb3ctZm9jdXMpO1xyXG4gICAgYm94LXNoYWRvdzogdmFyKC0tZG0tcmFkaW8tYm94LXNoYWRvdy1mb2N1cyk7XHJcbiAgfVxyXG4gIC5kYXJrLW1vZGUgLmN1c3RvbS1yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZG0tcmFkaW8tYmctY29sb3ItY2hlY2tlZCk7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWRtLXJhZGlvLWJvcmRlci1jb2xvci1jaGVja2VkKTtcclxuICB9XHJcbiAgLmRhcmstbW9kZSAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZDpmb2N1cyArIGxhYmVsOmJlZm9yZSB7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWRtLXJhZGlvLWJvcmRlci1jb2xvci1jaGVja2VkLWZvY3VzKTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogdmFyKC0tZG0tcmFkaW8tYm94LXNoYWRvdy1jaGVja2VkLWZvY3VzKTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogdmFyKC0tZG0tcmFkaW8tYm94LXNoYWRvdy1jaGVja2VkLWZvY3VzKTtcclxuICAgIGJveC1zaGFkb3c6IHZhcigtLWRtLXJhZGlvLWJveC1zaGFkb3ctY2hlY2tlZC1mb2N1cyk7XHJcbiAgfVxyXG4gIC5jdXN0b20tcmFkaW8gbGFiZWw6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgdG9wOiB2YXIoLS1yYWRpby1jaGVja21hcmstdG9wKTtcclxuICAgIGxlZnQ6IHZhcigtLXJhZGlvLWNoZWNrbWFyay1sZWZ0KTtcclxuICAgIHdpZHRoOiB2YXIoLS1yYWRpby1jaGVja21hcmstd2lkdGgtaGVpZ2h0KTtcclxuICAgIGhlaWdodDogdmFyKC0tcmFkaW8tY2hlY2ttYXJrLXdpZHRoLWhlaWdodCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1sbS1yYWRpby1jaGVja21hcmstY29sb3IpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tcmFkaW8tY2hlY2ttYXJrLWJvcmRlci1yYWRpdXMpO1xyXG4gIH1cclxuICAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZCArIGxhYmVsOmFmdGVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106ZGlzYWJsZWQgKyBsYWJlbCB7XHJcbiAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gIH1cclxuICAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106ZGlzYWJsZWQgKyBsYWJlbDpiZWZvcmUsXHJcbiAgLmN1c3RvbS1yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddOmhvdmVyOmRpc2FibGVkICsgbGFiZWw6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxtLXJhZGlvLWJnLWNvbG9yKTtcclxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tbG0tcmFkaW8tYm9yZGVyLWNvbG9yKTtcclxuICB9XHJcbiAgLmN1c3RvbS1yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddOmRpc2FibGVkOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUsXHJcbiAgLmN1c3RvbS1yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddOmhvdmVyOmRpc2FibGVkOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbG0tcmFkaW8tYmctY29sb3ItY2hlY2tlZCk7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWxtLXJhZGlvLWJvcmRlci1jb2xvci1jaGVja2VkKTtcclxuICB9XHJcbiAgLmRhcmstbW9kZSAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106ZGlzYWJsZWQgKyBsYWJlbDpiZWZvcmUsXHJcbiAgLmRhcmstbW9kZSAuY3VzdG9tLXJhZGlvIGlucHV0W3R5cGU9J3JhZGlvJ106aG92ZXI6ZGlzYWJsZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZG0tcmFkaW8tYmctY29sb3IpO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1kbS1yYWRpby1ib3JkZXItY29sb3IpO1xyXG4gIH1cclxuICAuZGFyay1tb2RlIC5jdXN0b20tcmFkaW8gaW5wdXRbdHlwZT0ncmFkaW8nXTpkaXNhYmxlZDpjaGVja2VkICsgbGFiZWw6YmVmb3JlLFxyXG4gIC5kYXJrLW1vZGUgLmN1c3RvbS1yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddOmhvdmVyOmRpc2FibGVkOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZG0tcmFkaW8tYmctY29sb3ItY2hlY2tlZCk7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWRtLXJhZGlvLWJvcmRlci1jb2xvci1jaGVja2VkKTtcclxuICB9XHJcbjwvc3R5bGU+XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyeUJFLE1BQU0sMENBQUMsQ0FBQyxBQUNOLFVBQVUsQ0FBRSxTQUFTLENBQ3JCLGVBQWUsQ0FBRSxLQUFLLElBQUksQ0FBQyxBQUM3QixDQUFDLEFBQ0Qsb0JBQU0sQ0FBQyxNQUFNLDRCQUFDLENBQUMsQUFDYixRQUFRLENBQUUsUUFBUSxDQUNsQixHQUFHLENBQUUsQ0FBQyxDQUNOLEtBQUssQ0FBRSxDQUFDLENBQ1IsTUFBTSxDQUFFLE9BQU8sQ0FDZixLQUFLLENBQUUsT0FBTyxDQUNkLE9BQU8sQ0FBRSxJQUFJLHFCQUFxQixDQUFDLENBQ25DLFdBQVcsQ0FBRSxJQUFJLHlCQUF5QixDQUFDLENBQzNDLFNBQVMsQ0FBRSxJQUFJLHVCQUF1QixDQUFDLENBQ3ZDLGdCQUFnQixDQUFFLFdBQVcsQ0FDN0IsWUFBWSxDQUFFLFdBQVcsQUFDM0IsQ0FBQyxBQUVELEtBQUssMENBQUMsQ0FBQyxBQUNMLFVBQVUsQ0FBRSxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQUFDbEMsQ0FBQyxBQUNELE9BQU8sMENBQUMsQ0FBQyxBQUNQLFdBQVcsQ0FBRSxJQUFJLENBQ2pCLFdBQVcsQ0FBRSxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxVQUFVLENBQ2pELFVBQVUsQ0FBRSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDM0IsVUFBVSxDQUFFLElBQUksQUFDbEIsQ0FBQyxBQUVELGtCQUFJLENBQUMsQUFBUSxNQUFNLEFBQUUsQ0FBQyxBQUNwQixJQUFJLENBQUUsS0FBSyxDQUFDLFVB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RyxDQUFDLElBQUksQ0FBQyxBQUNuQyxDQUFDLEFBRUQsT0FBTywwQ0FBQyxDQUFDLEFBQ1AsVUFBVSxDQUFFLGdCQUFnQixFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUM1SSxVQUFVLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEFBQy9CLENBQUMsQUFDRCxJQUFJLDBDQUFDLENBQUMsQUFDSixVQUFVLENBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQy9JLFVBQVUsQ0FBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQUFD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*/
.alert.svelte-1qjuqpq{display:block !important;animation:svelte-1qjuqpq-fly-in 0.4s cubic-bezier(0.25, 0.8, 0.25, 1)}@keyframes svelte-1qjuqpq-fly-in{0%{right:-50rem}100%{right:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5zdGFsbFByb21wdC5zdmVsdGUiLCJzb3VyY2VzIjpbIkluc3RhbGxQcm9tcHQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcbiAgbGV0IGRlZmVycmVkUHJvbXB0XHJcblxyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmVpbnN0YWxscHJvbXB0JywgZSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgIGRlZmVycmVkUHJvbXB0ID0gZVxyXG4gIH0pXHJcbiAgYXN5bmMgZnVuY3Rpb24gcHJvbXB0SW5zdGFsbCgpIHtcclxuICAgIGRlZmVycmVkUHJvbXB0LnByb21wdCgpXHJcbiAgICBjb25zdCB7IG91dGNvbWUgfSA9IGF3YWl0IGRlZmVycmVkUHJvbXB0LnVzZXJDaG9pY2VcclxuICAgIGlmIChvdXRjb21lID09PSAnYWNjZXB0ZWQnKSB7XHJcbiAgICAgIGRlZmVycmVkUHJvbXB0ID0gbnVsbFxyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBkaXNtaXNzKCkge1xyXG4gICAgZGVmZXJyZWRQcm9tcHQgPSBudWxsXHJcbiAgfVxyXG48L3NjcmlwdD5cclxuXHJcbnsjaWYgZGVmZXJyZWRQcm9tcHR9XHJcbiAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LXN1Y2Nlc3MgZmlsbGVkLWRtIHNob3dcIiBvbjpjbGljaz17cHJvbXB0SW5zdGFsbH0+XHJcbiAgICA8aDQgY2xhc3M9XCJhbGVydC1oZWFkaW5nXCI+SW5zdGFsbDwvaDQ+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiY2xvc2VcIiB0eXBlPVwiYnV0dG9uXCIgb246Y2xpY2s9e2Rpc21pc3N9PjxzcGFuPsOXPC9zcGFuPjwvYnV0dG9uPlxyXG4gICAgQ2xpY2sgaGVyZSB0byBpbnN0YWxsIHRoZSBhcHAgZm9yIG1vcmUgZmVhdHVyZXMhXHJcbiAgPC9kaXY+XHJcbnsvaWZ9XHJcblxyXG48c3R5bGU+XHJcbiAgLmFsZXJ0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbiAgICBhbmltYXRpb246IGZseS1pbiAwLjRzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xyXG4gIH1cclxuXHJcbiAgQGtleWZyYW1lcyBmbHktaW4ge1xyXG4gICAgMCUge1xyXG4gICAgICByaWdodDogLTUwcmVtO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgIHJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuPC9zdHlsZT5cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCRSxNQUFNLGVBQUMsQ0FBQyxBQUNOLE9BQU8sQ0FBRSxLQUFLLENBQUMsVUFBVSxDQUN6QixTQUFTLENBQUUscUJBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQUFDekQsQ0FBQyxBQUVELFdBQVcscUJBQU8sQ0FBQyxBQUNqQixFQUFFLEFBQUMsQ0FBQyxBQUNGLEtBQUssQ0FBRSxNQUFNLEFBQ2YsQ0FBQyxBQUNELElBQUksQUFBQyxDQUFDLEFBQ0osS0FBSyxDQUFFLENBQUMsQUFDVixDQUFDLEFBQ0gsQ0FBQyJ9*/
.pointer.svelte-1hv3hh2{cursor:pointer}.hover.svelte-1hv3hh2:hover{color:#fff !important}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjZW50RmlsZXMuc3ZlbHRlIiwic291cmNlcyI6WyJSZWNlbnRGaWxlcy5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XHJcbiAgaW1wb3J0IHsgZ2V0LCBzZXQsIGNyZWF0ZVN0b3JlIH0gZnJvbSAnaWRiLWtleXZhbCdcclxuXHJcbiAgY29uc3Qgc3VwcG9ydGVkID0gJ0ZpbGVTeXN0ZW1GaWxlSGFuZGxlJyBpbiB3aW5kb3dcclxuXHJcbiAgY29uc3QgYXN5bmNTb21lID0gYXN5bmMgKGFyciwgcHJlZGljYXRlKSA9PiB7XHJcbiAgICBmb3IgKGNvbnN0IGUgb2YgYXJyKSB7XHJcbiAgICAgIGlmIChhd2FpdCBwcmVkaWNhdGUoZSkpIHJldHVybiB0cnVlXHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2VcclxuICB9XHJcbiAgY29uc3QgYXN5bmNGaWx0ZXIgPSBhc3luYyAoYXJyLCBwcmVkaWNhdGUpID0+IHtcclxuICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbChhcnIubWFwKHByZWRpY2F0ZSkpXHJcblxyXG4gICAgcmV0dXJuIGFyci5maWx0ZXIoKF92LCBpbmRleCkgPT4gcmVzdWx0c1tpbmRleF0pXHJcbiAgfVxyXG5cclxuICBsZXQgZGIgPSBudWxsXHJcbiAgYXN5bmMgZnVuY3Rpb24gc2V0SGFuZGxlcygpIHtcclxuICAgIGhhbmRsZXMgPSAoYXdhaXQgZ2V0KCdyZWNlbnRzJywgZGIpKSB8fCBbXVxyXG4gIH1cclxuICBleHBvcnQgZnVuY3Rpb24gaW5pdERiKGFwcE5hbWUpIHtcclxuICAgIGRiID0gY3JlYXRlU3RvcmUoYXBwTmFtZSwgJ3JlY2VudHMnKVxyXG4gIH1cclxuXHJcbiAgbGV0IGhhbmRsZXMgPSBbXVxyXG5cclxuICAvLyB0aGlzIGlzIGNsdW5reSwgYnV0IGRhdGFUcmFuc2ZlciBkb2Vzbid0IHBlcnNpc3QgYWNyb3NzIGFzeW5jIGNhbGxzLi4uLiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81NTY1ODg1MVxyXG4gIGV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVSZWNlbnRzKGZpbGVzKSB7XHJcbiAgICBpZiAoc3VwcG9ydGVkICYmIGRiICYmIGZpbGVzPy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgcHJvbWlzZXMgPSBmaWxlcy5tYXAoZmlsZSA9PiAoZmlsZSBpbnN0YW5jZW9mIEZpbGVTeXN0ZW1GaWxlSGFuZGxlID8gZmlsZSA6IGZpbGUuZ2V0QXNGaWxlU3lzdGVtSGFuZGxlKCkpKVxyXG4gICAgICBjb25zdCBuZXdIYW5kbGVzID0gYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpXHJcbiAgICAgIGF3YWl0IHNldEhhbmRsZXMoKVxyXG4gICAgICBoYW5kbGVzID0gYXdhaXQgYXN5bmNGaWx0ZXIoaGFuZGxlcywgYXN5bmMgaGFuZGxlID0+IHtcclxuICAgICAgICByZXR1cm4gIShhd2FpdCBhc3luY1NvbWUobmV3SGFuZGxlcywgcmVjZW50ID0+IHJlY2VudC5pc1NhbWVFbnRyeShoYW5kbGUpKSlcclxuICAgICAgfSlcclxuICAgICAgaGFuZGxlcy51bnNoaWZ0KC4uLm5ld0hhbmRsZXMpXHJcbiAgICAgIGhhbmRsZXMubGVuZ3RoID0gTWF0aC5taW4oaGFuZGxlcy5sZW5ndGgsIDE1KVxyXG4gICAgICBzZXQoJ3JlY2VudHMnLCBoYW5kbGVzLCBkYilcclxuICAgIH1cclxuICB9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHNjcmlwdD5cclxuICBleHBvcnQgbGV0IGZpbGVzID0gbnVsbFxyXG4gIGxldCByZWNlbnRzID0gW11cclxuICBzZXRIYW5kbGVzKCkudGhlbigoKSA9PiB7XHJcbiAgICByZWNlbnRzID0gaGFuZGxlc1xyXG4gIH0pXHJcbiAgYXN5bmMgZnVuY3Rpb24gc2VsZWN0RmlsZShoYW5kbGUpIHtcclxuICAgIHVwZGF0ZVJlY2VudHMoW2hhbmRsZV0pXHJcbiAgICBhd2FpdCBoYW5kbGUucmVxdWVzdFBlcm1pc3Npb24oeyBtb2RlOiAncmVhZCcgfSlcclxuICAgIGZpbGVzID0gW2F3YWl0IGhhbmRsZS5nZXRGaWxlKCldXHJcbiAgfVxyXG5cclxuICBleHBvcnQgbGV0IGhhbmRsZVBvcHVwID0gKCkgPT4ge31cclxuPC9zY3JpcHQ+XHJcblxyXG48ZGl2IGNsYXNzPVwiaC1mdWxsIG15LTAgYmctdmVyeS1kYXJrXCI+XHJcbiAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBoLWZ1bGwgcC0yMFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInAtMjAgZC1mbGV4IGZsZXgtY29sdW1uIGgtZnVsbFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiZm9udC13ZWlnaHQtYm9sZCBmb250LXNpemUtMjQgcC01XCI+UmVjZW50IEZpbGVzPC9kaXY+XHJcbiAgICAgIDxociBjbGFzcz1cInctZnVsbCBteS0xNVwiIC8+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJvdmVyZmxvdy15LWF1dG9cIj5cclxuICAgICAgICB7I2lmIHN1cHBvcnRlZH1cclxuICAgICAgICAgIHsjZWFjaCByZWNlbnRzIGFzIHJlY2VudH1cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtNSBwb2ludGVyIHRleHQtbXV0ZWQgaG92ZXJcIiBvbjpjbGljaz17c2VsZWN0RmlsZShyZWNlbnQpfT5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWwtNVwiPntyZWNlbnQubmFtZX08L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICB7OmVsc2V9XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtbC01IHAtNVwiPllvdXIgcmVjZW50IGZpbGVzIHdpbGwgc2hvdyB1cCBoZXJlITwvZGl2PlxyXG4gICAgICAgICAgey9lYWNofVxyXG4gICAgICAgIHs6ZWxzZSBpZiB3aW5kb3cuY2hyb21lfVxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgWW91ciBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZWNlbnQgZmlsZXMsIGJ1dCBpdCBjb3VsZCEgVmlzaXQgPGNvZGUgY2xhc3M9XCJjb2RlXCI+Y2hyb21lOi8vZmxhZ3M8L2NvZGU+IGFuZCBlbmFibGUgPGNvZGUgY2xhc3M9XCJjb2RlXCI+I2ZpbGUtc3lzdGVtLWFjY2Vzcy1hcGkhPC9jb2RlPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgezplbHNlfVxyXG4gICAgICAgICAgPGRpdj5Zb3VyIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlY2VudCBmaWxlcy48L2Rpdj5cclxuICAgICAgICB7L2lmfVxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInB5LTIwIHBvaW50ZXIgdGV4dC1tdXRlZCBob3ZlciBtdC1hdXRvXCIgb246Y2xpY2s9e2hhbmRsZVBvcHVwfT5Zb3UgY2FuIGFsc28gZHJhZy1kcm9wIG9yIHBhc3RlIGZpbGVzLCBvciBjbGljayBoZXJlIHRvIHNlbGVjdCBzb21lITwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PlxyXG5cclxuPHN0eWxlPlxyXG4gIC5wb2ludGVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgLmhvdmVyOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG48L3N0eWxlPlxyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0ZFLFFBQVEsZUFBQyxDQUFDLEFBQ1IsTUFBTSxDQUFFLE9BQU8sQUFDakIsQ0FBQyxBQUNELHFCQUFNLE1BQU0sQUFBQyxDQUFDLEFBQ1osS0FBSyxDQUFFLElBQUksQ0FBQyxVQUFVLEFBQ3hCLENBQUMifQ==*/
.svelte-1memrrp{user-select:none}.sticky-alerts.svelte-1memrrp{--sticky-alerts-top:auto;bottom:1rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxyXG4gIGltcG9ydCBQbGF5ZXIgZnJvbSAnLi9tb2R1bGVzL1BsYXllci5zdmVsdGUnXHJcbiAgaW1wb3J0IEluc3RhbGxQcm9tcHQgZnJvbSAnLi9tb2R1bGVzL0luc3RhbGxQcm9tcHQuc3ZlbHRlJ1xyXG4gIGltcG9ydCB7IGZpbGVQb3B1cCwgaGFuZGxlSXRlbXMsIGdldFNlYXJjaEZpbGVzLCBnZXRMYXVuY2hGaWxlcyB9IGZyb20gJy4uLy4uL3NoYXJlZC9pbnB1dEhhbmRsZXIuanMnXHJcbiAgaW1wb3J0IHsgVVJMRmlsZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9VUkxGaWxlLmpzJ1xyXG4gIGltcG9ydCBSZWNlbnRGaWxlcywgeyBpbml0RGIgfSBmcm9tICcuLi8uLi9zaGFyZWQvUmVjZW50RmlsZXMuc3ZlbHRlJ1xyXG5cclxuICBpbml0RGIoJ3ZpZGVvLXBsYXllcicpXHJcblxyXG4gIGxldCBuYW1lID0gJydcclxuICBsZXQgZmlsZXMgPSBbXVxyXG5cclxuICAvLyBtaXN0YWtlcyBoYXZlIGJlZW4gbWFkZVxyXG4gIGlmIChuYXZpZ2F0b3Iuc2VydmljZVdvcmtlcj8uY29udHJvbGxlcj8uc2NyaXB0VVJMLmVuZHNXaXRoKCdzZXJ2ZXItd29ya2VyLmpzJykpIHtcclxuICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlYWR5LnRoZW4ocmVnID0+IHtcclxuICAgICAgcmVnLnVucmVnaXN0ZXIoKS50aGVuKCgpID0+IGxvY2F0aW9uLnJlbG9hZCgpKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8vIGxvYWRpbmcgZmlsZXNcclxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVJbnB1dCh7IGRhdGFUcmFuc2ZlciwgY2xpcGJvYXJkRGF0YSB9KSB7XHJcbiAgICBjb25zdCBpdGVtcyA9IGNsaXBib2FyZERhdGE/Lml0ZW1zIHx8IGRhdGFUcmFuc2Zlcj8uaXRlbXNcclxuICAgIGlmIChpdGVtcykge1xyXG4gICAgICBoYW5kbGVGaWxlcyhhd2FpdCBoYW5kbGVJdGVtcyhpdGVtcywgWyd2aWRlbycsICdzdWJ0aXRsZSddKSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmICgnbGF1bmNoUXVldWUnIGluIHdpbmRvdykge1xyXG4gICAgZ2V0TGF1bmNoRmlsZXMoKS50aGVuKGhhbmRsZUZpbGVzKVxyXG4gIH1cclxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVQb3B1cCgpIHtcclxuICAgIGlmICghZmlsZXMubGVuZ3RoKSB7XHJcbiAgICAgIGhhbmRsZUZpbGVzKGF3YWl0IGZpbGVQb3B1cChbJ3ZpZGVvJywgJ3N1YnRpdGxlJ10pKVxyXG4gICAgfVxyXG4gIH1cclxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVGaWxlcyhuZXdmaWxlcykge1xyXG4gICAgaWYgKG5ld2ZpbGVzPy5sZW5ndGgpIHtcclxuICAgICAgZmlsZXMgPSBmaWxlcy5jb25jYXQoXHJcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgICAgICAgICBuZXdmaWxlcy5tYXAoYXN5bmMgZmlsZSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChmaWxlIGluc3RhbmNlb2YgRmlsZSkgcmV0dXJuIGZpbGVcclxuICAgICAgICAgICAgY29uc3QgdXJsZmlsZSA9IG5ldyBVUkxGaWxlKGZpbGUpXHJcbiAgICAgICAgICAgIGlmICghKChhd2FpdCB1cmxmaWxlLnJlYWR5KSBpbnN0YW5jZW9mIEVycm9yKSkge1xyXG4gICAgICAgICAgICAgIHJldHVybiB1cmxmaWxlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGZpbGVcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgKVxyXG4gICAgICApXHJcbiAgICB9XHJcbiAgfVxyXG4gIGhhbmRsZUZpbGVzKGdldFNlYXJjaEZpbGVzKFsndmlkZW8nLCAnc3VidGl0bGUnXSkpXHJcbjwvc2NyaXB0PlxyXG5cclxuPGRpdiBjbGFzcz1cInN0aWNreS1hbGVydHMgZC1mbGV4IGZsZXgtY29sdW1uLXJldmVyc2VcIj5cclxuICA8SW5zdGFsbFByb21wdCAvPlxyXG48L2Rpdj5cclxuPGRpdiBjbGFzcz1cInBhZ2Utd3JhcHBlclwiPlxyXG4gIHsjaWYgIWZpbGVzLmxlbmd0aH1cclxuICAgIDxSZWNlbnRGaWxlcyBiaW5kOmZpbGVzIHtoYW5kbGVQb3B1cH0gLz5cclxuICB7OmVsc2V9XHJcbiAgICA8UGxheWVyIGJpbmQ6ZmlsZXMgYmluZDpuYW1lIC8+XHJcbiAgey9pZn1cclxuPC9kaXY+XHJcblxyXG48c3ZlbHRlOmhlYWQ+XHJcbiAgPHRpdGxlPntuYW1lIHx8ICdWaWRlbyBQbGF5ZXInfTwvdGl0bGU+XHJcbjwvc3ZlbHRlOmhlYWQ+XHJcblxyXG48c3ZlbHRlOndpbmRvdyBvbjpkcm9wfHByZXZlbnREZWZhdWx0PXtoYW5kbGVJbnB1dH0gb246ZHJhZ292ZXJ8cHJldmVudERlZmF1bHQgb246cGFzdGV8cHJldmVudERlZmF1bHQ9e2hhbmRsZUlucHV0fSAvPlxyXG5cclxuPHN0eWxlPlxyXG4gICoge1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgfVxyXG4gIC5zdGlja3ktYWxlcnRzIHtcclxuICAgIC0tc3RpY2t5LWFsZXJ0cy10b3A6IGF1dG87XHJcbiAgICBib3R0b206IDFyZW07XHJcbiAgfVxyXG48L3N0eWxlPlxyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0VFLGVBQUUsQ0FBQyxBQUNELFdBQVcsQ0FBRSxJQUFJLEFBQ25CLENBQUMsQUFDRCxjQUFjLGVBQUMsQ0FBQyxBQUNkLG1CQUFtQixDQUFFLElBQUksQ0FDekIsTUFBTSxDQUFFLElBQUksQUFDZCxDQUFDIn0=*/

/*# sourceMappingURL=bundle.css.map*/