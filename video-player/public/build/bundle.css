.player.svelte-602xl4.svelte-602xl4.svelte-602xl4{position:absolute;display:flex;flex-direction:column;justify-content:center;align-content:center;color:#ececec;user-select:none;font-family:Roboto, Arial, Helvetica, sans-serif;z-index:10;will-change:width, right, bottom, position, display;bottom:2rem;right:2rem;width:25%;height:auto;transition:width 0.2s ease;overflow:hidden;background:#000}.player.svelte-602xl4.svelte-602xl4.svelte-602xl4:not(.miniplayer){bottom:0;right:0;position:relative;width:100%;height:100%;transition:none !important}.player.svelte-602xl4:not(.miniplayer) .middle.svelte-602xl4.svelte-602xl4,.player.svelte-602xl4:not(.miniplayer) .bottom.svelte-602xl4.svelte-602xl4{display:flex}video.svelte-602xl4.svelte-602xl4.svelte-602xl4{position:relative;flex:0 1 auto;z-index:-1;width:100%;height:100%;background:#191c209d;backdrop-filter:blur(10px)}.player.svelte-602xl4:not(.miniplayer) video.svelte-602xl4.svelte-602xl4{position:absolute;background:none}.pip.svelte-602xl4.svelte-602xl4.svelte-602xl4{background:#000}.pip.svelte-602xl4 canvas{left:99.9% !important}.material-icons.svelte-602xl4.svelte-602xl4.svelte-602xl4{font-size:2.2rem;padding:1.2rem;transition:all 0.2s ease;display:flex}.immersed.svelte-602xl4.svelte-602xl4.svelte-602xl4{cursor:none}.immersed.svelte-602xl4 .middle .ctrl.svelte-602xl4.svelte-602xl4,.immersed.svelte-602xl4 .bottom.svelte-602xl4.svelte-602xl4{opacity:0}.bottom.svelte-602xl4 img[src=' '].svelte-602xl4.svelte-602xl4,video[src=''].svelte-602xl4.svelte-602xl4.svelte-602xl4:not([poster]),.svelte-602xl4:fullscreen .ctrl[data-name='toggleCast'].svelte-602xl4.svelte-602xl4,.svelte-602xl4:fullscreen .ctrl[data-name='togglePopout'].svelte-602xl4.svelte-602xl4{display:none !important}.pip.svelte-602xl4 video.svelte-602xl4.svelte-602xl4{visibility:hidden}.top.svelte-602xl4.svelte-602xl4.svelte-602xl4{background:linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4) 25%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.1) 75%, transparent);display:none;transition:0.5s opacity ease;border-width:0;border-top-width:1px;border-image-slice:1;border-style:solid;border-image-source:linear-gradient(90deg, #e5204c var(--download), rgba(0, 0, 0, 0.8) var(--download));grid-template-columns:1fr auto 1fr}.middle.svelte-602xl4.svelte-602xl4.svelte-602xl4{height:100%;flex:1;display:none;flex-direction:row;position:relative;justify-content:center;align-items:center}.middle.svelte-602xl4 div[data-name='bufferingDisplay'].svelte-602xl4.svelte-602xl4{border:4px solid #ffffff00;border-top:4px solid #fff;border-radius:50%;width:40px;height:40px;animation:svelte-602xl4-spin 1s linear infinite;opacity:0;transition:0.5s opacity ease;position:absolute;filter:drop-shadow(0 0 8px #000)}.buffering.svelte-602xl4 .middle div[data-name='bufferingDisplay'].svelte-602xl4.svelte-602xl4{opacity:1 !important}@keyframes svelte-602xl4-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.middle.svelte-602xl4 .ctrl[data-name='ppToggle'].svelte-602xl4.svelte-602xl4{position:absolute;width:100%;height:100%;display:block;z-index:2}.middle.svelte-602xl4 .ctrl.svelte-602xl4.svelte-602xl4{font-size:4rem;margin:2rem;z-index:3;display:none}@media(pointer: none), (pointer: coarse){.middle.svelte-602xl4 .ctrl.svelte-602xl4.svelte-602xl4{display:flex}}.middle.svelte-602xl4 .ctrl[data-name='playPause'].svelte-602xl4.svelte-602xl4{font-size:6rem}.middle.svelte-602xl4 .ctrl.svelte-602xl4.svelte-602xl4,.bottom.svelte-602xl4 .ctrl.svelte-602xl4.svelte-602xl4:hover{filter:drop-shadow(0 0 8px #000)}.bottom.svelte-602xl4.svelte-602xl4.svelte-602xl4{background:linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4) 25%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.1) 75%, transparent);display:none;transition:0.5s opacity ease}.bottom.svelte-602xl4 .ctrl.svelte-602xl4.svelte-602xl4{cursor:pointer}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4{-webkit-appearance:none;background:transparent;margin:0;cursor:pointer;height:8px}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4:focus{outline:none}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4::-webkit-slider-runnable-track{height:3px}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4::-webkit-slider-thumb{height:0;width:0;border-radius:50%;background:#ff3c00;-webkit-appearance:none;appearance:none;transition:all 0.1s ease}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4:hover::-webkit-slider-thumb{height:12px;width:12px;margin-top:-4px}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4{--volume:0%}input[type='range'].svelte-602xl4.svelte-602xl4.svelte-602xl4::-webkit-slider-runnable-track{background:linear-gradient(90deg, #ff3c00 var(--value), rgba(255, 255, 255, 0.2) var(--value))}.bottom.svelte-602xl4 .volume.svelte-602xl4.svelte-602xl4{display:flex;width:auto}.bottom.svelte-602xl4 .volume:hover input[type='range'].svelte-602xl4.svelte-602xl4{width:5vw;display:inline-block;transition:all 0.1s ease;margin-right:1rem}.bottom.svelte-602xl4 .volume input[type='range'].svelte-602xl4.svelte-602xl4{width:0;transition:all 0.1s ease;height:100%}.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4.svelte-602xl4,.bottom.svelte-602xl4 div[data-name='progressWrapper'].svelte-602xl4.svelte-602xl4,.bottom.svelte-602xl4 div[data-name='progressWrapper'].svelte-602xl4>div.svelte-602xl4{display:flex;width:100%;height:100%;position:relative}.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4~img.svelte-602xl4,.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4.svelte-602xl4::before{pointer-events:none;opacity:0;position:absolute;transform:translate(-50%, -100%);font-family:Roboto, Arial, Helvetica, sans-serif;white-space:nowrap;align-self:center;left:var(--progress);font-weight:600;transition:0.2s opacity ease}.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4~img.svelte-602xl4{top:-2rem;width:150px}.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4.svelte-602xl4::before{top:0.5rem;content:attr(data-elapsed);color:#ececec}.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4:active~img.svelte-602xl4,.bottom.svelte-602xl4 input[type='range'][data-name='setProgress'].svelte-602xl4.svelte-602xl4:active::before{opacity:1}.bottom.svelte-602xl4 div[data-name='progressWrapper'] .ts.svelte-602xl4.svelte-602xl4{color:#ececec;font-size:1.8rem !important;white-space:nowrap;align-self:center;cursor:default;line-height:var(--base-line-height);padding:0 1.2rem;font-weight:600}@media(pointer: none), (pointer: coarse){.bottom.svelte-602xl4 .ctrl[data-name='playPause'].svelte-602xl4.svelte-602xl4,.bottom.svelte-602xl4 .ctrl[data-name='playNext'].svelte-602xl4.svelte-602xl4,.bottom.svelte-602xl4 .volume.svelte-602xl4.svelte-602xl4,.bottom.svelte-602xl4 .ctrl[data-name='toggleFullscreen'].svelte-602xl4.svelte-602xl4{display:none}}.svelte-602xl4.svelte-602xl4.svelte-602xl4::-webkit-inner-spin-button{opacity:1;margin-left:0.4rem;margin-right:-0.5rem;filter:invert(0.84);padding-top:2rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGxheWVyLnN2ZWx0ZSIsInNvdXJjZXMiOlsiUGxheWVyLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxyXG4gIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnXHJcbiAgaW1wb3J0IHsgc2V0RmlsZSB9IGZyb20gJy4vc2VydmVyLmpzJ1xyXG4gIGltcG9ydCBQZWVyIGZyb20gJy4uL2xpYi9wZWVyLmpzJ1xyXG4gIGltcG9ydCAnLi9GaWxlLmpzJ1xyXG4gIGltcG9ydCBTdWJ0aXRsZXMgZnJvbSAnLi9zdWJ0aXRsZXMuanMnXHJcbiAgaW1wb3J0IHsgdG9UUywgdmlkZW9SeCwgcmVxdWVzdFRpbWVvdXQsIGNhbmNlbFRpbWVvdXQgfSBmcm9tICcuL3V0aWwuanMnXHJcbiAgaW1wb3J0IGFuaXRvbXlzY3JpcHQgZnJvbSAnYW5pdG9teXNjcmlwdCdcclxuICBpbXBvcnQgeyBVUkxGaWxlIH0gZnJvbSAnLi9GaWxlLmpzJ1xyXG5cclxuICAkOiB1cGRhdGVGaWxlcyhmaWxlcylcclxuICBleHBvcnQgbGV0IGZpbGVzID0gW11cclxuICBleHBvcnQgbGV0IG5hbWUgPSBudWxsXHJcbiAgbGV0IHNyYyA9IG51bGxcclxuICBsZXQgdmlkZW8gPSBudWxsXHJcbiAgbGV0IGNvbnRhaW5lciA9IG51bGxcclxuICBsZXQgY3VycmVudCA9IG51bGxcclxuICBsZXQgc3VicyA9IG51bGxcclxuICBsZXQgZHVyYXRpb24gPSAwLjFcclxuICBsZXQgcGF1c2VkID0gdHJ1ZVxyXG4gIGxldCBtdXRlZCA9IGZhbHNlXHJcbiAgbGV0IHdhc1BhdXNlZCA9IHRydWVcclxuICBsZXQgdGh1bWJuYWlsID0gJyAnXHJcbiAgbGV0IHZpZGVvcyA9IFtdXHJcbiAgbGV0IGltbWVyc2VkID0gZmFsc2VcclxuICBsZXQgYnVmZmVyaW5nID0gZmFsc2VcclxuICBsZXQgaW1tZXJzZVRpbWVvdXQgPSBudWxsXHJcbiAgbGV0IGJ1ZmZlclRpbWVvdXQgPSBudWxsXHJcbiAgbGV0IHN1YkhlYWRlcnMgPSBudWxsXHJcbiAgbGV0IHBpcCA9IGZhbHNlXHJcbiAgbGV0IHByZXNlbnRhdGlvblJlcXVlc3QgPSBudWxsXHJcbiAgbGV0IHByZXNlbnRhdGlvbkNvbm5lY3Rpb24gPSBudWxsXHJcbiAgbGV0IGNhbkNhc3QgPSBmYWxzZVxyXG4gIGxldCBpc0Z1bGxzY3JlZW4gPSBmYWxzZVxyXG4gIGxldCBlbmRlZCA9IGZhbHNlXHJcbiAgbGV0IHZvbHVtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd2b2x1bWUnKSB8fCAxXHJcbiAgJDogbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3ZvbHVtZScsIHZvbHVtZSlcclxuICBvbk1vdW50KCgpID0+IHtcclxuICAgIGlmICgncmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaycgaW4gSFRNTFZpZGVvRWxlbWVudC5wcm90b3R5cGUpIHtcclxuICAgICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignbG9hZGVkZGF0YScsICgpID0+IHtcclxuICAgICAgICB2aWRlby5mcHMgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgIGxldCBsYXN0bWV0YSA9IG51bGxcclxuICAgICAgICAgIGxldCB3YXNwYXVzZWQgPSBmYWxzZVxyXG4gICAgICAgICAgbGV0IGNvdW50ID0gMFxyXG5cclxuICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZUZyYW1lcyhub3csIG1ldGFkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChjb3VudCkge1xyXG4gICAgICAgICAgICAgIC8vIHJlc29sdmUgb24gMm5kIGZyYW1lLCAxc3QgZnJhbWUgbWlnaHQgYmUgYSBjdXQtb2ZmXHJcbiAgICAgICAgICAgICAgaWYgKGxhc3RtZXRhKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtc2JmID0gKG1ldGFkYXRhLm1lZGlhVGltZSAtIGxhc3RtZXRhLm1lZGlhVGltZSkgLyAobWV0YWRhdGEucHJlc2VudGVkRnJhbWVzIC0gbGFzdG1ldGEucHJlc2VudGVkRnJhbWVzKVxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmF3RlBTID0gKDEgLyBtc2JmKS50b0ZpeGVkKDMpXHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIGFjY3VyYXRlIGZvciBtcDQsIG1rdiBpcyBhIGZldyBtcyBvZmZcclxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Lm5hbWUuZW5kc1dpdGgoJy5ta3YnKSkge1xyXG4gICAgICAgICAgICAgICAgICBpZiAocmF3RlBTIDwgMjUgJiYgcmF3RlBTID4gMjIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKDIzLjk3NilcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyYXdGUFMgPCAzMSAmJiByYXdGUFMgPiAyOCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoMjkuOTcpXHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmF3RlBTIDwgNjIgJiYgcmF3RlBTID4gNTgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKDU5Ljk0KVxyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmF3RlBTKSAvLyBzbXRoIHdlbnQgVkVSWSB3cm9uZ1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICByZXNvbHZlKHJhd0ZQUylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh3YXNwYXVzZWQpIHBhdXNlZCA9IHRydWVcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGFzdG1ldGEgPSBtZXRhZGF0YVxyXG4gICAgICAgICAgICAgICAgdmlkZW8ucmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjayhoYW5kbGVGcmFtZXMpXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGNvdW50KytcclxuICAgICAgICAgICAgICBpZiAocGF1c2VkKSB7XHJcbiAgICAgICAgICAgICAgICB3YXNwYXVzZWQgPSBwYXVzZWRcclxuICAgICAgICAgICAgICAgIHBhdXNlZCA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHZpZGVvLnJlcXVlc3RWaWRlb0ZyYW1lQ2FsbGJhY2soaGFuZGxlRnJhbWVzKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKGhhbmRsZUZyYW1lcylcclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmlkZW8uZnBzID0gMjMuOTc2XHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbiAgaWYgKCdQcmVzZW50YXRpb25SZXF1ZXN0JyBpbiB3aW5kb3cpIHtcclxuICAgIGNvbnN0IGhhbmRsZUF2YWlsYWJpbGl0eSA9IGF2YWwgPT4ge1xyXG4gICAgICBjYW5DYXN0ID0gISFhdmFsXHJcbiAgICB9XHJcbiAgICBwcmVzZW50YXRpb25SZXF1ZXN0ID0gbmV3IFByZXNlbnRhdGlvblJlcXVlc3QoWydidWlsZC9jYXN0Lmh0bWwnXSlcclxuICAgIHByZXNlbnRhdGlvblJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcignY29ubmVjdGlvbmF2YWlsYWJsZScsIGUgPT4gaW5pdENhc3QoZSkpXHJcbiAgICBuYXZpZ2F0b3IucHJlc2VudGF0aW9uLmRlZmF1bHRSZXF1ZXN0ID0gcHJlc2VudGF0aW9uUmVxdWVzdFxyXG4gICAgcHJlc2VudGF0aW9uUmVxdWVzdC5nZXRBdmFpbGFiaWxpdHkoKS50aGVuKGF2YWwgPT4ge1xyXG4gICAgICBhdmFsLm9uY2hhbmdlID0gZSA9PiBoYW5kbGVBdmFpbGFiaWxpdHkoZS50YXJnZXQudmFsdWUpXHJcbiAgICAgIGhhbmRsZUF2YWlsYWJpbGl0eShhdmFsLnZhbHVlKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8vZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnQgaXNuJ3QgcmVhY3RpdmVcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdmdWxsc2NyZWVuY2hhbmdlJywgKCkgPT4ge1xyXG4gICAgaXNGdWxsc2NyZWVuID0gISFkb2N1bWVudC5mdWxsc2NyZWVuRWxlbWVudFxyXG4gIH0pXHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZUhlYWRlcnMoKSB7XHJcbiAgICBzdWJIZWFkZXJzID0gc3Vicz8uaGVhZGVyc1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlRmlsZXMoZmlsZXMpIHtcclxuICAgIGlmIChmaWxlcyAmJiBmaWxlcy5sZW5ndGgpIHtcclxuICAgICAgdmlkZW9zID0gZmlsZXMuZmlsdGVyKGZpbGUgPT4gdmlkZW9SeC50ZXN0KGZpbGUubmFtZSkpXHJcbiAgICAgIGlmICh2aWRlb3M/Lmxlbmd0aCkge1xyXG4gICAgICAgIGlmICghY3VycmVudCkge1xyXG4gICAgICAgICAgaGFuZGxlQ3VycmVudCh2aWRlb3NbMF0pXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHN1YnMuZmlsZXMgPSBmaWxlcyB8fCBbXVxyXG4gICAgICAgICAgc3Vicy5maW5kU3VidGl0bGVGaWxlcyhjdXJyZW50KVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gaGFuZGxlQ3VycmVudChmaWxlKSB7XHJcbiAgICBpZiAoZmlsZSkge1xyXG4gICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKGN1cnJlbnQ/Lm5hbWUpIC8vIGVoIGp1c3QgaW4gY2FzZVxyXG4gICAgICBpZiAoZmlsZSBpbnN0YW5jZW9mIEZpbGUpIHtcclxuICAgICAgICBpZiAoZmlsZS5uYW1lLmVuZHNXaXRoKCcubWt2JykpIHtcclxuICAgICAgICAgIHNldEZpbGUoZmlsZSlcclxuICAgICAgICAgIHNyYyA9IGBwbGF5ZXIvJHtmaWxlLm5hbWV9YFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzZXRGaWxlKG51bGwpXHJcbiAgICAgICAgICBzcmMgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN1cnJlbnQgPSBmaWxlXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgaWYgKCFmaWxlLm5hbWUuZW5kc1dpdGgoJy5ta3YnKSkgcmV0dXJuIHJlamVjdCgpXHJcbiAgICAgICAgICAvLyBjaGVjayBpZiB0aGUgbWVkaWEgY2FuIGJlIGZldGNoZWQgW0NPUlMsIG9yaWdpbiwgdG9rZW4gZXRjXVxyXG4gICAgICAgICAgZmV0Y2goZmlsZS51cmwsIHsgbWV0aG9kOiAnSEVBRCcgfSlcclxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgICAgICBpZiAoIXJlcy5vaykge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KClcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2gocmVqZWN0KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAudGhlbihhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVybGZpbGUgPSBuZXcgVVJMRmlsZShmaWxlKVxyXG4gICAgICAgICAgICBhd2FpdCB1cmxmaWxlLnJlYWR5XHJcbiAgICAgICAgICAgIHNldEZpbGUodXJsZmlsZSlcclxuICAgICAgICAgICAgY3VycmVudCA9IHVybGZpbGVcclxuICAgICAgICAgICAgc3JjID0gYHBsYXllci8ke3VybGZpbGUubmFtZX1gXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKCgpID0+IHtcclxuICAgICAgICAgICAgc2V0RmlsZShudWxsKVxyXG4gICAgICAgICAgICBzcmMgPSBmaWxlLnVybFxyXG4gICAgICAgICAgICBjdXJyZW50ID0gZmlsZVxyXG4gICAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICAgICBpbml0U3VicygpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBpbml0U3VicygpIHtcclxuICAgIGlmIChzdWJzKSBzdWJzLmRlc3Ryb3koKVxyXG4gICAgc3VicyA9IG5ldyBTdWJ0aXRsZXModmlkZW8sIGZpbGVzLCBjdXJyZW50LCBoYW5kbGVIZWFkZXJzKVxyXG4gIH1cclxuXHJcbiAgbGV0IHN1YkRlbGF5ID0gMFxyXG4gICQ6IHVwZGF0ZURlbGF5KHN1YkRlbGF5KVxyXG4gIGZ1bmN0aW9uIHVwZGF0ZURlbGF5KGRlbGF5KSB7XHJcbiAgICBpZiAoc3Vicz8ucmVuZGVyZXIpIHN1YnMucmVuZGVyZXIudGltZU9mZnNldCA9IGRlbGF5XHJcbiAgfVxyXG5cclxuICBsZXQgY3VycmVudFRpbWUgPSAwXHJcbiAgJDogcHJvZ3Jlc3MgPSBjdXJyZW50VGltZSAvIGR1cmF0aW9uXHJcbiAgJDogdGFyZ2V0VGltZSA9ICghcGF1c2VkICYmIGN1cnJlbnRUaW1lKSB8fCB0YXJnZXRUaW1lXHJcbiAgZnVuY3Rpb24gaGFuZGxlTW91c2VEb3duKHsgdGFyZ2V0IH0pIHtcclxuICAgIHdhc1BhdXNlZCA9IHBhdXNlZFxyXG4gICAgcGF1c2VkID0gdHJ1ZVxyXG4gICAgdGFyZ2V0VGltZSA9IHRhcmdldC52YWx1ZSAqIGR1cmF0aW9uXHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGhhbmRsZU1vdXNlVXAoKSB7XHJcbiAgICBwYXVzZWQgPSB3YXNQYXVzZWRcclxuICAgIGN1cnJlbnRUaW1lID0gdGFyZ2V0VGltZVxyXG4gIH1cclxuICBmdW5jdGlvbiBoYW5kbGVQcm9ncmVzcyh7IHRhcmdldCB9KSB7XHJcbiAgICB0YXJnZXRUaW1lID0gdGFyZ2V0LnZhbHVlICogZHVyYXRpb25cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHBsYXlQYXVzZSgpIHtcclxuICAgIHBhdXNlZCA9ICFwYXVzZWRcclxuICB9XHJcbiAgZnVuY3Rpb24gdG9nZ2xlTXV0ZSgpIHtcclxuICAgIG11dGVkID0gIW11dGVkXHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHBsYXlOZXh0KCkge1xyXG4gICAgaGFuZGxlQ3VycmVudCh2aWRlb3NbKHZpZGVvcy5pbmRleE9mKGN1cnJlbnQpICsgMSkgJSB2aWRlb3MubGVuZ3RoXSlcclxuICB9XHJcbiAgZnVuY3Rpb24gcGxheUxhc3QoKSB7XHJcbiAgICBjb25zdCBpbmRleCA9IHZpZGVvcy5pbmRleE9mKGN1cnJlbnQpXHJcbiAgICBoYW5kbGVDdXJyZW50KHZpZGVvc1tpbmRleCA9PT0gMCA/IHZpZGVvcy5sZW5ndGggLSAxIDogaW5kZXggLSAxXSlcclxuICB9XHJcbiAgZnVuY3Rpb24gdG9nZ2xlRnVsbHNjcmVlbigpIHtcclxuICAgIGRvY3VtZW50LmZ1bGxzY3JlZW5FbGVtZW50ID8gZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4oKSA6IGNvbnRhaW5lci5yZXF1ZXN0RnVsbHNjcmVlbigpXHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHNlZWsodGltZSkge1xyXG4gICAgaWYgKHRpbWUgPT09IDg1ICYmIGN1cnJlbnRUaW1lIDwgMTApIHtcclxuICAgICAgdGFyZ2V0VGltZSA9IGN1cnJlbnRUaW1lID0gOTBcclxuICAgIH0gZWxzZSBpZiAodGltZSA9PT0gODUgJiYgZHVyYXRpb24gLSBjdXJyZW50VGltZSA8IDkwKSB7XHJcbiAgICAgIHRhcmdldFRpbWUgPSBjdXJyZW50VGltZSA9IGR1cmF0aW9uXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0YXJnZXRUaW1lID0gY3VycmVudFRpbWUgKz0gdGltZVxyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBmb3J3YXJkKCkge1xyXG4gICAgc2VlaygyKVxyXG4gIH1cclxuICBmdW5jdGlvbiByZXdpbmQoKSB7XHJcbiAgICBzZWVrKC0yKVxyXG4gIH1cclxuICBmdW5jdGlvbiBzZWxlY3RBdWRpbyhpZCkge1xyXG4gICAgaWYgKGlkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgZm9yIChjb25zdCB0cmFjayBvZiB2aWRlby5hdWRpb1RyYWNrcykge1xyXG4gICAgICAgIHRyYWNrLmVuYWJsZWQgPSB0cmFjay5pZCA9PT0gaWRcclxuICAgICAgfVxyXG4gICAgICBzZWVrKC0wLjUpIC8vIHN0dXBpZCBmaXggYmVjYXVzZSB2aWRlbyBmcmVlemVzIHVwIHdoZW4gY2hhZ2luZyB0cmFja3NcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gdG9nZ2xlQ2FzdCgpIHtcclxuICAgIGlmICh2aWRlby5yZWFkeVN0YXRlKSB7XHJcbiAgICAgIGlmIChwcmVzZW50YXRpb25Db25uZWN0aW9uKSB7XHJcbiAgICAgICAgcHJlc2VudGF0aW9uQ29ubmVjdGlvbj8udGVybWluYXRlKClcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcmVzZW50YXRpb25SZXF1ZXN0LnN0YXJ0KClcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBhc3luYyBmdW5jdGlvbiB0b2dnbGVQb3BvdXQoKSB7XHJcbiAgICBpZiAodmlkZW8ucmVhZHlTdGF0ZSkge1xyXG4gICAgICBhd2FpdCB2aWRlby5mcHNcclxuICAgICAgaWYgKCFzdWJzPy5yZW5kZXJlcikge1xyXG4gICAgICAgIHZpZGVvICE9PSBkb2N1bWVudC5waWN0dXJlSW5QaWN0dXJlRWxlbWVudCA/IHZpZGVvLnJlcXVlc3RQaWN0dXJlSW5QaWN0dXJlKCkgOiBkb2N1bWVudC5leGl0UGljdHVyZUluUGljdHVyZSgpXHJcbiAgICAgICAgcGlwID0gIWRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50ICYmICFkb2N1bWVudC5waWN0dXJlSW5QaWN0dXJlRWxlbWVudC5pZCkge1xyXG4gICAgICAgICAgLy8gb25seSBleGl0IGlmIHBpcCBpcyB0aGUgY3VzdG9tIG9uZSwgZWxzZSBvdmVyd3JpdGUgZXhpc3RpbmcgcGlwIHdpdGggY3VzdG9tXHJcbiAgICAgICAgICBkb2N1bWVudC5leGl0UGljdHVyZUluUGljdHVyZSgpXHJcbiAgICAgICAgICBwaXAgPSAhIWRvY3VtZW50LnBpY3R1cmVJblBpY3R1cmVFbGVtZW50XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IGNhbnZhc1ZpZGVvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKVxyXG4gICAgICAgICAgY29uc3QgeyBzdHJlYW0sIGRlc3Ryb3kgfSA9IGF3YWl0IGdldEJ1cm5JbigpXHJcbiAgICAgICAgICBjYW52YXNWaWRlby5zcmNPYmplY3QgPSBzdHJlYW1cclxuICAgICAgICAgIGNhbnZhc1ZpZGVvLm9ubG9hZGVkbWV0YWRhdGEgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNhbnZhc1ZpZGVvLnBsYXkoKVxyXG4gICAgICAgICAgICBjYW52YXNWaWRlb1xyXG4gICAgICAgICAgICAgIC5yZXF1ZXN0UGljdHVyZUluUGljdHVyZSgpXHJcbiAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcGlwID0gISFkb2N1bWVudC5waWN0dXJlSW5QaWN0dXJlRWxlbWVudFxyXG4gICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgLmNhdGNoKGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgcGlwID0gISFkb2N1bWVudC5waWN0dXJlSW5QaWN0dXJlRWxlbWVudFxyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgVG8gQnVybiBJbiBTdWJ0aXRsZXMgJyArIGUpXHJcbiAgICAgICAgICAgICAgICBkZXN0cm95KClcclxuICAgICAgICAgICAgICAgIGNhbnZhc1ZpZGVvLnJlbW92ZSgpXHJcbiAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNhbnZhc1ZpZGVvLm9ubGVhdmVwaWN0dXJlaW5waWN0dXJlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBkZXN0cm95KClcclxuICAgICAgICAgICAgY2FudmFzVmlkZW8ucmVtb3ZlKClcclxuICAgICAgICAgICAgcGlwID0gISFkb2N1bWVudC5waWN0dXJlSW5QaWN0dXJlRWxlbWVudFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBoYW5kbGVLZXlkb3duKHsga2V5IH0pIHtcclxuICAgIHN3aXRjaCAoa2V5KSB7XHJcbiAgICAgIGNhc2UgJyAnOlxyXG4gICAgICAgIHBsYXlQYXVzZSgpXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAnbic6XHJcbiAgICAgICAgcGxheU5leHQoKVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ20nOlxyXG4gICAgICAgIG11dGVkID0gIW11dGVkXHJcbiAgICAgICAgYnJlYWtcclxuICAgICAgY2FzZSAncCc6XHJcbiAgICAgICAgdG9nZ2xlUG9wb3V0KClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdmJzpcclxuICAgICAgICB0b2dnbGVGdWxsc2NyZWVuKClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdzJzpcclxuICAgICAgICBzZWVrKDg1KVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ2MnOlxyXG4gICAgICAgIHRvZ2dsZUNhc3QoKVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ0Fycm93TGVmdCc6XHJcbiAgICAgICAgcmV3aW5kKClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdBcnJvd1JpZ2h0JzpcclxuICAgICAgICBmb3J3YXJkKClcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlICdBcnJvd1VwJzpcclxuICAgICAgICB2b2x1bWUgPSBNYXRoLm1pbigxLCB2b2x1bWUgKyAwLjA1KVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgJ0Fycm93RG93bic6XHJcbiAgICAgICAgdm9sdW1lID0gTWF0aC5tYXgoMCwgdm9sdW1lIC0gMC4wNSlcclxuICAgICAgICBicmVha1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gZ2V0QnVybkluKG5vU3Vicykge1xyXG4gICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJylcclxuICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnLCB7IGFscGhhOiBmYWxzZSB9KVxyXG4gICAgbGV0IGxvb3AgPSBudWxsXHJcbiAgICBsZXQgZGVzdHJveSA9IG51bGxcclxuICAgIGNhbnZhcy53aWR0aCA9IHZpZGVvLnZpZGVvV2lkdGhcclxuICAgIGNhbnZhcy5oZWlnaHQgPSB2aWRlby52aWRlb0hlaWdodFxyXG5cclxuICAgIGlmICgncmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaycgaW4gSFRNTFZpZGVvRWxlbWVudC5wcm90b3R5cGUpIHtcclxuICAgICAgY29uc3QgcmVuZGVyRnJhbWUgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UodmlkZW8sIDAsIDApXHJcbiAgICAgICAgaWYgKCFub1N1YnMpIGNvbnRleHQuZHJhd0ltYWdlKHN1YnMucmVuZGVyZXI/LmNhbnZhcywgMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KVxyXG4gICAgICAgIGxvb3AgPSB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKHJlbmRlckZyYW1lKVxyXG4gICAgICB9XHJcbiAgICAgIGxvb3AgPSB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKHJlbmRlckZyYW1lKVxyXG4gICAgICBkZXN0cm95ID0gKCkgPT4ge1xyXG4gICAgICAgIHZpZGVvLmNhbmNlbFZpZGVvRnJhbWVDYWxsYmFjayhsb29wKVxyXG4gICAgICAgIGNhbnZhcy5yZW1vdmUoKVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBmb3IgdGhlIGZpcmVmb3ggaWRpb3RzXHJcbiAgICAgIGNvbnN0IGZwcyA9IGF3YWl0IHZpZGVvLmZwc1xyXG4gICAgICBjb25zdCByZW5kZXJGcmFtZSA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb250ZXh0LmRyYXdJbWFnZSh2aWRlbywgMCwgMClcclxuICAgICAgICBpZiAoIW5vU3VicykgY29udGV4dC5kcmF3SW1hZ2Uoc3Vicy5yZW5kZXJlcj8uY2FudmFzLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpXHJcbiAgICAgICAgbG9vcCA9IHJlcXVlc3RUaW1lb3V0KHJlbmRlckZyYW1lLCA1MDAgLyBmcHMpIC8vIHJlcXVlc3QgeDIgZnBzIGZvciBzbW9vdGhuZXNzXHJcbiAgICAgIH1cclxuICAgICAgbG9vcCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJGcmFtZSlcclxuICAgICAgZGVzdHJveSA9ICgpID0+IHtcclxuICAgICAgICBjYW5jZWxUaW1lb3V0KGxvb3ApXHJcbiAgICAgICAgY2FudmFzLnJlbW92ZSgpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7IHN0cmVhbTogY2FudmFzLmNhcHR1cmVTdHJlYW0oKSwgZGVzdHJveSB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBpbml0Q2FzdChldmVudCkge1xyXG4gICAgY29uc3QgcGVlciA9IG5ldyBQZWVyKHsgcG9saXRlOiB0cnVlIH0pXHJcblxyXG4gICAgcHJlc2VudGF0aW9uQ29ubmVjdGlvbiA9IGV2ZW50LmNvbm5lY3Rpb25cclxuICAgIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigndGVybWluYXRlJywgKCkgPT4ge1xyXG4gICAgICBwcmVzZW50YXRpb25Db25uZWN0aW9uID0gbnVsbFxyXG4gICAgICBwaXAgPSBmYWxzZVxyXG4gICAgICBwZWVyID0gbnVsbFxyXG4gICAgfSlcclxuXHJcbiAgICBwZWVyLnNpZ25hbGluZ1BvcnQub25tZXNzYWdlID0gKHsgZGF0YSB9KSA9PiB7XHJcbiAgICAgIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24uc2VuZChkYXRhKVxyXG4gICAgfVxyXG5cclxuICAgIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsICh7IGRhdGEgfSkgPT4ge1xyXG4gICAgICBwZWVyLnNpZ25hbGluZ1BvcnQucG9zdE1lc3NhZ2UoZGF0YSlcclxuICAgIH0pXHJcblxyXG4gICAgcGVlci5kYy5vbm9wZW4gPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGlmIChwZWVyICYmIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24pIHtcclxuICAgICAgICBwaXAgPSB0cnVlXHJcbiAgICAgICAgY29uc3QgdHJhY2tzID0gW11cclxuICAgICAgICBjb25zdCB2aWRlb3N0cmVhbSA9IHZpZGVvLmNhcHR1cmVTdHJlYW0oKVxyXG4gICAgICAgIGlmICh0cnVlKSB7XHJcbiAgICAgICAgICAvLyBUT0RPOiBjaGVjayBpZiBjYXN0IHN1cHBvcnRzIGNvZGVjc1xyXG4gICAgICAgICAgY29uc3QgeyBzdHJlYW0sIGRlc3Ryb3kgfSA9IGF3YWl0IGdldEJ1cm5Jbighc3Vicz8ucmVuZGVyZXIpXHJcbiAgICAgICAgICB0cmFja3MucHVzaChzdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVswXSwgdmlkZW9zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXSlcclxuICAgICAgICAgIHByZXNlbnRhdGlvbkNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigndGVybWluYXRlJywgZGVzdHJveSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdHJhY2tzLnB1c2godmlkZW9zdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVswXSwgdmlkZW9zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChjb25zdCB0cmFjayBvZiB0cmFja3MpIHtcclxuICAgICAgICAgIHBlZXIucGMuYWRkVHJhY2sodHJhY2ssIHZpZGVvc3RyZWFtKVxyXG4gICAgICAgIH1cclxuICAgICAgICBwYXVzZWQgPSBmYWxzZSAvLyB2aWRlbyBwYXVzZXMgZm9yIHNvbWUgcmVhc29uXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGltbWVyc2VQbGF5ZXIoKSB7XHJcbiAgICBpbW1lcnNlZCA9IHRydWVcclxuICAgIGltbWVyc2VUaW1lb3V0ID0gdW5kZWZpbmVkXHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXNldEltbWVyc2UoKSB7XHJcbiAgICBpZiAoaW1tZXJzZVRpbWVvdXQpIHtcclxuICAgICAgY2xlYXJUaW1lb3V0KGltbWVyc2VUaW1lb3V0KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaW1tZXJzZWQgPSBmYWxzZVxyXG4gICAgfVxyXG4gICAgaW1tZXJzZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGltbWVyc2VQbGF5ZXIsIDUgKiAxMDAwKVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaGlkZUJ1ZmZlcmluZygpIHtcclxuICAgIGlmIChidWZmZXJUaW1lb3V0KSB7XHJcbiAgICAgIGNsZWFyVGltZW91dChidWZmZXJUaW1lb3V0KVxyXG4gICAgICBidWZmZXJUaW1lb3V0ID0gbnVsbFxyXG4gICAgICBidWZmZXJpbmcgPSBmYWxzZVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc2hvd0J1ZmZlcmluZygpIHtcclxuICAgIGJ1ZmZlclRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgYnVmZmVyaW5nID0gdHJ1ZVxyXG4gICAgICByZXNldEltbWVyc2UoKVxyXG4gICAgfSwgMTUwKVxyXG4gIH1cclxuICAkOiBuYXZpZ2F0b3IubWVkaWFTZXNzaW9uPy5zZXRQb3NpdGlvblN0YXRlKHtcclxuICAgIGR1cmF0aW9uOiBNYXRoLm1heCgwLCBkdXJhdGlvbiB8fCAwKSxcclxuICAgIHBsYXliYWNrUmF0ZTogMSxcclxuICAgIHBvc2l0aW9uOiBNYXRoLm1heCgwLCBjdXJyZW50VGltZSB8fCAwKVxyXG4gIH0pXHJcbiAgYXN5bmMgZnVuY3Rpb24gbWVkaWFDaGFuZ2UoY3VycmVudCkge1xyXG4gICAgaWYgKGN1cnJlbnQpIHtcclxuICAgICAgY29uc3QgeyByZWxlYXNlX2dyb3VwLCBhbmltZV90aXRsZSwgZXBpc29kZV9udW1iZXIgfSA9IGF3YWl0IGFuaXRvbXlzY3JpcHQoY3VycmVudC5uYW1lKVxyXG4gICAgICAvLyBob25lc3RseSwgdGhpcyBpcyBtYWRlIGZvciBhbmltZSwgYnV0IHdvcmtzIGZhbnRhc3RpYyBmb3IgZXZlcnl0aGluZyBlbHNlLlxyXG4gICAgICBuYW1lID0gW2FuaW1lX3RpdGxlLCBlcGlzb2RlX251bWJlcl0uZmlsdGVyKGkgPT4gaSkuam9pbignIC0gJylcclxuICAgICAgaWYgKCdtZWRpYVNlc3Npb24nIGluIG5hdmlnYXRvcikge1xyXG4gICAgICAgIGNvbnN0IG1ldGFkYXRhID0gbmV3IE1lZGlhTWV0YWRhdGEoe1xyXG4gICAgICAgICAgdGl0bGU6IG5hbWUgfHwgJ1ZpZGVvIFBsYXllcidcclxuICAgICAgICAgIC8vIGFydHdvcms6IFtcclxuICAgICAgICAgIC8vICAge1xyXG4gICAgICAgICAgLy8gICAgIHNyYzogbnVsbCxcclxuICAgICAgICAgIC8vICAgICBzaXplczogJzI1NngyNTYnLFxyXG4gICAgICAgICAgLy8gICAgIHR5cGU6ICdpbWFnZS9qcGcnXHJcbiAgICAgICAgICAvLyAgIH1cclxuICAgICAgICAgIC8vIF1cclxuICAgICAgICB9KVxyXG4gICAgICAgIGlmIChyZWxlYXNlX2dyb3VwKSBtZXRhZGF0YS5hcnRpc3QgPSByZWxlYXNlX2dyb3VwXHJcbiAgICAgICAgbmF2aWdhdG9yLm1lZGlhU2Vzc2lvbi5tZXRhZGF0YSA9IG1ldGFkYXRhXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgJDogbWVkaWFDaGFuZ2UoY3VycmVudClcclxuXHJcbiAgaWYgKCdtZWRpYVNlc3Npb24nIGluIG5hdmlnYXRvcikge1xyXG4gICAgbmF2aWdhdG9yLm1lZGlhU2Vzc2lvbi5zZXRBY3Rpb25IYW5kbGVyKCdwbGF5JywgcGxheVBhdXNlKVxyXG4gICAgbmF2aWdhdG9yLm1lZGlhU2Vzc2lvbi5zZXRBY3Rpb25IYW5kbGVyKCdwYXVzZScsIHBsYXlQYXVzZSlcclxuICAgIG5hdmlnYXRvci5tZWRpYVNlc3Npb24uc2V0QWN0aW9uSGFuZGxlcignbmV4dHRyYWNrJywgcGxheU5leHQpXHJcbiAgICBuYXZpZ2F0b3IubWVkaWFTZXNzaW9uLnNldEFjdGlvbkhhbmRsZXIoJ3ByZXZpb3VzdHJhY2snLCBwbGF5TGFzdClcclxuICAgIG5hdmlnYXRvci5tZWRpYVNlc3Npb24uc2V0QWN0aW9uSGFuZGxlcignc2Vla2ZvcndhcmQnLCBmb3J3YXJkKVxyXG4gICAgbmF2aWdhdG9yLm1lZGlhU2Vzc2lvbi5zZXRBY3Rpb25IYW5kbGVyKCdzZWVrYmFja3dhcmQnLCByZXdpbmQpXHJcbiAgfVxyXG4gIGxldCBzdGF0cyA9IG51bGxcclxuICBsZXQgcmVxdWVzdENhbGxiYWNrID0gbnVsbFxyXG4gIGZ1bmN0aW9uIHRvZ2dsZVN0YXRzKCkge1xyXG4gICAgaWYgKCdyZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrJyBpbiBIVE1MVmlkZW9FbGVtZW50LnByb3RvdHlwZSkge1xyXG4gICAgICBpZiAocmVxdWVzdENhbGxiYWNrKSB7XHJcbiAgICAgICAgc3RhdHMgPSBudWxsXHJcbiAgICAgICAgdmlkZW8uY2FuY2VsVmlkZW9GcmFtZUNhbGxiYWNrKHJlcXVlc3RDYWxsYmFjaylcclxuICAgICAgICByZXF1ZXN0Q2FsbGJhY2sgPSBudWxsXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVxdWVzdENhbGxiYWNrID0gdmlkZW8ucmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaygoYSwgYikgPT4ge1xyXG4gICAgICAgICAgc3RhdHMgPSB7fVxyXG4gICAgICAgICAgaGFuZGxlU3RhdHMoYSwgYilcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVN0YXRzKG5vdywgbWV0YWRhdGEpIHtcclxuICAgIGlmIChzdGF0cykge1xyXG4gICAgICBzdGF0cyA9IHtcclxuICAgICAgICBmcHM6IGF3YWl0IHZpZGVvLmZwcyxcclxuICAgICAgICBwcmVzZW50ZWQ6IG1ldGFkYXRhLnByZXNlbnRlZEZyYW1lcyxcclxuICAgICAgICBwcm9jZXNzaW5nOiBtZXRhZGF0YS5wcm9jZXNzaW5nRHVyYXRpb24gKyAnIG1zJyxcclxuICAgICAgICB2aWV3cG9ydDogdmlkZW8uY2xpZW50V2lkdGggKyAneCcgKyB2aWRlby5jbGllbnRIZWlnaHQsXHJcbiAgICAgICAgcmVzb2x1dGlvbjogdmlkZW8udmlkZW9XaWR0aCArICd4JyArIHZpZGVvLnZpZGVvSGVpZ2h0LFxyXG4gICAgICAgIGJ1ZmZlcjogZ2V0QnVmZmVySGVhbHRoKG1ldGFkYXRhLm1lZGlhVGltZSkgKyAnIHMnXHJcbiAgICAgIH1cclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB2aWRlby5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKGhhbmRsZVN0YXRzKSwgMjAwKVxyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBnZXRCdWZmZXJIZWFsdGgodGltZSkge1xyXG4gICAgZm9yIChsZXQgaW5kZXggPSB2aWRlby5idWZmZXJlZC5sZW5ndGg7IGluZGV4LS07ICkge1xyXG4gICAgICBpZiAodGltZSA8IHZpZGVvLmJ1ZmZlcmVkLmVuZChpbmRleCkgJiYgdGltZSA+IHZpZGVvLmJ1ZmZlcmVkLnN0YXJ0KGluZGV4KSkge1xyXG4gICAgICAgIHJldHVybiBwYXJzZUludCh2aWRlby5idWZmZXJlZC5lbmQoaW5kZXgpIC0gdGltZSlcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3ZlbHRlOndpbmRvdyBvbjprZXlkb3duPXtoYW5kbGVLZXlkb3dufSAvPlxyXG5cclxuPCEtLSBzdmVsdGUtaWdub3JlIGExMXktbWVkaWEtaGFzLWNhcHRpb24gLS0+XHJcbjxkaXZcclxuICBjbGFzcz1cInBsYXllclwiXHJcbiAgY2xhc3M6cGlwXHJcbiAgY2xhc3M6aW1tZXJzZWRcclxuICBjbGFzczpidWZmZXJpbmdcclxuICBiaW5kOnRoaXM9e2NvbnRhaW5lcn1cclxuICBvbjptb3VzZW1vdmU9e3Jlc2V0SW1tZXJzZX1cclxuICBvbjp0b3VjaG1vdmU9e3Jlc2V0SW1tZXJzZX1cclxuICBvbjprZXlwcmVzcz17cmVzZXRJbW1lcnNlfVxyXG4gIG9uOm1vdXNlbGVhdmU9e2ltbWVyc2VQbGF5ZXJ9XHJcbiAgb246Y29udGV4dG1lbnV8cHJldmVudERlZmF1bHQ9e3RvZ2dsZVN0YXRzfT5cclxuICA8dmlkZW9cclxuICAgIHtzcmN9XHJcbiAgICBiaW5kOnRoaXM9e3ZpZGVvfVxyXG4gICAgYXV0b3BsYXlcclxuICAgIGJpbmQ6dm9sdW1lXHJcbiAgICBiaW5kOmR1cmF0aW9uXHJcbiAgICBiaW5kOmN1cnJlbnRUaW1lXHJcbiAgICBiaW5kOnBhdXNlZFxyXG4gICAgYmluZDplbmRlZFxyXG4gICAgYmluZDptdXRlZFxyXG4gICAgb246d2FpdGluZz17c2hvd0J1ZmZlcmluZ31cclxuICAgIG9uOmxvYWRlZGRhdGE9e2hpZGVCdWZmZXJpbmd9XHJcbiAgICBvbjpjYW5wbGF5PXtoaWRlQnVmZmVyaW5nfVxyXG4gICAgb246cGxheWluZz17aGlkZUJ1ZmZlcmluZ31cclxuICAgIG9uOmxvYWRlZG1ldGFkYXRhPXtoaWRlQnVmZmVyaW5nfSAvPlxyXG4gIDwhLS0gc3ZlbHRlLWlnbm9yZSBhMTF5LW1pc3NpbmctY29udGVudCAtLT5cclxuICB7I2lmIHN0YXRzfVxyXG4gICAgPGRpdiBjbGFzcz1cInBvc2l0aW9uLWFic29sdXRlIHRvcC0wIGJnLXZlcnktZGFyayBwLTVcIj5cclxuICAgICAgRlBTOiB7c3RhdHMuZnBzfTxiciAvPlxyXG4gICAgICBQcmVzZW50ZWQgZnJhbWVzOiB7c3RhdHMucHJlc2VudGVkfTxiciAvPlxyXG4gICAgICBGcmFtZSB0aW1lOiB7c3RhdHMucHJvY2Vzc2luZ308YnIgLz5cclxuICAgICAgVmlld3BvcnQ6IHtzdGF0cy52aWV3cG9ydH08YnIgLz5cclxuICAgICAgUmVzb2x1dGlvbjoge3N0YXRzLnJlc29sdXRpb259PGJyIC8+XHJcbiAgICAgIEJ1ZmZlciBoZWFsdGg6IHtzdGF0cy5idWZmZXJ9XHJcbiAgICA8L2Rpdj5cclxuICB7L2lmfVxyXG4gIDxkaXYgY2xhc3M9XCJ0b3Agei01MFwiIC8+XHJcbiAgPGRpdiBjbGFzcz1cIm1pZGRsZSB6LTUwXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY3RybFwiIGRhdGEtbmFtZT1cInBwVG9nZ2xlXCIgb246Y2xpY2s9e3BsYXlQYXVzZX0gb246ZGJsY2xpY2s9e3RvZ2dsZUZ1bGxzY3JlZW59IC8+XHJcbiAgICB7I2lmIHZpZGVvcz8ubGVuZ3RoID4gMX1cclxuICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgZGF0YS1uYW1lPVwicGxheUxhc3RcIiBvbjpjbGljaz17cGxheUxhc3R9PiBza2lwX3ByZXZpb3VzIDwvc3Bhbj5cclxuICAgIHsvaWZ9XHJcbiAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiBkYXRhLW5hbWU9XCJyZXdpbmRcIiBvbjpjbGljaz17cmV3aW5kfT4gZmFzdF9yZXdpbmQgPC9zcGFuPlxyXG4gICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgZGF0YS1uYW1lPVwicGxheVBhdXNlXCIgb246Y2xpY2s9e3BsYXlQYXVzZX0+IHtlbmRlZCA/ICdyZXBsYXknIDogcGF1c2VkID8gJ3BsYXlfYXJyb3cnIDogJ3BhdXNlJ30gPC9zcGFuPlxyXG4gICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgZGF0YS1uYW1lPVwiZm9yd2FyZFwiIG9uOmNsaWNrPXtmb3J3YXJkfT4gZmFzdF9mb3J3YXJkIDwvc3Bhbj5cclxuICAgIHsjaWYgdmlkZW9zPy5sZW5ndGggPiAxfVxyXG4gICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiBkYXRhLW5hbWU9XCJwbGF5TmV4dFwiIG9uOmNsaWNrPXtwbGF5TmV4dH0+IHNraXBfbmV4dCA8L3NwYW4+XHJcbiAgICB7L2lmfVxyXG4gICAgPGRpdiBkYXRhLW5hbWU9XCJidWZmZXJpbmdEaXNwbGF5XCIgLz5cclxuICA8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwiYm90dG9tIHotNTBcIj5cclxuICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgY3RybFwiIHRpdGxlPVwiUGxheS9QYXVzZSBbU3BhY2VdXCIgZGF0YS1uYW1lPVwicGxheVBhdXNlXCIgb246Y2xpY2s9e3BsYXlQYXVzZX0+IHtlbmRlZCA/ICdyZXBsYXknIDogcGF1c2VkID8gJ3BsYXlfYXJyb3cnIDogJ3BhdXNlJ30gPC9zcGFuPlxyXG4gICAgeyNpZiB2aWRlb3M/Lmxlbmd0aCA+IDF9XHJcbiAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgY3RybFwiIHRpdGxlPVwiTmV4dCBbTl1cIiBkYXRhLW5hbWU9XCJwbGF5TmV4dFwiIG9uOmNsaWNrPXtwbGF5TmV4dH0+IHNraXBfbmV4dCA8L3NwYW4+XHJcbiAgICB7L2lmfVxyXG4gICAgPGRpdiBjbGFzcz1cInZvbHVtZVwiPlxyXG4gICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiB0aXRsZT1cIk11dGUgW01dXCIgZGF0YS1uYW1lPVwidG9nZ2xlTXV0ZVwiIG9uOmNsaWNrPXt0b2dnbGVNdXRlfT4ge211dGVkID8gJ3ZvbHVtZV9vZmYnIDogJ3ZvbHVtZV91cCd9IDwvc3Bhbj5cclxuICAgICAgPGlucHV0IGNsYXNzPVwiY3RybFwiIHR5cGU9XCJyYW5nZVwiIG1pbj1cIjBcIiBtYXg9XCIxXCIgc3RlcD1cImFueVwiIGRhdGEtbmFtZT1cInNldFZvbHVtZVwiIGJpbmQ6dmFsdWU9e3ZvbHVtZX0gc3R5bGU9XCItLXZhbHVlOiB7dm9sdW1lICogMTAwfSVcIiAvPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0tIHN2ZWx0ZS1pZ25vcmUgbWlzc2luZy1kZWNsYXJhdGlvbiAtLT5cclxuICAgIHsjaWYgJ2F1ZGlvVHJhY2tzJyBpbiBIVE1MVmlkZW9FbGVtZW50LnByb3RvdHlwZSAmJiB2aWRlbz8uYXVkaW9UcmFja3M/Lmxlbmd0aCA+IDF9XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJhdWRpby10cmFja3MgZHJvcGRvd24gZHJvcHVwIHdpdGgtYXJyb3dcIj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiB0aXRsZT1cIkF1ZGlvIFRyYWNrcyBbVF1cIiBpZD1cImJhdWRpb1wiIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGRhdGEtbmFtZT1cImF1ZGlvQnV0dG9uXCI+XHJcbiAgICAgICAgICBxdWV1ZV9tdXNpY1xyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LWxlZnQgY3RybCBjdXN0b20tcmFkaW8gcC0xMCBwYi01IHRleHQtY2FwaXRhbGl6ZVwiIGFyaWEtbGFiZWxsZWRieT1cImJhdWRpb1wiIGRhdGEtbmFtZT1cInNlbGVjdEF1ZGlvXCI+XHJcbiAgICAgICAgICB7I2VhY2ggdmlkZW8uYXVkaW9UcmFja3MgYXMgdHJhY2t9XHJcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVwiYXVkaW8tcmFkaW8tc2V0XCIgdHlwZT1cInJhZGlvXCIgaWQ9XCJhdWRpby17dHJhY2suaWR9LXJhZGlvXCIgdmFsdWU9e3RyYWNrLmlkfSBjaGVja2VkPXt0cmFjay5lbmFibGVkfSAvPlxyXG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiYXVkaW8te3RyYWNrLmlkfS1yYWRpb1wiIG9uOmNsaWNrPXsoKSA9PiBzZWxlY3RBdWRpbyh0cmFjay5pZCl9PlxyXG4gICAgICAgICAgICAgIHsodHJhY2subGFuZ3VhZ2UgfHwgKCFPYmplY3QudmFsdWVzKHZpZGVvLmF1ZGlvVHJhY2tzKS5zb21lKHRyYWNrID0+IHRyYWNrLmxhbmd1YWdlID09PSAnZW5nJyB8fCB0cmFjay5sYW5ndWFnZSA9PT0gJ2VuJykgPyAnZW5nJyA6IHRyYWNrLmxhYmVsKSkgK1xyXG4gICAgICAgICAgICAgICAgKHRyYWNrLmxhYmVsID8gJyAtICcgKyB0cmFjay5sYWJlbCA6ICcnKX08L2xhYmVsPlxyXG4gICAgICAgICAgey9lYWNofVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIHsvaWZ9XHJcbiAgICA8ZGl2IGNsYXNzPVwiY3RybFwiIGRhdGEtbmFtZT1cInByb2dyZXNzV3JhcHBlclwiIGRhdGEtZWxhcHNlZD1cIjAwOjAwXCIgZGF0YS1yZW1haW5pbmc9XCIwMDowMFwiPlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0c1wiPnt0b1RTKHRhcmdldFRpbWUpfTwvZGl2PlxyXG4gICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgY2xhc3M9XCJjdHJsXCJcclxuICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXHJcbiAgICAgICAgICBtaW49XCIwXCJcclxuICAgICAgICAgIG1heD1cIjFcIlxyXG4gICAgICAgICAgc3RlcD1cImFueVwiXHJcbiAgICAgICAgICBkYXRhLW5hbWU9XCJzZXRQcm9ncmVzc1wiXHJcbiAgICAgICAgICBiaW5kOnZhbHVlPXtwcm9ncmVzc31cclxuICAgICAgICAgIG9uOm1vdXNlZG93bj17aGFuZGxlTW91c2VEb3dufVxyXG4gICAgICAgICAgb246bW91c2V1cD17aGFuZGxlTW91c2VVcH1cclxuICAgICAgICAgIG9uOmlucHV0PXtoYW5kbGVQcm9ncmVzc31cclxuICAgICAgICAgIHN0eWxlPVwiLS12YWx1ZToge3Byb2dyZXNzICogMTAwfSVcIiAvPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0c1wiPnt0b1RTKGR1cmF0aW9uKX08L2Rpdj5cclxuICAgICAgICA8aW1nIGNsYXNzPVwiY3RybFwiIGRhdGEtZWxhcHNlZD1cIjAwOjAwXCIgZGF0YS1uYW1lPVwidGh1bWJuYWlsXCIgYWx0PVwidGh1bWJuYWlsXCIgc3JjPXt0aHVtYm5haWx9IC8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICB7I2lmIHN1YkhlYWRlcnM/Lmxlbmd0aH1cclxuICAgICAgPGRpdiBjbGFzcz1cInN1YnRpdGxlcyBkcm9wZG93biBkcm9wdXAgd2l0aC1hcnJvd1wiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgY3RybFwiIHRpdGxlPVwiU3VidGl0bGVzXCIgaWQ9XCJiY2FwXCIgZGF0YS10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgZGF0YS1uYW1lPVwiY2FwdGlvbnNCdXR0b25cIj5cclxuICAgICAgICAgIHN1YnRpdGxlc1xyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LXJpZ2h0IGN0cmwgY3VzdG9tLXJhZGlvIHAtMTAgcGItNSB0ZXh0LWNhcGl0YWxpemVcIiBhcmlhLWxhYmVsbGVkYnk9XCJiY2FwXCIgZGF0YS1uYW1lPVwic2VsZWN0Q2FwdGlvbnNcIj5cclxuICAgICAgICAgIHsjZWFjaCBzdWJIZWFkZXJzIGFzIHRyYWNrfVxyXG4gICAgICAgICAgICB7I2lmIHRyYWNrfVxyXG4gICAgICAgICAgICAgIDxpbnB1dCBuYW1lPVwic3VidGl0bGUtcmFkaW8tc2V0XCIgdHlwZT1cInJhZGlvXCIgaWQ9XCJzdWJ0aXRsZS17dHJhY2subnVtYmVyfS1yYWRpb1wiIHZhbHVlPXt0cmFjay5udW1lcn0gY2hlY2tlZD17dHJhY2subnVtYmVyID09PSBzdWJzLmN1cnJlbnR9IC8+XHJcbiAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInN1YnRpdGxlLXt0cmFjay5udW1lcn0tcmFkaW9cIiBvbjpjbGljaz17KCkgPT4gc3Vicy5zZWxlY3RDYXB0aW9ucyh0cmFjay5udW1iZXIpfT5cclxuICAgICAgICAgICAgICAgIHsodHJhY2subGFuZ3VhZ2UgfHwgKCFPYmplY3QudmFsdWVzKHN1YnMuaGVhZGVycykuc29tZShoZWFkZXIgPT4gaGVhZGVyLmxhbmd1YWdlID09PSAnZW5nJyB8fCBoZWFkZXIubGFuZ3VhZ2UgPT09ICdlbicpID8gJ2VuZycgOiB0cmFjay50eXBlKSkgK1xyXG4gICAgICAgICAgICAgICAgICAodHJhY2submFtZSA/ICcgLSAnICsgdHJhY2submFtZSA6ICcnKX1cclxuICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICB7L2lmfVxyXG4gICAgICAgICAgey9lYWNofVxyXG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBzdGVwPVwiMC4xXCIgYmluZDp2YWx1ZT17c3ViRGVsYXl9IGNsYXNzPVwiZm9ybS1jb250cm9sIHRleHQtcmlnaHQgZm9ybS1jb250cm9sLXNtXCIgLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICB7L2lmfVxyXG4gICAgeyNpZiAnUHJlc2VudGF0aW9uUmVxdWVzdCcgaW4gd2luZG93ICYmIGNhbkNhc3R9XHJcbiAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgY3RybFwiIHRpdGxlPVwiQ2FzdCBWaWRlbyBbQ11cIiBkYXRhLW5hbWU9XCJ0b2dnbGVDYXN0XCIgb246Y2xpY2s9e3RvZ2dsZUNhc3R9PlxyXG4gICAgICAgIHtwcmVzZW50YXRpb25Db25uZWN0aW9uID8gJ2Nhc3RfY29ubmVjdGVkJyA6ICdjYXN0J31cclxuICAgICAgPC9zcGFuPlxyXG4gICAgey9pZn1cclxuICAgIHsjaWYgJ3BpY3R1cmVJblBpY3R1cmVFbmFibGVkJyBpbiBkb2N1bWVudH1cclxuICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBjdHJsXCIgdGl0bGU9XCJQb3BvdXQgV2luZG93IFtQXVwiIGRhdGEtbmFtZT1cInRvZ2dsZVBvcG91dFwiIG9uOmNsaWNrPXt0b2dnbGVQb3BvdXR9PlxyXG4gICAgICAgIHtwaXAgPyAnZmVhdHVyZWRfdmlkZW8nIDogJ3BpY3R1cmVfaW5fcGljdHVyZSd9XHJcbiAgICAgIDwvc3Bhbj5cclxuICAgIHsvaWZ9XHJcbiAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGN0cmxcIiB0aXRsZT1cIkZ1bGxzY3JlZW4gW0ZdXCIgZGF0YS1uYW1lPVwidG9nZ2xlRnVsbHNjcmVlblwiIG9uOmNsaWNrPXt0b2dnbGVGdWxsc2NyZWVufT5cclxuICAgICAge2lzRnVsbHNjcmVlbiA/ICdmdWxsc2NyZWVuX2V4aXQnIDogJ2Z1bGxzY3JlZW4nfVxyXG4gICAgPC9zcGFuPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuXHJcbjxzdHlsZT5cclxuICAvKiB5ZXMgdGhlc2UgYXJlIGR1cGxpY2F0ZXMgd2l0aCBmcmFtZXdvcmsgKi9cclxuICAucGxheWVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBjb2xvcjogI2VjZWNlYztcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIHotaW5kZXg6IDEwO1xyXG4gICAgd2lsbC1jaGFuZ2U6IHdpZHRoLCByaWdodCwgYm90dG9tLCBwb3NpdGlvbiwgZGlzcGxheTtcclxuICAgIGJvdHRvbTogMnJlbTtcclxuICAgIHJpZ2h0OiAycmVtO1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuMnMgZWFzZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDAwO1xyXG4gIH1cclxuXHJcbiAgLnBsYXllcjpub3QoLm1pbmlwbGF5ZXIpIHtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0cmFuc2l0aW9uOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAucGxheWVyOm5vdCgubWluaXBsYXllcikgLm1pZGRsZSxcclxuICAucGxheWVyOm5vdCgubWluaXBsYXllcikgLmJvdHRvbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcbiAgdmlkZW8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZmxleDogMCAxIGF1dG87XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogIzE5MWMyMDlkO1xyXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpO1xyXG4gIH1cclxuXHJcbiAgLnBsYXllcjpub3QoLm1pbmlwbGF5ZXIpIHZpZGVvIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAucGlwIHtcclxuICAgIGJhY2tncm91bmQ6ICMwMDA7XHJcbiAgfVxyXG5cclxuICAucGlwIDpnbG9iYWwoY2FudmFzKSB7XHJcbiAgICBsZWZ0OiA5OS45JSAhaW1wb3J0YW50O1xyXG4gICAgLypoYWNrIHRvIGhpZGUgdGhlIGNhbnZhcyBidXQgc3RpbGwga2VlcCBpdCB1cGRhdGluZyovXHJcbiAgfVxyXG5cclxuICAubWF0ZXJpYWwtaWNvbnMge1xyXG4gICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICBwYWRkaW5nOiAxLjJyZW07XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcblxyXG4gIC5pbW1lcnNlZCB7XHJcbiAgICBjdXJzb3I6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAuaW1tZXJzZWQgLm1pZGRsZSAuY3RybCxcclxuICAuaW1tZXJzZWQgLmJvdHRvbSB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSBpbWdbc3JjPScgJ10sXHJcbiAgdmlkZW9bc3JjPScnXTpub3QoW3Bvc3Rlcl0pLFxyXG4gIDpmdWxsc2NyZWVuIC5jdHJsW2RhdGEtbmFtZT0ndG9nZ2xlQ2FzdCddLFxyXG4gIDpmdWxsc2NyZWVuIC5jdHJsW2RhdGEtbmFtZT0ndG9nZ2xlUG9wb3V0J10ge1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLnBpcCB2aWRlbyB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgfVxyXG5cclxuICAudG9wIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC44KSwgcmdiYSgwLCAwLCAwLCAwLjQpIDI1JSwgcmdiYSgwLCAwLCAwLCAwLjIpIDUwJSwgcmdiYSgwLCAwLCAwLCAwLjEpIDc1JSwgdHJhbnNwYXJlbnQpO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHRyYW5zaXRpb246IDAuNXMgb3BhY2l0eSBlYXNlO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwO1xyXG4gICAgYm9yZGVyLXRvcC13aWR0aDogMXB4O1xyXG4gICAgYm9yZGVyLWltYWdlLXNsaWNlOiAxO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1pbWFnZS1zb3VyY2U6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgI2U1MjA0YyB2YXIoLS1kb3dubG9hZCksIHJnYmEoMCwgMCwgMCwgMC44KSB2YXIoLS1kb3dubG9hZCkpO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgYXV0byAxZnI7XHJcbiAgfVxyXG4gIC5taWRkbGUge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZmxleDogMTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgLm1pZGRsZSBkaXZbZGF0YS1uYW1lPSdidWZmZXJpbmdEaXNwbGF5J10ge1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgI2ZmZmZmZjAwO1xyXG4gICAgYm9yZGVyLXRvcDogNHB4IHNvbGlkICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGFuaW1hdGlvbjogc3BpbiAxcyBsaW5lYXIgaW5maW5pdGU7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogMC41cyBvcGFjaXR5IGVhc2U7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCA4cHggIzAwMCk7XHJcbiAgfVxyXG5cclxuICAuYnVmZmVyaW5nIC5taWRkbGUgZGl2W2RhdGEtbmFtZT0nYnVmZmVyaW5nRGlzcGxheSddIHtcclxuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIEBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG5cclxuICAgIDEwMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm1pZGRsZSAuY3RybFtkYXRhLW5hbWU9J3BwVG9nZ2xlJ10ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgfVxyXG5cclxuICAubWlkZGxlIC5jdHJsIHtcclxuICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICAgIG1hcmdpbjogMnJlbTtcclxuICAgIHotaW5kZXg6IDM7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIChwb2ludGVyOiBub25lKSwgKHBvaW50ZXI6IGNvYXJzZSkge1xyXG4gICAgLm1pZGRsZSAuY3RybCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubWlkZGxlIC5jdHJsW2RhdGEtbmFtZT0ncGxheVBhdXNlJ10ge1xyXG4gICAgZm9udC1zaXplOiA2cmVtO1xyXG4gIH1cclxuXHJcbiAgLm1pZGRsZSAuY3RybCxcclxuICAuYm90dG9tIC5jdHJsOmhvdmVyIHtcclxuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDhweCAjMDAwKTtcclxuICB9XHJcblxyXG4gIC5ib3R0b20ge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgcmdiYSgwLCAwLCAwLCAwLjgpLCByZ2JhKDAsIDAsIDAsIDAuNCkgMjUlLCByZ2JhKDAsIDAsIDAsIDAuMikgNTAlLCByZ2JhKDAsIDAsIDAsIDAuMSkgNzUlLCB0cmFuc3BhcmVudCk7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgdHJhbnNpdGlvbjogMC41cyBvcGFjaXR5IGVhc2U7XHJcbiAgfVxyXG5cclxuICAuYm90dG9tIC5jdHJsIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ10ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ106Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ106Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcclxuICAgIGhlaWdodDogM3B4O1xyXG4gIH1cclxuXHJcbiAgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmYzYzAwO1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjFzIGVhc2U7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPSdyYW5nZSddOmhvdmVyOjotd2Via2l0LXNsaWRlci10aHVtYiB7XHJcbiAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICB3aWR0aDogMTJweDtcclxuICAgIG1hcmdpbi10b3A6IC00cHg7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPSdyYW5nZSddIHtcclxuICAgIC0tdm9sdW1lOiAwJTtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9J3JhbmdlJ106Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgI2ZmM2MwMCB2YXIoLS12YWx1ZSksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSB2YXIoLS12YWx1ZSkpO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSAudm9sdW1lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICB9XHJcblxyXG4gIC5ib3R0b20gLnZvbHVtZTpob3ZlciBpbnB1dFt0eXBlPSdyYW5nZSddIHtcclxuICAgIHdpZHRoOiA1dnc7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSAudm9sdW1lIGlucHV0W3R5cGU9J3JhbmdlJ10ge1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSBpbnB1dFt0eXBlPSdyYW5nZSddW2RhdGEtbmFtZT0nc2V0UHJvZ3Jlc3MnXSxcclxuICAuYm90dG9tIGRpdltkYXRhLW5hbWU9J3Byb2dyZXNzV3JhcHBlciddLFxyXG4gIC5ib3R0b20gZGl2W2RhdGEtbmFtZT0ncHJvZ3Jlc3NXcmFwcGVyJ10gPiBkaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSBpbnB1dFt0eXBlPSdyYW5nZSddW2RhdGEtbmFtZT0nc2V0UHJvZ3Jlc3MnXSB+IGltZyxcclxuICAuYm90dG9tIGlucHV0W3R5cGU9J3JhbmdlJ11bZGF0YS1uYW1lPSdzZXRQcm9ncmVzcyddOjpiZWZvcmUge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTEwMCUpO1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBsZWZ0OiB2YXIoLS1wcm9ncmVzcyk7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgdHJhbnNpdGlvbjogMC4ycyBvcGFjaXR5IGVhc2U7XHJcbiAgfVxyXG5cclxuICAuYm90dG9tIGlucHV0W3R5cGU9J3JhbmdlJ11bZGF0YS1uYW1lPSdzZXRQcm9ncmVzcyddIH4gaW1nIHtcclxuICAgIHRvcDogLTJyZW07XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgfVxyXG5cclxuICAuYm90dG9tIGlucHV0W3R5cGU9J3JhbmdlJ11bZGF0YS1uYW1lPSdzZXRQcm9ncmVzcyddOjpiZWZvcmUge1xyXG4gICAgdG9wOiAwLjVyZW07XHJcbiAgICBjb250ZW50OiBhdHRyKGRhdGEtZWxhcHNlZCk7XHJcbiAgICBjb2xvcjogI2VjZWNlYztcclxuICB9XHJcblxyXG4gIC5ib3R0b20gaW5wdXRbdHlwZT0ncmFuZ2UnXVtkYXRhLW5hbWU9J3NldFByb2dyZXNzJ106YWN0aXZlIH4gaW1nLFxyXG4gIC5ib3R0b20gaW5wdXRbdHlwZT0ncmFuZ2UnXVtkYXRhLW5hbWU9J3NldFByb2dyZXNzJ106YWN0aXZlOjpiZWZvcmUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcblxyXG4gIC5ib3R0b20gZGl2W2RhdGEtbmFtZT0ncHJvZ3Jlc3NXcmFwcGVyJ10gLnRzIHtcclxuICAgIGNvbG9yOiAjZWNlY2VjO1xyXG4gICAgZm9udC1zaXplOiAxLjhyZW0gIWltcG9ydGFudDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgICBsaW5lLWhlaWdodDogdmFyKC0tYmFzZS1saW5lLWhlaWdodCk7XHJcbiAgICBwYWRkaW5nOiAwIDEuMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKHBvaW50ZXI6IG5vbmUpLCAocG9pbnRlcjogY29hcnNlKSB7XHJcbiAgICAuYm90dG9tIC5jdHJsW2RhdGEtbmFtZT0ncGxheVBhdXNlJ10sXHJcbiAgICAuYm90dG9tIC5jdHJsW2RhdGEtbmFtZT0ncGxheU5leHQnXSxcclxuICAgIC5ib3R0b20gLnZvbHVtZSxcclxuICAgIC5ib3R0b20gLmN0cmxbZGF0YS1uYW1lPSd0b2dnbGVGdWxsc2NyZWVuJ10ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBtYXJnaW4tbGVmdDogMC40cmVtO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAtMC41cmVtO1xyXG4gICAgZmlsdGVyOiBpbnZlcnQoMC44NCk7XHJcbiAgICBwYWRkaW5nLXRvcDogMnJlbTtcclxuICB9XHJcbjwvc3R5bGU+XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxbkJFLE9BQU8sMENBQUMsQ0FBQyxBQUNQLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLE9BQU8sQ0FBRSxJQUFJLENBQ2IsY0FBYyxDQUFFLE1BQU0sQ0FDdEIsZUFBZSxDQUFFLE1BQU0sQ0FDdkIsYUFBYSxDQUFFLE1BQU0sQ0FDckIsS0FBSyxDQUFFLE9BQU8sQ0FDZCxXQUFXLENBQUUsSUFBSSxDQUNqQixXQUFXLENB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*/
.alert.svelte-1qjuqpq{display:block !important;animation:svelte-1qjuqpq-fly-in 0.4s cubic-bezier(0.25, 0.8, 0.25, 1)}@keyframes svelte-1qjuqpq-fly-in{0%{right:-50rem}100%{right:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5zdGFsbFByb21wdC5zdmVsdGUiLCJzb3VyY2VzIjpbIkluc3RhbGxQcm9tcHQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcbiAgbGV0IGRlZmVycmVkUHJvbXB0XHJcblxyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmVpbnN0YWxscHJvbXB0JywgZSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgIGRlZmVycmVkUHJvbXB0ID0gZVxyXG4gIH0pXHJcbiAgYXN5bmMgZnVuY3Rpb24gcHJvbXB0SW5zdGFsbCgpIHtcclxuICAgIGRlZmVycmVkUHJvbXB0LnByb21wdCgpXHJcbiAgICBjb25zdCB7IG91dGNvbWUgfSA9IGF3YWl0IGRlZmVycmVkUHJvbXB0LnVzZXJDaG9pY2VcclxuICAgIGlmIChvdXRjb21lID09PSAnYWNjZXB0ZWQnKSB7XHJcbiAgICAgIGRlZmVycmVkUHJvbXB0ID0gbnVsbFxyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBkaXNtaXNzKCkge1xyXG4gICAgZGVmZXJyZWRQcm9tcHQgPSBudWxsXHJcbiAgfVxyXG48L3NjcmlwdD5cclxuXHJcbnsjaWYgZGVmZXJyZWRQcm9tcHR9XHJcbiAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LXN1Y2Nlc3MgZmlsbGVkLWRtIHNob3dcIiBvbjpjbGljaz17cHJvbXB0SW5zdGFsbH0+XHJcbiAgICA8aDQgY2xhc3M9XCJhbGVydC1oZWFkaW5nXCI+SW5zdGFsbDwvaDQ+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiY2xvc2VcIiB0eXBlPVwiYnV0dG9uXCIgb246Y2xpY2s9e2Rpc21pc3N9PjxzcGFuPsOXPC9zcGFuPjwvYnV0dG9uPlxyXG4gICAgQ2xpY2sgaGVyZSB0byBpbnN0YWxsIHRoZSBhcHAgZm9yIG1vcmUgZmVhdHVyZXMhXHJcbiAgPC9kaXY+XHJcbnsvaWZ9XHJcblxyXG48c3R5bGU+XHJcbiAgLmFsZXJ0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbiAgICBhbmltYXRpb246IGZseS1pbiAwLjRzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xyXG4gIH1cclxuXHJcbiAgQGtleWZyYW1lcyBmbHktaW4ge1xyXG4gICAgMCUge1xyXG4gICAgICByaWdodDogLTUwcmVtO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgIHJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuPC9zdHlsZT5cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCRSxNQUFNLGVBQUMsQ0FBQyxBQUNOLE9BQU8sQ0FBRSxLQUFLLENBQUMsVUFBVSxDQUN6QixTQUFTLENBQUUscUJBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQUFDekQsQ0FBQyxBQUVELFdBQVcscUJBQU8sQ0FBQyxBQUNqQixFQUFFLEFBQUMsQ0FBQyxBQUNGLEtBQUssQ0FBRSxNQUFNLEFBQ2YsQ0FBQyxBQUNELElBQUksQUFBQyxDQUFDLEFBQ0osS0FBSyxDQUFFLENBQUMsQUFDVixDQUFDLEFBQ0gsQ0FBQyJ9*/
.svelte-1memrrp{user-select:none}.sticky-alerts.svelte-1memrrp{--sticky-alerts-top:auto;bottom:1rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBpbXBvcnQgUGxheWVyIGZyb20gJy4vbW9kdWxlcy9QbGF5ZXIuc3ZlbHRlJ1xuICBpbXBvcnQgeyB2aWRlb1J4LCBzdWJ0aXRsZUV4dGVuc2lvbnMgfSBmcm9tICcuL21vZHVsZXMvdXRpbC5qcydcbiAgaW1wb3J0IEluc3RhbGxQcm9tcHQgZnJvbSAnLi9tb2R1bGVzL0luc3RhbGxQcm9tcHQuc3ZlbHRlJ1xuXG4gIGNvbnN0IERPTVBBUlNFUiA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcuYmluZChuZXcgRE9NUGFyc2VyKCkpXG4gIGxldCBuYW1lID0gJydcbiAgbGV0IGZpbGVzXG5cbiAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJy9zdy5qcycpXG4gIC8vIGxvYWRpbmcgZmlsZXNcbiAgZnVuY3Rpb24gaGFuZGxlRHJvcCh7IGRhdGFUcmFuc2ZlciB9KSB7XG4gICAgaGFuZGxlSXRlbXMoWy4uLmRhdGFUcmFuc2Zlci5pdGVtc10pXG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQYXN0ZSh7IGNsaXBib2FyZERhdGEgfSkge1xuICAgIGhhbmRsZUl0ZW1zKFsuLi5jbGlwYm9hcmREYXRhLml0ZW1zXSlcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUl0ZW1zKGl0ZW1zKSB7XG4gICAgY29uc3QgcHJvbWlzZXMgPSBpdGVtcy5tYXAoaXRlbSA9PiB7XG4gICAgICBpZiAoaXRlbS50eXBlLmluZGV4T2YoJ3ZpZGVvLycpID09PSAwKSB7XG4gICAgICAgIHJldHVybiBpdGVtLmdldEFzRmlsZSgpXG4gICAgICB9XG4gICAgICBpZiAoaXRlbS50eXBlID09PSAndGV4dC9wbGFpbicpIHtcbiAgICAgICAgaWYgKGl0ZW0ua2luZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICBpdGVtLmdldEFzU3RyaW5nKHVybCA9PiB7XG4gICAgICAgICAgICAgIGlmICh2aWRlb1J4LnRlc3QodXJsKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSB1cmwuc3Vic3RyaW5nKE1hdGgubWF4KHVybC5sYXN0SW5kZXhPZignXFxcXCcpICsgMiwgdXJsLmxhc3RJbmRleE9mKCcvJykgKyAxKSlcbiAgICAgICAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICAgICAgICB0eXBlOiAndmlkZW8vJ1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtLmtpbmQgPT09ICdmaWxlJykge1xuICAgICAgICAgIHJldHVybiBpdGVtLmdldEFzRmlsZSgpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpdGVtLnR5cGUgPT09ICd0ZXh0L2h0bWwnKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+XG4gICAgICAgICAgaXRlbS5nZXRBc1N0cmluZyhzdHJpbmcgPT4ge1xuICAgICAgICAgICAgY29uc3QgZWxlbXMgPSBET01QQVJTRVIoc3RyaW5nLCAndGV4dC9odG1sJykucXVlcnlTZWxlY3RvckFsbCgndmlkZW8nKVxuICAgICAgICAgICAgaWYgKGVsZW1zLmxlbmd0aCkgcmVzb2x2ZShlbGVtcy5tYXAodmlkZW8gPT4gdmlkZW8/LnNyYykpXG4gICAgICAgICAgICByZXNvbHZlKClcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICB9XG4gICAgICBpZiAoIWl0ZW0udHlwZSkge1xuICAgICAgICBsZXQgZW50cnkgPSBpdGVtLndlYmtpdEdldEFzRW50cnkoKVxuICAgICAgICBpZiAoZW50cnk/LmlzRGlyZWN0b3J5KSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgZm9sZGVyLmNyZWF0ZVJlYWRlcigpLnJlYWRFbnRyaWVzKGFzeW5jIGVudHJpZXMgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBmaWxlUHJvbWlzZXMgPSBlbnRyaWVzLmZpbHRlcihlbnRyeSA9PiBlbnRyeS5pc0ZpbGUpLm1hcChmaWxlID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gZmlsZS5maWxlKHJlc29sdmUpKSlcbiAgICAgICAgICAgICAgcmVzb2x2ZShhd2FpdCBQcm9taXNlLmFsbChmaWxlUHJvbWlzZXMpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2UgaWYgKGVudHJ5ICYmICFlbnRyeS5pc0RpcmVjdG9yeSkge1xuICAgICAgICAgIGlmIChzdWJ0aXRsZUV4dGVuc2lvbnMuc29tZShleHQgPT4gZW50cnkubmFtZS5lbmRzV2l0aChleHQpKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gZW50cnkuZmlsZShyZXNvbHZlKSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICByZXR1cm5cbiAgICB9KVxuICAgIGZpbGVzID0gZmlsZXMuY29uY2F0KChhd2FpdCBQcm9taXNlLmFsbChwcm9taXNlcykpLmZsYXQoKS5maWx0ZXIoaSA9PiBpKSlcbiAgICBjb25zb2xlLmxvZyhmaWxlcylcbiAgfVxuXG4gIGlmICgnbGF1bmNoUXVldWUnIGluIHdpbmRvdykge1xuICAgIGxhdW5jaFF1ZXVlLnNldENvbnN1bWVyKGFzeW5jIGxhdW5jaFBhcmFtcyA9PiB7XG4gICAgICBpZiAoIWxhdW5jaFBhcmFtcy5maWxlcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCBwcm9taXNlcyA9IGxhdW5jaFBhcmFtcy5maWxlcy5tYXAoZmlsZSA9PiBmaWxlLmdldEZpbGUoKSlcbiAgICAgIC8vIGZvciBzb21lIGZ1Y2tpbmcgcmVhc29uLCB0aGUgc2FtZSBmaWxlIGNhbiBnZXQgcGFzc2VkIG11bHRpcGxlIHRpbWVzLCB3aHk/IEkgc3RpbGwgd2FudCB0byBmdXR1cmUtcHJvb2YgbXVsdGktZmlsZXNcbiAgICAgIGZpbGVzID0gKGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKSkuZmlsdGVyKChmaWxlLCBpbmRleCwgYWxsKSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgYWxsLmZpbmRJbmRleChzZWFyY2ggPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHNlYXJjaC5uYW1lID09PSBmaWxlLm5hbWUgJiYgc2VhcmNoLnNpemUgPT09IGZpbGUuc2l6ZSAmJiBzZWFyY2gubGFzdE1vZGlmaWVkID09PSBmaWxlLmxhc3RNb2RpZmllZFxuICAgICAgICAgIH0pID09PSBpbmRleFxuICAgICAgICApXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbiAgZnVuY3Rpb24gaGFuZGxlUG9wdXAoKSB7XG4gICAgaWYgKCFmaWxlcy5sZW5ndGgpIHtcbiAgICAgIGxldCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcbiAgICAgIGlucHV0LnR5cGUgPSAnZmlsZSdcbiAgICAgIGlucHV0Lm11bHRpcGxlID0gJ211bHRpcGxlJ1xuXG4gICAgICBpbnB1dC5vbmNoYW5nZSA9ICh7IHRhcmdldCB9KSA9PiB7XG4gICAgICAgIGZpbGVzID0gWy4uLnRhcmdldC5maWxlc11cbiAgICAgICAgaW5wdXQgPSBudWxsXG4gICAgICB9XG4gICAgICBpbnB1dC5jbGljaygpXG4gICAgfVxuICB9XG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz1cInN0aWNreS1hbGVydHMgZC1mbGV4IGZsZXgtY29sdW1uLXJldmVyc2VcIj5cbiAgPEluc3RhbGxQcm9tcHQgLz5cbjwvZGl2PlxuPGRpdiBjbGFzcz1cInBhZ2Utd3JhcHBlclwiIG9uOmNsaWNrPXtoYW5kbGVQb3B1cH0+XG4gIDxQbGF5ZXIgYmluZDpmaWxlcyBiaW5kOm5hbWUgLz5cbjwvZGl2PlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT57bmFtZSB8fCAnVmlkZW8gUGxheWVyJ308L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPHN2ZWx0ZTp3aW5kb3cgb246ZHJvcHxwcmV2ZW50RGVmYXVsdD17aGFuZGxlRHJvcH0gb246ZHJhZ292ZXJ8cHJldmVudERlZmF1bHQgb246cGFzdGV8cHJldmVudERlZmF1bHQ9e2hhbmRsZVBhc3RlfSAvPlxuXG48c3R5bGU+XG4gICoge1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICB9XG4gIC5zdGlja3ktYWxlcnRzIHtcbiAgICAtLXN0aWNreS1hbGVydHMtdG9wOiBhdXRvO1xuICAgIGJvdHRvbTogMXJlbTtcbiAgfVxuPC9zdHlsZT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzSEUsZUFBRSxDQUFDLEFBQ0QsV0FBVyxDQUFFLElBQUksQUFDbkIsQ0FBQyxBQUNELGNBQWMsZUFBQyxDQUFDLEFBQ2QsbUJBQW1CLENBQUUsSUFBSSxDQUN6QixNQUFNLENBQUUsSUFBSSxBQUNkLENBQUMifQ==*/

/*# sourceMappingURL=bundle.css.map*/