.player.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{position:absolute;display:flex;flex-direction:column;justify-content:center;align-content:center;color:#ececec;user-select:none;font-family:Roboto, Arial, Helvetica, sans-serif;z-index:10;will-change:width, right, bottom, position, display;bottom:2rem;right:2rem;width:25%;height:auto;transition:width 0.2s ease;overflow:hidden}.player.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o:not(.miniplayer){bottom:0;right:0;position:relative;width:100%;height:100%;transition:none !important}.player.svelte-eihk1o:not(.miniplayer) .middle.svelte-eihk1o.svelte-eihk1o,.player.svelte-eihk1o:not(.miniplayer) .bottom.svelte-eihk1o.svelte-eihk1o{display:flex}video.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{position:relative;flex:0 1 auto;z-index:-1;width:100%;height:100%;background:#191c209d;backdrop-filter:blur(10px)}.player.svelte-eihk1o:not(.miniplayer) video.svelte-eihk1o.svelte-eihk1o{position:absolute;background:none}a.miniplayer.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{z-index:5;position:absolute;width:100%;height:100%}.pip.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{background:#000}.pip.svelte-eihk1o canvas.svelte-eihk1o.svelte-eihk1o{left:99.9% !important}.material-icons.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{font-size:2.2rem;padding:1.2rem;transition:all 0.2s ease;display:flex}.immersed.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{cursor:none}.immersed.svelte-eihk1o .middle .ctrl.svelte-eihk1o.svelte-eihk1o,.immersed.svelte-eihk1o .bottom.svelte-eihk1o.svelte-eihk1o{opacity:0}.player.svelte-eihk1o:not(.miniplayer) a.miniplayer.svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o img[src=' '].svelte-eihk1o.svelte-eihk1o,video[src=''].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o:not([poster]){display:none !important}.pip.svelte-eihk1o video.svelte-eihk1o.svelte-eihk1o{visibility:hidden}.top.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{background:linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4) 25%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.1) 75%, transparent);display:none;transition:0.5s opacity ease;border-width:0;border-top-width:1px;border-image-slice:1;border-style:solid;border-image-source:linear-gradient(90deg, #e5204c var(--download), rgba(0, 0, 0, 0.8) var(--download));grid-template-columns:1fr auto 1fr}.middle.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{height:100%;flex:1;display:none;flex-direction:row;position:relative;justify-content:center;align-items:center}.middle.svelte-eihk1o div[data-name='bufferingDisplay'].svelte-eihk1o.svelte-eihk1o{border:4px solid #ffffff00;border-top:4px solid #fff;border-radius:50%;width:40px;height:40px;animation:svelte-eihk1o-spin 1s linear infinite;opacity:0;transition:0.5s opacity ease;position:absolute;filter:drop-shadow(0 0 8px #000)}.buffering.svelte-eihk1o .middle div[data-name='bufferingDisplay'].svelte-eihk1o.svelte-eihk1o{opacity:1 !important}@keyframes svelte-eihk1o-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.middle.svelte-eihk1o .ctrl[data-name='ppToggle'].svelte-eihk1o.svelte-eihk1o{position:absolute;width:100%;height:100%;display:block;z-index:2}.middle.svelte-eihk1o .ctrl.svelte-eihk1o.svelte-eihk1o{font-size:4rem;margin:2rem;z-index:3;display:none}@media(pointer: none), (pointer: coarse){.middle.svelte-eihk1o .ctrl.svelte-eihk1o.svelte-eihk1o{display:flex}}.middle.svelte-eihk1o .ctrl[data-name='playPause'].svelte-eihk1o.svelte-eihk1o{font-size:6rem}.middle.svelte-eihk1o .ctrl.svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o .ctrl.svelte-eihk1o.svelte-eihk1o:hover{filter:drop-shadow(0 0 8px #000)}.bottom.svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{background:linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4) 25%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.1) 75%, transparent);display:none;transition:0.5s opacity ease}.bottom.svelte-eihk1o .ctrl.svelte-eihk1o.svelte-eihk1o{cursor:pointer}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{-webkit-appearance:none;background:transparent;margin:0;cursor:pointer;height:8px}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o:focus{outline:none}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o::-webkit-slider-runnable-track{height:3px}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o::-webkit-slider-thumb{height:0;width:0;border-radius:50%;background:#ff3c00;-webkit-appearance:none;appearance:none;transition:all 0.1s ease}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o:hover::-webkit-slider-thumb{height:12px;width:12px;margin-top:-4px}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o{--volume:0%}input[type='range'].svelte-eihk1o.svelte-eihk1o.svelte-eihk1o::-webkit-slider-runnable-track{background:linear-gradient(90deg, #ff3c00 var(--value), rgba(255, 255, 255, 0.2) var(--value))}.bottom.svelte-eihk1o .volume.svelte-eihk1o.svelte-eihk1o{display:flex;width:auto}.bottom.svelte-eihk1o .volume:hover input[type='range'].svelte-eihk1o.svelte-eihk1o{width:5vw;display:inline-block;transition:all 0.1s ease;margin-right:1rem}.bottom.svelte-eihk1o .volume input[type='range'].svelte-eihk1o.svelte-eihk1o{width:0;transition:all 0.1s ease;height:100%}.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o div[data-name='progressWrapper'].svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o div[data-name='progressWrapper'].svelte-eihk1o>div.svelte-eihk1o{display:flex;width:100%;height:100%;position:relative}.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o~img.svelte-eihk1o,.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o.svelte-eihk1o::before{pointer-events:none;opacity:0;position:absolute;transform:translate(-50%, -100%);font-family:Roboto, Arial, Helvetica, sans-serif;white-space:nowrap;align-self:center;left:var(--progress);font-weight:600;transition:0.2s opacity ease}.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o~img.svelte-eihk1o{top:-2rem;width:150px}.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o.svelte-eihk1o::before{top:0.5rem;content:attr(data-elapsed);color:#ececec}.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o:active~img.svelte-eihk1o,.bottom.svelte-eihk1o input[type='range'][data-name='setProgress'].svelte-eihk1o.svelte-eihk1o:active::before{opacity:1}.bottom.svelte-eihk1o div[data-name='progressWrapper'] .ts.svelte-eihk1o.svelte-eihk1o{color:#ececec;font-size:1.8rem !important;white-space:nowrap;align-self:center;cursor:default;line-height:var(--base-line-height);padding:0 1.2rem;font-weight:600}@media(pointer: none), (pointer: coarse){.bottom.svelte-eihk1o .ctrl[data-name='playPause'].svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o .ctrl[data-name='playNext'].svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o .volume.svelte-eihk1o.svelte-eihk1o,.bottom.svelte-eihk1o .ctrl[data-name='toggleFullscreen'].svelte-eihk1o.svelte-eihk1o{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
.svelte-9sfuxi{user-select:none}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBpbXBvcnQgUGxheWVyIGZyb20gJy4vbW9kdWxlcy9QbGF5ZXIuc3ZlbHRlJ1xuICBpbXBvcnQge3ZpZGVvUnh9IGZyb20gJy4vbW9kdWxlcy91dGlsLmpzJ1xuXG4gIGNvbnN0IERPTVBBUlNFUiA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcuYmluZChuZXcgRE9NUGFyc2VyKCkpXG4gIGxldCBuYW1lID0gJydcbiAgbGV0IGZpbGVzXG5cbiAgLy8gbG9hZGluZyBmaWxlc1xuICBmdW5jdGlvbiBoYW5kbGVEcm9wKHsgZGF0YVRyYW5zZmVyIH0pIHtcbiAgICBoYW5kbGVJdGVtcyhbLi4uZGF0YVRyYW5zZmVyLml0ZW1zXSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBhc3RlKHsgY2xpcGJvYXJkRGF0YSB9KSB7XG4gICAgaGFuZGxlSXRlbXMoWy4uLmNsaXBib2FyZERhdGEuaXRlbXNdKVxuICB9XG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUl0ZW1zKGl0ZW1zKSB7XG4gICAgY29uc3QgcHJvbWlzZXMgPSBpdGVtcy5tYXAoaXRlbSA9PiB7XG4gICAgICBpZiAoaXRlbS50eXBlLmluZGV4T2YoJ3ZpZGVvLycpID09PSAwKSB7XG4gICAgICAgIHJldHVybiBpdGVtLmdldEFzRmlsZSgpXG4gICAgICB9XG4gICAgICBpZiAoaXRlbS50eXBlID09PSAndGV4dC9wbGFpbicpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT5cbiAgICAgICAgICBpdGVtLmdldEFzU3RyaW5nKHVybCA9PiB7XG4gICAgICAgICAgICBpZiAodmlkZW9SeC50ZXN0KHVybCkpIHtcbiAgICAgICAgICAgICAgY29uc3QgZmlsZW5hbWUgPSB1cmwuc3Vic3RyaW5nKE1hdGgubWF4KHVybC5sYXN0SW5kZXhPZignXFxcXCcpLCB1cmwubGFzdEluZGV4T2YoJy8nKSkgKyAxKVxuICAgICAgICAgICAgICBjb25zdCBuYW1lID0gZmlsZW5hbWUuc3Vic3RyaW5nKDAsIGZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykpIHx8IGZpbGVuYW1lXG4gICAgICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgdXJsLFxuICAgICAgICAgICAgICAgIHR5cGU6ICd2aWRlby8nXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNvbHZlKClcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICB9XG4gICAgICBpZiAoaXRlbS50eXBlID09PSAndGV4dC9odG1sJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PlxuICAgICAgICAgIGl0ZW0uZ2V0QXNTdHJpbmcoc3RyaW5nID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1zID0gRE9NUEFSU0VSKHN0cmluZywgJ3RleHQvaHRtbCcpLnF1ZXJ5U2VsZWN0b3JBbGwoJ3ZpZGVvJylcbiAgICAgICAgICAgIGlmIChlbGVtcy5sZW5ndGgpIHJlc29sdmUoZWxlbXMubWFwKHZpZGVvID0+IHZpZGVvPy5zcmMpKVxuICAgICAgICAgICAgcmVzb2x2ZSgpXG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgfVxuICAgICAgaWYgKCFpdGVtLnR5cGUpIHtcbiAgICAgICAgbGV0IGZvbGRlciA9IGl0ZW0ud2Via2l0R2V0QXNFbnRyeSgpXG4gICAgICAgIGZvbGRlciA9IGZvbGRlci5pc0RpcmVjdG9yeSAmJiBmb2xkZXJcbiAgICAgICAgaWYgKGZvbGRlcikge1xuICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIGZvbGRlci5jcmVhdGVSZWFkZXIoKS5yZWFkRW50cmllcyhhc3luYyBlbnRyaWVzID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgZmlsZVByb21pc2VzID0gZW50cmllcy5maWx0ZXIoZW50cnkgPT4gZW50cnkuaXNGaWxlKS5tYXAoZmlsZSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IGZpbGUuZmlsZShyZXNvbHZlKSkpXG4gICAgICAgICAgICAgIHJlc29sdmUoYXdhaXQgUHJvbWlzZS5hbGwoZmlsZVByb21pc2VzKSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHJldHVyblxuICAgIH0pXG4gICAgZmlsZXMgPSAoYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpKS5mbGF0KCkuZmlsdGVyKGkgPT4gaSlcbiAgfVxuXG4gIGlmICgnbGF1bmNoUXVldWUnIGluIHdpbmRvdykge1xuICAgIGxhdW5jaFF1ZXVlLnNldENvbnN1bWVyKGFzeW5jIGxhdW5jaFBhcmFtcyA9PiB7XG4gICAgICBpZiAoIWxhdW5jaFBhcmFtcy5maWxlcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCBwcm9taXNlcyA9IGxhdW5jaFBhcmFtcy5maWxlcy5tYXAoZmlsZSA9PiBmaWxlLmdldEZpbGUoKSlcbiAgICAgIC8vIGZvciBzb21lIGZ1Y2tpbmcgcmVhc29uLCB0aGUgc2FtZSBmaWxlIGNhbiBnZXQgcGFzc2VkIG11bHRpcGxlIHRpbWVzLCB3aHk/IEkgc3RpbGwgd2FudCB0byBmdXR1cmUtcHJvb2YgbXVsdGktZmlsZXNcbiAgICAgIGZpbGVzID0gKGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKSkuZmlsdGVyKChmaWxlLCBpbmRleCwgYWxsKSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgYWxsLmZpbmRJbmRleChzZWFyY2ggPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHNlYXJjaC5uYW1lID09PSBmaWxlLm5hbWUgJiYgc2VhcmNoLnNpemUgPT09IGZpbGUuc2l6ZSAmJiBzZWFyY2gubGFzdE1vZGlmaWVkID09PSBmaWxlLmxhc3RNb2RpZmllZFxuICAgICAgICAgIH0pID09PSBpbmRleFxuICAgICAgICApXG4gICAgICB9KVxuICAgICAgY29uc29sZS5sb2coZmlsZXMpXG4gICAgfSlcbiAgfVxuICBmdW5jdGlvbiBoYW5kbGVQb3B1cCgpIHtcbiAgICBpZiAoIWZpbGVzLmxlbmd0aCkge1xuICAgICAgbGV0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKVxuICAgICAgaW5wdXQudHlwZSA9ICdmaWxlJ1xuICAgICAgaW5wdXQubXVsdGlwbGUgPSAnbXVsdGlwbGUnXG5cbiAgICAgIGlucHV0Lm9uY2hhbmdlID0gKHsgdGFyZ2V0IH0pID0+IHtcbiAgICAgICAgZmlsZXMgPSBbLi4udGFyZ2V0LmZpbGVzXVxuICAgICAgICBpbnB1dCA9IG51bGxcbiAgICAgIH1cbiAgICAgIGlucHV0LmNsaWNrKClcbiAgICB9XG4gIH1cbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwicGFnZS13cmFwcGVyIHdpdGgtbmF2YmFyLWZpeGVkLWJvdHRvbVwiIG9uOmNsaWNrPXtoYW5kbGVQb3B1cH0+XG4gIDxQbGF5ZXIgYmluZDpmaWxlcyBiaW5kOm5hbWUgLz5cbjwvZGl2PlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT57bmFtZSB8fCAnVmlkZW8gUGxheWVyJ308L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPHN2ZWx0ZTp3aW5kb3dcbiAgb246ZHJvcHxwcmV2ZW50RGVmYXVsdD17aGFuZGxlRHJvcH1cbiAgb246ZHJhZ292ZXJ8cHJldmVudERlZmF1bHRcbiAgb246cGFzdGV8cHJldmVudERlZmF1bHQ9e2hhbmRsZVBhc3RlfSAvPlxuXG48c3R5bGU+XG4gICoge1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICB9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThHRSxjQUFFLENBQUMsQUFDRCxXQUFXLENBQUUsSUFBSSxBQUNuQixDQUFDIn0=*/

/*# sourceMappingURL=bundle.css.map*/